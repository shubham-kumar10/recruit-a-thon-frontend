{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-jobs/add-jobs.component.ts","./src/app/add-jobs/add-jobs.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/applied-jobs/applied-jobs.component.ts","./src/app/applied-jobs/applied-jobs.component.html","./src/app/constants/application.constants.ts","./src/app/constants/errors.constants.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/edit-profile/edit-profile.component.ts","./src/app/edit-profile/edit-profile.component.html","./src/app/edit-profile/education-form/education-form.component.ts","./src/app/edit-profile/education-form/education-form.component.html","./src/app/edit-profile/experience-form/experience-form.component.ts","./src/app/edit-profile/experience-form/experience-form.component.html","./src/app/edit-profile/personal-form/personal-form.component.ts","./src/app/edit-profile/personal-form/personal-form.component.html","./src/app/edit-profile/project-form/project-form.component.ts","./src/app/edit-profile/project-form/project-form.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/jobcard/jobcard.component.ts","./src/app/jobcard/jobcard.component.html","./src/app/jobs/jobs.component.ts","./src/app/jobs/jobs.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/profile-card/profile-card.component.ts","./src/app/profile-card/profile-card.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/saved-jobs/saved-jobs.component.ts","./src/app/saved-jobs/saved-jobs.component.html","./src/app/search-area/search-area.component.ts","./src/app/search-area/search-area.component.html","./src/app/services/app.service.ts","./src/app/services/application.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/authentication.service.ts","./src/app/services/candidate.service.ts","./src/app/services/job.service.ts","./src/app/services/sign-up.service.ts","./src/app/side-bar/side-bar.component.ts","./src/app/side-bar/side-bar.component.html","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/upload-file/upload-file.component.ts","./src/app/upload-file/upload-file.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\nimport { CandidateService } from 'src/app/services/candidate.service';\nimport { Candidate } from 'src/app/models/candidate.model';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Job, Process } from '../models/jobs.model';\nimport { JobService } from '../services/job.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-add-jobs',\n  templateUrl: './add-jobs.component.html',\n  styleUrls: ['./add-jobs.component.css']\n})\nexport class AddJobsComponent implements OnInit {\n  jobDetailsForm: FormGroup;\n  indeterminate = false;\n  processData: Process;\n  constructor(private fb: FormBuilder, private candidateService: CandidateService,\n    public jobService: JobService, private authService: AuthenticationService, private datePipe: DatePipe) { }\n\n  ngOnInit(): void {\n\n    this.jobDetailsForm = this.fb.group({\n      companyName: ['', Validators.required],\n      location: ['', Validators.required],\n      pointOfContact: ['', Validators.required],\n      compensation: ['', Validators.required],\n      vacancies: ['', Validators.required],\n      position: ['', Validators.required],\n      description: ['', Validators.required],\n      minimumEducation: ['', Validators.required],\n      minimumExperience: ['', Validators.required],\n\n      finaldescription: ['', Validators.required],\n      finallocation: ['', Validators.required],\n      duration: ['', Validators.required],\n\n      travelRequired: ['', Validators.required],\n      travelPercent: ['', Validators.required],\n      rounds: this.fb.array([this.createRoundFormGroup()]),\n      skillsRequired: this.fb.array([this.createSkillFormGroup()]),\n    });\n\n  }\n\n  public addRoundFormGroup() {\n    const rounds = this.jobDetailsForm.get('rounds') as FormArray;\n    rounds.push(this.createRoundFormGroup());\n  }\n\n  public removeOrClearRound(i: number) {\n    const rounds = this.jobDetailsForm.get('rounds') as FormArray;\n    if (rounds.length > 1) {\n      rounds.removeAt(i);\n    } else {\n      rounds.reset();\n    }\n  }\n\n  private createRoundFormGroup(): FormGroup {\n    return new FormGroup({\n      location: new FormControl(''),\n      duration: new FormControl(''),\n      pointOfContact: new FormControl(''),\n      description: new FormControl(''),\n    });\n  }\n\n  public addSkillFormGroup() {\n    const skillsRequired = this.jobDetailsForm.get('skillsRequired') as FormArray;\n    skillsRequired.push(this.createSkillFormGroup());\n  }\n\n  public removeOrClearSkill(i: number) {\n    const skillsRequired = this.jobDetailsForm.get('skillsRequired') as FormArray;\n    if (skillsRequired.length > 1) {\n      skillsRequired.removeAt(i);\n    } else {\n      skillsRequired.reset();\n    }\n  }\n\n  private createSkillFormGroup(): FormGroup {\n    return new FormGroup({\n      name: new FormControl(''),\n      experience: new FormControl(''),\n    });\n  }\n\n  postJob() {\n    const datepipe: DatePipe = new DatePipe('en-US');\n    let formattedDate = datepipe.transform(new Date(), 'DD-MMM-YYYY HH:mm:ss');\n    if (this.jobDetailsForm.dirty) {\n\n      this.processData = {\n        processId: null,\n        description: this.jobDetailsForm.get('finaldescription').value,\n        location: this.jobDetailsForm.get('finallocation').value,\n        duration: this.jobDetailsForm.get('duration').value,\n        rounds: this.jobDetailsForm.value.rounds,\n      };\n      const jobData: Job = {\n        jobId: null,\n        postedOn: this.datePipe.transform(new Date(), 'yyy-MM-dd HH:mm:ss.SSS'),\n        companyName: this.jobDetailsForm.get('companyName').value,\n        description: this.jobDetailsForm.get('description').value,\n        location: this.jobDetailsForm.get('location').value,\n        pointOfContact: this.jobDetailsForm.get('pointOfContact').value,\n        compensation: this.jobDetailsForm.get('compensation').value,\n        travelRequired: this.jobDetailsForm.get('travelRequired').value,\n        travelPercent: this.jobDetailsForm.get('travelPercent').value,\n        vacancies: this.jobDetailsForm.get('vacancies').value,\n        position: this.jobDetailsForm.get('position').value,\n        minimumExperience: this.jobDetailsForm.get('minimumExperience').value,\n        minimumEducation: this.jobDetailsForm.get('minimumEducation').value,\n        skillsRequired: this.jobDetailsForm.value.skillsRequired,\n        process: this.processData,\n      };\n\n      console.log('Formdata>>>', jobData);\n      this.jobService.addJob(jobData).subscribe((response) => {\n        console.log('Responsedata>>>', response);\n      });\n      // this.data = this.candidateService.getCandidateDetails();\n      // this.data.education = this.educationDetailsForm.value.educations;\n      // this.candidateService.setCandidateDetails(this.data);\n    }\n  }\n\n}\n","<form [formGroup]=\"jobDetailsForm\">\n    <div>\n        <div class=\"row\">\n            <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n                <div class=\"card border-0 rounded-0 h-100\">\n                    <div class=\"card-title mb-1 p-3\">\n                        <h5>Post a Job!</h5>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"form-group row\">\n                            <label for=\"companyName\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Comapany:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='companyName' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Company Name\" formControlName=\"companyName\"\n                                    required>\n                            </div>\n                            <label for=\"position\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                Position:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='position' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Enter position\" formControlName=\"position\"\n                                    required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"location\" class=\"col-sm-2 col-form-label text-nowrap\">Location:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='location' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Location\" formControlName=\"location\" required>\n                            </div>\n                            <label for=\"compensation\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                Salary(LPA):\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input class=\"form-control\" id=\"compensation\" placeholder=\"Compensation\" type=\"text\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    maxlength=\"10\" formControlName=\"compensation\" required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"pointOfContact\" class=\"col-sm-2 col-form-label text-nowrap\">Point of\n                                Contact:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='pointOfContact' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"P.O.C\" formControlName=\"pointOfContact\" required>\n                            </div>\n                            <label for=\"vacancies\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                No. of vacancies:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input class=\"form-control\" id=\"vacancies\" placeholder=\"Vacancies\" type=\"text\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    maxlength=\"10\" formControlName=\"vacancies\" required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"description\" class=\"col-sm-2 col-form-label text-nowrap\">Description:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='description' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Describe...\" formControlName=\"description\"\n                                    required>\n                            </div>\n                            <label for=\"minimumEducation\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                Qualification:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='minimumEducation' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Course\" formControlName=\"minimumEducation\"\n                                    required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"minimumExperience\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Experience:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='minimumExperience' maxlength=\"2\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    class=\"form-control\" placeholder=\"Min experience\"\n                                    formControlName=\"minimumExperience\" required>\n                            </div>\n                            <div class=\"offset-sm-1  col-xs-4\">\n                                <mat-checkbox class=\"col-12\" [(ngModel)]=\"indeterminate\"\n                                    formControlName=\"travelRequired\" color=\"primary\">Traveling\n                                    Required?\n                                </mat-checkbox>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"travelPercent\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Travelling(in %):</label>\n                            <div class=\"col-xs-4\">\n                                <input class=\"form-control\" id=\"travelPercent\" placeholder=\"Travel %\" type=\"text\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    maxlength=\"3\" formControlName=\"travelPercent\" required>\n                            </div>\n\n                        </div>\n                        <mat-divider></mat-divider>\n                        <br />\n                        <h5>Skillset:</h5>\n                        <div formArrayName=\"skillsRequired\">\n                            <div *ngFor=\"let skill of jobDetailsForm.get('skillsRequired')['controls']; let i = index\"\n                                [formGroupName]=\"i\">\n                                <div class=\"form-group row\">\n                                    <label for=\"name\" class=\"col-sm-2 col-form-label text-nowrap\">Skills\n                                        {{i+1}}:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='name' class=\"form-control\" placeholder=\"Skills {{i+1}}\"\n                                            formControlName=\"name\" required>\n                                    </div>\n                                    <label for=\"experience\"\n                                        class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">Experience:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='experience' class=\"form-control\"\n                                            oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                            maxlength=\"2\" placeholder=\"Experience (in yrs)\" formControlName=\"experience\"\n                                            required>\n                                    </div>\n                                    <div class=\"col-xs-4\">\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                                            (click)=\"addSkillFormGroup()\" matTooltip=\"Add\">\n                                            <mat-icon>add_circle_outline</mat-icon>\n                                        </button>\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\"\n                                            aria-label=\"Remove/clear\" (click)=\"removeOrClearSkill(i)\"\n                                            matTooltip=\"Remove\">\n                                            <mat-icon>highlight_off</mat-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                                <mat-divider></mat-divider><br />\n                            </div>\n                        </div>\n                        <br />\n                        <h5>Interview Process:</h5>\n                        <br />\n                        <div class=\"form-group row\">\n                            <label for=\"finaldescription\" class=\"col-sm-2 col-form-label text-nowrap\">Interview\n                                type:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='finaldescription' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Describe...\" formControlName=\"finaldescription\"\n                                    required>\n                            </div>\n                            <label for=\"finallocation\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                Interview Location:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='finallocation' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Course\" formControlName=\"finallocation\" required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"duration\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Duration(in hrs):\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input class=\"form-control\" id=\"duration\" placeholder=\"Duration\" type=\"text\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    maxlength=\"2\" formControlName=\"duration\" required>\n                            </div>\n                        </div>\n\n                        <div formArrayName=\"rounds\">\n                            <div *ngFor=\"let round of jobDetailsForm.get('rounds')['controls']; let i = index\"\n                                [formGroupName]=\"i\">\n                                <h6>Round {{i+1}}:</h6>\n                                <div class=\"form-group row\">\n                                    <label for=\"location\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                        Interview Location:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='location' maxlength=\"30\"\n                                            onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                            class=\"form-control\" placeholder=\"Course\" formControlName=\"location\"\n                                            required>\n                                    </div>\n                                    <label for=\"duration\" class=\"offset-sm-1  col-sm-2 col-form-label text-nowrap\">\n                                        Duration(in hrs):\n                                    </label>\n                                    <div class=\"col-xs-4\">\n                                        <input class=\"form-control\" id=\"duration\" placeholder=\"Duration\" type=\"text\"\n                                            oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                            maxlength=\"2\" formControlName=\"duration\" required>\n                                    </div>\n\n                                    <div class=\"col-xs-4\">\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                                            (click)=\"addRoundFormGroup()\" matTooltip=\"Add\">\n                                            <mat-icon>add_circle_outline</mat-icon>\n                                        </button>\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\"\n                                            aria-label=\"Remove/clear\" (click)=\"removeOrClearRound(i)\"\n                                            matTooltip=\"Remove\">\n                                            <mat-icon>highlight_off</mat-icon>\n                                        </button>\n                                    </div>\n\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label for=\"description\"\n                                        class=\"col-sm-2 col-form-label text-nowrap\">Description:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='degree' class=\"form-control\"\n                                            placeholder=\"Describe your project\" formControlName=\"description\" required>\n                                    </div>\n                                    <label for=\"pointOfContact\"\n                                        class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">Point of\n                                        Contact:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='degree' class=\"form-control\" placeholder=\"P.O.C\"\n                                            formControlName=\"pointOfContact\" required>\n                                    </div>\n                                </div>\n\n                                <mat-divider></mat-divider><br />\n                            </div>\n                        </div>\n                        <br />\n                        <div>\n                            <button mat-flat-button color=\"primary\" (click)=\"postJob()\"\n                                [disabled]=\"jobDetailsForm.invalid\">Post the Job!</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { AppliedJobsComponent } from './applied-jobs/applied-jobs.component';\nimport { SavedJobsComponent } from './saved-jobs/saved-jobs.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AddJobsComponent } from './add-jobs/add-jobs.component';\nimport { SearchAreaComponent } from './search-area/search-area.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: SignUpComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuardService] },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'editprofile', component: EditProfileComponent },\n  { path: 'jobs', component: JobsComponent },\n  { path: 'appliedjobs', component: AppliedJobsComponent },\n  { path: 'savedjobs', component: SavedJobsComponent },\n  { path: 'addjobs', component: AddJobsComponent },\n  { path: 'search', component: SearchAreaComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AppService } from './services/app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  title = 'suitUp';\n  displayHeader = false;\n  displayFooter = false;\n  displayBar = false;\n  public baseURLH: any = ['/', '/home'];\n  public baseURLF: any = ['/', '/home', '/register', '/login'];\n\n  constructor(private router: Router, private appService: AppService) {\n    router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\n      this.modifyDisplay(event.url);\n    });\n  }\n\n  modifyDisplay(url): void {\n    this.displayHeader = (this.baseURLH.indexOf(url) > -1) ? true : false;\n    this.displayFooter = (this.baseURLF.indexOf(url) > -1) ? true : false;\n    this.displayBar = (this.baseURLF.indexOf(url) > -1) ? false : true;\n  }\n\n  getClasses() {\n    const classes = {\n      'pinned-sidebar': this.appService.getSidebarStat().isSidebarPinned,\n      'toggeled-sidebar': this.appService.getSidebarStat().isSidebarToggeled\n    }\n    return classes;\n  }\n\n  toggleSidebar(): void {\n    this.appService.toggleSidebar();\n  }\n\n}\n","<app-header *ngIf=\"displayHeader\"></app-header>\n<div class=\"wrapper default-theme\" [ngClass]=\"getClasses()\">\n    <app-nav-bar *ngIf=\"displayBar\"></app-nav-bar>\n    <main>\n        <app-side-bar *ngIf=\"displayBar\"></app-side-bar>\n        <div class=\"pages container-fluid p-4\">\n            <!-- routes will be rendered here -->\n            <router-outlet></router-outlet>\n            <app-footer *ngIf=\"displayFooter\"></app-footer>\n        </div>\n        <div class=\"overlay\" (click)=\"toggleSidebar()\"></div>\n    </main>\n</div>\n<!-- footer -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { SideBarComponent } from './side-bar/side-bar.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { JobcardComponent } from './jobcard/jobcard.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { EducationFormComponent } from './edit-profile/education-form/education-form.component';\nimport { ExperienceFormComponent } from './edit-profile/experience-form/experience-form.component';\nimport { PersonalFormComponent } from './edit-profile/personal-form/personal-form.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { ProjectFormComponent } from './edit-profile/project-form/project-form.component';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { AppliedJobsComponent } from './applied-jobs/applied-jobs.component';\nimport { SavedJobsComponent } from './saved-jobs/saved-jobs.component';\nimport { UploadFileComponent } from './upload-file/upload-file.component';\nimport { JwtInterceptor } from './interceptor/jwt.interceptor';\nimport { ErrorInterceptor } from './interceptor/error.interceptor';\nimport { AddJobsComponent } from './add-jobs/add-jobs.component';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { DatePipe } from '@angular/common';\nimport { ProfileCardComponent } from './profile-card/profile-card.component';\nimport { SearchAreaComponent } from './search-area/search-area.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LoginComponent,\n    SignUpComponent,\n    NavBarComponent,\n    SideBarComponent,\n    DashboardComponent,\n    JobcardComponent,\n    ProfileComponent,\n    EducationFormComponent,\n    ExperienceFormComponent,\n    PersonalFormComponent,\n    EditProfileComponent,\n    ProjectFormComponent,\n    JobsComponent,\n    AppliedJobsComponent,\n    SavedJobsComponent,\n    UploadFileComponent,\n    AddJobsComponent,\n    ProfileCardComponent,\n    SearchAreaComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AlertModule.forRoot(),\n    CollapseModule.forRoot(),\n    BrowserAnimationsModule,\n    MatStepperModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatRadioModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatDividerModule\n  ],\n  providers: [DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Job } from '../models/jobs.model';\nimport { CandidateService } from '../services/candidate.service';\nimport { Status } from '../constants/application.constants';\n\n@Component({\n  selector: 'app-applied-jobs',\n  templateUrl: './applied-jobs.component.html',\n  styleUrls: ['./applied-jobs.component.css']\n})\nexport class AppliedJobsComponent implements OnInit {\n  constructor(private http: HttpClient, private candidateService: CandidateService) { }\n  jobList: Job[];\n  ngOnInit(): void {\n    const list = this.candidateService.statusfilter(Status.APPLY);\n    this.jobList = list.map(item => item.job);\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-4\" *ngFor=\"let job of jobList\">\n            <app-jobcard [jobDetails]=\"job\"></app-jobcard>\n        </div>\n    </div>\n</div>","export enum Status {\n    APPLY = 'Applied',\n    WITHDRAW = 'withdraw',\n    SAVE = 'Saved'\n}\n","export enum Errors {\n    CANDIDATE_DOES_NOT_EXIST = 'CANDIDATE_DOES_NOT_EXIST',\n    USER_DOES_NOT_EXIST = 'USER_DOES_NOT_EXIST',\n    JOB_DOES_NOT_EXIST = 'JOB_DOES_NOT_EXIST',\n    USER_ALREADY_EXISTS = 'USER_ALREADY_EXISTS',\n    CANDIDATE_ALREADY_EXISTS = 'USER_ALREADY_EXISTS',\n    JOB_ALREADY_APPLIED = 'JOB_ALREADY_APPLIED'\n}\nexport enum Alerts {\n    SUCCESS = 'success',\n    WARNING = 'warning',\n    INFO = 'info',\n    DANGER = 'danger'\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<p>jobs works!</p>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Candidate } from '../models/candidate.model';\nimport { CandidateService } from '../services/candidate.service';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent implements OnInit {\n\n  personalDetailsForm: FormGroup;\n  educationDetailsForm: FormGroup;\n  experienceDetailsForm: FormGroup;\n  additionalDetailsForm: FormGroup;\n  isOptional = true;\n  isChecked = false;\n\n  constructor(\n    private candidateService: CandidateService,\n    private router: Router,\n    private authService: AuthenticationService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  addCandidateDetails(): void {\n    this.candidateService.addCandidateDetails(this.candidateService.getCandidateDetails()).subscribe(\n      (data) => {\n        console.log(data);\n        this.router.navigate(['jobs']);\n      });\n    this.authService.updateUserDetails(this.authService.getUserDetails()).subscribe();\n  }\n\n}\n","<mat-horizontal-stepper linear #stepper>\n  <!--First Form Stepper Mandatory Details-->\n  <mat-step [stepControl]=\"personalDetailsForm\" [optional]=\"false\">\n    <ng-template matStepLabel>Personal Details</ng-template>\n    <app-personal-form [personalDetailsForm]=\"personalDetailsForm\"></app-personal-form>\n  </mat-step>\n\n  <!--Second Form Stepper Education Details-->\n  <mat-step [stepControl]=\"educationDetailsForm\" [optional]=\"isOptional\">\n    <ng-template matStepLabel>Education Details</ng-template>\n    <app-education-form [educationDetailsForm]=\"educationDetailsForm\"></app-education-form>\n  </mat-step>\n\n  <!--THrid Form Stepper Experience Details-->\n  <mat-step [stepControl]=\"experienceDetailsForm\" [optional]=\"isOptional\">\n    <ng-template matStepLabel>Experience</ng-template>\n    <app-experience-form [experienceDetailsForm]=\"experienceDetailsForm\"></app-experience-form>\n  </mat-step>\n\n  <!--Fourth Form Stepper Additional(Project,Certificate etc.) Details-->\n  <mat-step [stepControl]=\"additionalDetailsForm\" [optional]=\"isOptional\">\n    <ng-template matStepLabel>Additional Details</ng-template>\n    <app-project-form [projectDetailsForm]=\"additionalDetailsForm\"></app-project-form>\n  </mat-step>\n\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    <p>You are now done.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)=\"addCandidateDetails()\">Save and Proceed</button>\n      <!--<button mat-button (click)=\"stepper.reset()\">Reset</button>-->\n    </div>\n  </mat-step>\n</mat-horizontal-stepper>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { CandidateService } from 'src/app/services/candidate.service';\nimport { Education, Candidate } from 'src/app/models/candidate.model';\n\n@Component({\n  selector: 'app-education-form',\n  templateUrl: './education-form.component.html',\n  styleUrls: ['./education-form.component.scss']\n})\nexport class EducationFormComponent implements OnInit {\n  data: Candidate;\n  @Input() educationDetailsForm: FormGroup;\n  constructor(private fb: FormBuilder, private candidateService: CandidateService) { }\n\n  ngOnInit(): void {\n    this.educationDetailsForm = this.fb.group({\n      educations: this.fb.array([this.createEducationFormGroup()]),\n    });\n  }\n\n  public addEducationFormGroup() {\n    const educations = this.educationDetailsForm.get('educations') as FormArray;\n    educations.push(this.createEducationFormGroup());\n  }\n\n  public removeOrClearEducation(i: number) {\n    const educations = this.educationDetailsForm.get('educations') as FormArray;\n    if (educations.length > 1) {\n      educations.removeAt(i);\n    } else {\n      educations.reset();\n    }\n  }\n\n  private createEducationFormGroup(): FormGroup {\n    return new FormGroup({\n      institution: new FormControl(''),\n      degree: new FormControl(''),\n      startDate: new FormControl(''),\n      endDate: new FormControl(''),\n      description: new FormControl(''),\n      percentage: new FormControl(''),\n    });\n  }\n\n  addEducationDetails() {\n    if (this.educationDetailsForm.dirty) {\n      this.data = this.candidateService.getCandidateDetails();\n      this.data.education = this.educationDetailsForm.value.educations;\n      this.candidateService.setCandidateDetails(this.data);\n    }\n  }\n}\n","<form [formGroup]=\"educationDetailsForm\">\n    <div class=\"row\">\n        <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n            <div class=\"card border-0 rounded-0 h-100\">\n                <div class=\"card-title mb-1 p-3\">\n                    <h5>Education Details:</h5>\n                </div>\n                <div class=\"card-body\">\n\n                    <div formArrayName=\"educations\">\n                        <div *ngFor=\"let education of educationDetailsForm.get('educations')['controls']; let i = index\"\n                            [formGroupName]=\"i\">\n\n                            <div class=\"form-group row\">\n                                <label for=\"institution\" class=\"col-sm-2 col-form-label text-nowrap\">Institute\n                                    Name:</label>\n                                <div class=\"col-xs-4\">\n                                    <input type=\"text\" id='institution' maxlength=\"20\"\n                                        onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                        class=\"form-control\" placeholder=\"Enter your institution name\"\n                                        formControlName=\"institution\" required>\n                                </div>&nbsp;&nbsp;&nbsp;\n                                <label for=\"degree\" class=\"col-sm-2 col-form-label text-nowrap\">Board/ Degree:</label>\n                                <div class=\"col-xs-4\">\n                                    <input class=\"form-control\" id=\"degree\" placeholder=\"Enter your degree/degree\"\n                                        type=\"text\"\n                                        onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                        formControlName=\"degree\" required>\n                                </div>\n\n                                <div class=\"col-xs-4\">\n                                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                                        (click)=\"addEducationFormGroup()\" matTooltip=\"Add\">\n                                        <mat-icon>add_circle_outline</mat-icon>\n                                    </button>\n                                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Remove/clear\"\n                                        (click)=\"removeOrClearEducation(i)\" matTooltip=\"Remove\">\n                                        <mat-icon>highlight_off</mat-icon>\n                                    </button>\n                                </div>\n\n                            </div>\n\n                            <div class=\"form-group row\">\n                                <label for=\"description\" class=\"col-sm-2 col-form-label text-nowrap\">Stream:</label>\n                                <div class=\"col-xs-4\">\n                                    <input type=\"text\" id='description' maxlength=\"15\"\n                                        onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                        class=\"form-control\" placeholder=\"Enter your stream/major\"\n                                        formControlName=\"description\" required>\n                                </div>&nbsp;&nbsp;&nbsp;\n                                <label for=\"startDate\" class=\"col-sm-2 col-form-label text-nowrap\">Starting\n                                    date:</label>\n                                <div class=\"col-xs-4\">\n                                    <input type=\"date\" id=\"startDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\"\n                                        value=\"\" formControlName=\"startDate\" required>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row\">\n                                <label for=\"zipcode\" class=\"col-sm-2 col-form-label text-nowrap\">Percentage(%):</label>\n                                <div class=\"col-xs-4\">\n                                    <input type=\"text\" class=\"form-control\" id=\"percentage\"\n                                        placeholder=\"Enter your percentage\"\n                                        oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                        maxlength=\"3\" formControlName=\"percentage\" required>\n                                </div>&nbsp;&nbsp;&nbsp;\n                                <label for=\"endDate\" class=\"col-sm-2 col-form-label text-nowrap\">Ending date:</label>\n                                <div class=\"col-xs-4\">\n                                    <input type=\"date\" id=\"endDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\"\n                                        value=\"\" formControlName=\"endDate\" required>\n                                </div>\n                            </div>\n                            <hr />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext (click)=\"addEducationDetails()\">Next</button>\n    </div>\n</form>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { Candidate, Experience } from 'src/app/models/candidate.model';\nimport { CandidateService } from 'src/app/services/candidate.service';\n\n@Component({\n  selector: 'app-experience-form',\n  templateUrl: './experience-form.component.html',\n  styleUrls: ['./experience-form.component.scss']\n})\nexport class ExperienceFormComponent implements OnInit {\n\n  @Input() experienceDetailsForm: FormGroup;\n  data: Candidate;\n  constructor(private fb: FormBuilder, private candidateService: CandidateService) { }\n\n  ngOnInit(): void {\n    this.experienceDetailsForm = this.fb.group({\n      experiences: this.fb.array([this.createExperienceFormGroup()]),\n    });\n  }\n\n  public addExperienceFormGroup() {\n    const experiences = this.experienceDetailsForm.get('experiences') as FormArray;\n    experiences.push(this.createExperienceFormGroup());\n  }\n\n  public removeOrClearExperience(i: number) {\n    const experiences = this.experienceDetailsForm.get('experiences') as FormArray;\n    if (experiences.length > 1) {\n      experiences.removeAt(i);\n    } else {\n      experiences.reset();\n    }\n  }\n\n  private createExperienceFormGroup(): FormGroup {\n    return new FormGroup({\n      designation: new FormControl(''),\n      type: new FormControl(''),\n      location: new FormControl(''),\n      organization: new FormControl(''),\n      startDate: new FormControl(''),\n      endDate: new FormControl(''),\n      current: new FormControl(''),\n    });\n  }\n\n  addExperienceDetails() {\n    if (this.experienceDetailsForm.dirty) {\n      this.data = this.candidateService.getCandidateDetails();\n      this.data.experience = this.experienceDetailsForm.value.experiences;\n      this.candidateService.setCandidateDetails(this.data);\n    }\n  }\n}\n","<form [formGroup]=\"experienceDetailsForm\">\n    <div>\n        <div class=\"row\">\n            <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n                <div class=\"card border-0 rounded-0 h-100\">\n                    <div class=\"card-body\">\n\n                        <div formArrayName=\"experiences\">\n                            <div *ngFor=\"let experience of experienceDetailsForm.get('experiences')['controls']; let i = index\"\n                                [formGroupName]=\"i\">\n\n                                <div class=\"form-group row\">\n                                    <label for=\"designation\" class=\"col-sm-2 col-form-label text-nowrap\">Position\n                                        {{i+1}}:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='designation' maxlength=\"20\"\n                                            onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                            class=\"form-control\" placeholder=\"Enter your designation\"\n                                            formControlName=\"designation\" required>\n                                    </div>&nbsp;&nbsp;&nbsp;\n                                    <label for=\"type\" class=\"col-sm-2 col-form-label text-nowrap\">Employment\n                                        type:</label>\n                                    <div class=\"col-xs-4\">\n                                        <select id=\"type\" name=\"type\" class=\"form-control\" formControlName=\"type\">\n                                            <option value=\"\" disabled selected hidden>Your employment type</option>\n                                            <option value=\"parttime\">Part-time</option>\n                                            <option value=\"fulltime\">Full-time</option>\n                                            <option value=\"internship\">Internship</option>\n                                        </select>\n                                    </div>\n\n                                    <div class=\"col-xs-4\">\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                                            (click)=\"addExperienceFormGroup()\" matTooltip=\"Add\">\n                                            <mat-icon>add_circle_outline</mat-icon>\n                                        </button>\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\"\n                                            aria-label=\"Remove/clear\" (click)=\"removeOrClearExperience(i)\"\n                                            matTooltip=\"Remove\">\n                                            <mat-icon>highlight_off</mat-icon>\n                                        </button>\n                                    </div>\n\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label for=\"organization\"\n                                        class=\"col-sm-2 col-form-label text-nowrap\">Company:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='organization' maxlength=\"20\" class=\"form-control\"\n                                            placeholder=\"Company name\" formControlName=\"organization\" required>\n                                    </div>&nbsp;&nbsp;&nbsp;\n                                    <label for=\"startDate\" class=\"col-sm-2 col-form-label text-nowrap\">Starting\n                                        date:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"date\" id=\"startDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\"\n                                            value=\"\" formControlName=\"startDate\" required>\n                                    </div>\n\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label for=\"location\" class=\"col-sm-2 col-form-label text-nowrap\">Location:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input class=\"form-control\" id=\"location\" placeholder=\"Company location\"\n                                            type=\"text\" maxlength=\"15\" formControlName=\"location\" required>\n                                    </div>&nbsp;&nbsp;&nbsp;\n                                    <label for=\"endDate\" class=\"col-sm-2 col-form-label text-nowrap\">Ending\n                                        date:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"date\" id=\"endDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\"\n                                            value=\"\" formControlName=\"endDate\" required>\n                                    </div>\n                                </div>\n\n                                <div class=\"form-group row\">\n                                    <div class=\"col-xs-4\">\n                                        <mat-checkbox class=\"col-12\" formControlName=\"current\" color=\"primary\">Currently\n                                            working here</mat-checkbox>\n                                    </div>\n                                </div>\n                                <hr>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext (click)=\"addExperienceDetails()\">Next</button>\n    </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CandidateService } from 'src/app/services/candidate.service';\nimport { Candidate } from 'src/app/models/candidate.model';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { LoggedInUser } from 'src/app/models/user';\n\n@Component({\n  selector: 'app-personal-form',\n  templateUrl: './personal-form.component.html',\n  styleUrls: ['./personal-form.component.scss']\n})\nexport class PersonalFormComponent implements OnInit {\n\n  @Input() personalDetailsForm: FormGroup;\n  isOptional = true;\n  isChecked = false;\n  profileData1 = this.authService.getUserDetails();\n  profileData2 = this.candidateService.getCandidateDetails();\n  email = this.profileData1 ? this.profileData1.username : null;\n  contact = this.profileData1 ? this.profileData1.contactnumber : null;\n  dob = this.profileData2 ? this.profileData2.dateOfBirth : null;\n  constructor(private fb: FormBuilder, private candidateService: CandidateService, private authService: AuthenticationService) { }\n\n  ngOnInit(): void {\n\n    this.personalDetailsForm = this.fb.group({\n      email: ['', Validators.required],\n      dob: ['', Validators.required],\n      country: ['', Validators.required],\n      contact: ['', Validators.required],\n      city: ['', Validators.required],\n      address: ['', Validators.required],\n      gender: ['', Validators.required],\n      summary: ['', Validators.required],\n      role: ['', Validators.required]\n    });\n\n    this.personalDetailsForm.patchValue({\n      email: this.email,\n      contact: this.contact,\n      dob: this.dob,\n      country: this.profileData2 ? this.profileData2.country : null,\n      city: this.profileData2 ? this.profileData2.city : null,\n      gender: this.profileData2 ? this.profileData2.gender : null,\n      summary: this.profileData2 ? this.profileData2.bio : null,\n      role: this.profileData1 ? this.profileData1.role : null,\n    });\n  }\n\n  addCandidateDetails(): void {\n\n    const candidateData: Candidate = {\n      id: null,\n      bio: this.personalDetailsForm.get('summary').value,\n      city: this.personalDetailsForm.get('city').value,\n      country: this.personalDetailsForm.get('country').value,\n      dateOfBirth: this.personalDetailsForm.get('dob').value,\n      gender: this.personalDetailsForm.get('gender').value,\n      profilePicture: null,\n      resume: null,\n      education: [],\n      project: [],\n      experience: [],\n      skills: [],\n      applications: [],\n    };\n\n    const userData: LoggedInUser = this.authService.getUserDetails();\n    userData.role = this.personalDetailsForm.get('role').value ? 'RECRUITER' : 'CANDIDATE';\n    userData.contactnumber = this.personalDetailsForm.get('contact').value;\n    userData.username = this.personalDetailsForm.get('email').value;\n\n    this.candidateService.setCandidateDetails(candidateData);\n    this.authService.updateUserDetails(userData);\n  }\n}\n","<form [formGroup]=\"personalDetailsForm\">\n    <div>\n        <div class=\"row\">\n            <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n                <div class=\"card border-0 rounded-0 h-100\">\n                    <div class=\"card-body\">\n                        <div class=\"form-group row\">\n                            <label for=\"email\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Email Address:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"\n                                    placeholder=\"Enter your email\" formControlName=\"email\" required>\n                            </div>\n\n                            <label for=\"contact\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                Contact Number:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input class=\"form-control\" id=\"contact\" placeholder=\"Contact number\" type=\"text\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    maxlength=\"10\" formControlName=\"contact\" required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"city\" class=\"col-sm-2 col-form-label text-nowrap\">City:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='city' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Enter your city\" formControlName=\"city\" required>\n                            </div>\n                            <label for=\"date\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">Date of\n                                Birth:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"date\" id=\"date\" class=\"form-control\" placeholder=\"dd-mm-yyyy\" value=\"\"\n                                    formControlName=\"dob\" required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"country\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Country:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='country' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Enter your nationality\" formControlName=\"country\"\n                                    required>\n                            </div>\n                            <label for=\"gender\" class=\"offset-sm-1 col-sm-2 radio control-label\">Gender:</label>\n                            <mat-radio-group formControlName=\"gender\" aria-label=\"Gender\" color=\"primary\">\n                                <mat-radio-button value=\"M\">Male</mat-radio-button> &nbsp;&nbsp;&nbsp;\n                                <mat-radio-button value=\"F\">Female</mat-radio-button>\n                            </mat-radio-group>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"summary\" class=\"col-sm-2 col-form-label text-nowrap\">Summary:</label>\n                            <textarea id=\"summary\" class=\"col-sm-10 form-control\" name=\"summary\" maxlength=\"200\"\n                                formControlName=\"summary\" rows=\"3\" cols=\"30\">\n                                </textarea>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <mat-slide-toggle class=\"col-12\" [(ngModel)]=\"isChecked\" formControlName=\"role\"\n                                color=\"primary\">\n                                <div class=\"mt-4\">\n                                    Want to post jobs as well? <br>\n                                    <label class=\"text-info\">\n                                        {{isChecked ? 'Sure' : 'Will decide later'}}\n                                    </label>\n                                </div>\n                            </mat-slide-toggle>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div>\n        <button mat-button matStepperNext (click)=\"addCandidateDetails()\">Next</button>\n    </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormArray, FormControl, FormBuilder } from '@angular/forms';\nimport { Candidate } from 'src/app/models/candidate.model';\nimport { CandidateService } from 'src/app/services/candidate.service';\n\n@Component({\n  selector: 'app-project-form',\n  templateUrl: './project-form.component.html',\n  styleUrls: ['./project-form.component.scss']\n})\nexport class ProjectFormComponent implements OnInit {\n\n  @Input() projectDetailsForm: FormGroup;\n  data: Candidate;\n  constructor(private fb: FormBuilder, private candidateService: CandidateService) { }\n\n  ngOnInit(): void {\n    this.projectDetailsForm = this.fb.group({\n      project: this.fb.array([this.createProjectFormGroup()]),\n      skills: this.fb.array([this.createSkillFormGroup()])\n    });\n  }\n\n  public addSkillFormGroup() {\n    const skills = this.projectDetailsForm.get('skills') as FormArray;\n    skills.push(this.createSkillFormGroup());\n  }\n\n  public removeOrClearSkill(i: number) {\n    const skills = this.projectDetailsForm.get('skills') as FormArray;\n    if (skills.length > 1) {\n      skills.removeAt(i);\n    } else {\n      skills.reset();\n    }\n  }\n\n  private createSkillFormGroup(): FormGroup {\n    return new FormGroup({\n      skillName: new FormControl(''),\n      rating: new FormControl(''),\n    });\n  }\n\n  public addProjectFormGroup() {\n    const project = this.projectDetailsForm.get('project') as FormArray;\n    project.push(this.createProjectFormGroup());\n  }\n\n  public removeOrClearProject(i: number) {\n    const project = this.projectDetailsForm.get('project') as FormArray;\n    if (project.length > 1) {\n      project.removeAt(i);\n    } else {\n      project.reset();\n    }\n  }\n\n  private createProjectFormGroup(): FormGroup {\n    return new FormGroup({\n      name: new FormControl(''),\n      startDate: new FormControl(''),\n      endDate: new FormControl(''),\n      description: new FormControl(''),\n      ongoing: new FormControl(''),\n    });\n  }\n\n  addProjectDetails() {\n    if (this.projectDetailsForm.dirty) {\n      this.data = this.candidateService.getCandidateDetails();\n      this.data.project = this.projectDetailsForm.value.project;\n      this.data.skills = this.projectDetailsForm.value.skills;\n      this.candidateService.setCandidateDetails(this.data);\n    }\n  }\n\n}\n","<form [formGroup]=\"projectDetailsForm\">\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n        <div class=\"card border-0 rounded-0 h-100\">\n          <div class=\"card-title mb-1 p-3\">\n            <h5>Projects</h5>\n          </div>\n          <div class=\"card-body\">\n\n            <div formArrayName=\"project\">\n              <div *ngFor=\"let project of projectDetailsForm.get('project')['controls']; let i = index\"\n                [formGroupName]=\"i\">\n                <div class=\"form-group row\">\n                  <label for=\"name\" class=\"col-sm-2 col-form-label text-nowrap\">Project title {{i+1}}:</label>\n                  <div class=\"col-xs-6\">\n                    <input type=\"text\" id='name' class=\"form-control\" placeholder=\"Enter your project title\"\n                      formControlName=\"name\" required>\n                  </div>&nbsp;&nbsp;&nbsp;\n                  <label for=\"startDate\" class=\"col-sm-2 col-form-label text-nowrap\">Starting date:</label>\n                  <div class=\"col-xs-4\">\n                    <input type=\"date\" id=\"startDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\" value=\"\"\n                      formControlName=\"startDate\" required>\n                  </div>\n\n                  <div class=\"col-xs-4\">\n                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                      (click)=\"addProjectFormGroup()\" matTooltip=\"Add\">\n                      <mat-icon>add_circle_outline</mat-icon>\n                    </button>\n                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Remove/clear\"\n                      (click)=\"removeOrClearProject(i)\" matTooltip=\"Remove\">\n                      <mat-icon>highlight_off</mat-icon>\n                    </button>\n                  </div>\n\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"description\" class=\"col-sm-2 col-form-label text-nowrap\">Description:</label>\n                  <div class=\"col-xs-4\">\n                    <input type=\"text\" id='degree' class=\"form-control\" placeholder=\"Describe your project\"\n                      formControlName=\"description\" required>\n                  </div>&nbsp;&nbsp;&nbsp;\n                  <label for=\"endDate\" class=\"col-sm-2 col-form-label text-nowrap\">Ending date:</label>\n                  <div class=\"col-xs-4\">\n                    <input type=\"date\" id=\"endDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\" value=\"\"\n                      formControlName=\"endDate\" required>\n                  </div>\n                </div>\n\n                <div class=\"form-group row\">\n                  <div class=\"col-xs-4\">\n                    <mat-checkbox class=\"col-12\" formControlName=\"ongoing\" color=\"primary\">Ongoing</mat-checkbox>\n                  </div>\n                </div>\n\n                <hr>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n        <div class=\"card border-0 rounded-0 h-100\">\n          <div class=\"card-title mb-1 p-3\">\n            <h5>Skills</h5>\n          </div>\n          <div class=\"card-body\">\n\n            <div class=\"form-group row\">\n              <label for=\"name\" class=\"col-sm-2 col-form-label text-nowrap\">Add your skills:</label>\n\n              <div formArrayName=\"skills\">\n                <div class=\"row\" *ngFor=\"let skill of projectDetailsForm.get('skills')['controls']; let i = index\"\n                  [formGroupName]=\"i\">\n                  <div class=\"col-xs-4\">\n                    <input class=\"form-control\" formControlName=\"skillName\" placeholder=\"Skills {{i+1}}\"\n                      autocomplete=\"skill\">\n                  </div>&nbsp;&nbsp;&nbsp;\n                  <div class=\"col-xs-4 pt-2\">\n                    <mat-radio-group formControlName=\"rating\" aria-label=\"rating\" color=\"primary\">\n                      <mat-radio-button value=\"1\">Novice</mat-radio-button> &nbsp;&nbsp;&nbsp;\n                      <mat-radio-button value=\"2\">Intermediate</mat-radio-button> &nbsp;&nbsp;&nbsp;\n                      <mat-radio-button value=\"3\">Advanced</mat-radio-button> &nbsp;&nbsp;&nbsp;\n                    </mat-radio-group>\n                  </div>\n\n                  <div class=\"col-xs-4\">\n                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                      (click)=\"addSkillFormGroup()\" matTooltip=\"Add\">\n                      <mat-icon>add_circle_outline</mat-icon>\n                    </button>\n                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Remove/clear\"\n                      (click)=\"removeOrClearSkill(i)\" matTooltip=\"Remove\">\n                      <mat-icon>highlight_off</mat-icon>\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <button mat-button matStepperPrevious>Back</button>\n  <button mat-button matStepperNext (click)=\"addProjectDetails()\">Next</button>\n</form>\n\n<br>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"myFooter\">\n    <div class=\"container-fluid\">\n        <div class=\"row text-center\">\n            <div class=\"col-12\">\n                <ul class=\"list-unstyled\">\n                    <li><a href=\"javascript:void(0)\">About Us</a></li>\n                    <li><a href=\"javascript:void(0)\">Help Desk</a></li>\n                    <li><a href=\"javascript:void(0)\">FAQ</a></li>\n                    <li></li>\n                </ul>\n                <p class=\"footer-copyright\">© 2020 Copyright ~ Designed By &nbsp;VK</p>\n            </div>\n        </div>\n    </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-light navbar-expand-lg fixed-top bg-white clean-navbar\">\n    <div class=\"container\">\n        <div class=\"navbar-brand logo\">\n            <img src=\"assets\\img\\suitup-logo.png\" class=\"img-fluid w-25\" alt=\"Suit UP logo\">\n        </div>\n        <button data-toggle=\"collapse\" class=\"navbar-toggler\" data-target=\"#navcol-1\">\n            <span class=\"sr-only\">Toggle navigation</span>\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navcol-1\">\n            <ul class=\"nav navbar-nav ml-auto\">\n                <li class=\"nav-item\" role=\"presentation\">\n                    <a class=\"nav-link active\" routerLink='/register' routerLinkActive=\"active\">\n                        Register\n                    </a>\n                </li>\n                <li class=\"nav-item\" role=\"presentation\">\n                    <a class=\"nav-link active\" routerLink='/login' routerLinkActive=\"active\">\n                        Sign In\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <img src=\"assets/img/image-1.png\" class=\"col-6 img-fluid w-25\" />\n    <div class=\"offset-1 col-5 m-5\">\n\n      <div class=\"card card-light mb-4 mt-5\">\n        <div class=\"card-body\">\n          This is some text within a card body.\n        </div>\n      </div>\n\n      <div class=\"card card-light mb-4\">\n        <div class=\"card-body\">\n          This is some text within a card body.\n        </div>\n      </div>\n\n      <div class=\"card card-light mb-4\">\n        <div class=\"card-body\">\n          This is some text within a card body.\n        </div>\n      </div>\n      <div class=\"row\">\n        <img src=\"assets/img/logo-2.png\" class=\"offset-8 img-fluid w-50\" />\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Job } from '../models/jobs.model';\nimport { ApplicationService } from '../services/application.service';\nimport { CandidateService } from '../services/candidate.service';\nimport { Candidate } from '../models/candidate.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-jobcard',\n  templateUrl: './jobcard.component.html',\n  styleUrls: ['./jobcard.component.scss']\n})\nexport class JobcardComponent implements OnInit {\n  private candidateDetails: Candidate;\n  @Input() jobDetails: Job;\n  constructor(private http: HttpClient, private candidateService: CandidateService,\n    public applicationService: ApplicationService) { }\n\n  ngOnInit(): void {\n    this.candidateDetails = this.candidateService.getCandidateDetails();\n  }\n\n  applyforjob() {\n    this.applicationService.applyJobs(this.candidateDetails.id, this.jobDetails.jobId).subscribe(\n      (response) => {\n        this.candidateService.setCandidateDetails(response);\n      });\n\n  }\n\n  /*  withdrawfromjob(){\n      this.applicationService.withdrawJobs(this.candidateDetails.id  ).subscribe(\n        (response) => {\n        });\n    } */\n\n  savejob() {\n    this.applicationService.saveJobs(this.candidateDetails.id, this.jobDetails.jobId).subscribe(\n      (response) => {\n        this.candidateService.setCandidateDetails(response);\n      });\n\n  }\n\n}\n","<div class=\"card mb-4 pointer-link\" data-toggle=\"modal\" data-target=\"#myModal\">\n  <div class=\"card-body\">\n    <h5 class=\"row pl-2 text-muted\">{{jobDetails.companyName}}</h5>\n    <h6 class=\"row pl-2 mb-2 text-muted\">{{jobDetails.position}}</h6>\n    <div class=\"row text-muted pl-2\">\n      <i class=\"fa fa-briefcase p-1\"></i>\n      {{jobDetails.minimumExperience}} years |\n      <i class=\"fa fa-inr p-1\"></i>\n      INR {{jobDetails.compensation}} LPA |\n      <i class=\"fa fa-map-marker p-1\"></i>\n      {{jobDetails.location}}\n    </div>\n    <div class=\"row pl-2 mt-3\">\n      <a href=\"javascript:void(0)\" class=\"card-link\" (click)=\"applyforjob()\">Apply now</a>\n      <a href=\"javascript:void(0)\" class=\"card-link\" (click)=\"savejob()\">Save</a>\n    </div>\n  </div>\n</div>\n\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"myModal\" role=\"dialog\">\n  <div class=\"modal-dialog modal-lg\">\n\n    <!-- Modal content-->\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <h4 class=\"modal-title\">{{jobDetails.position}}</h4>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xs-3\">{{jobDetails.companyName}} </div>\n            <div class=\"offset-sm-1 col-xs-6\">Posted\n              on:\n              {{jobDetails.postedOn.toString().slice(0, 15)}}</div>\n          </div>\n        </div>\n\n\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n      </div>\n      <div class=\"modal-body\">\n        <h5>Job Description:</h5>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Position: </div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.description}}</div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Location: </div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.location}}</div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Desired Experience:</div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.minimumExperience}} years</div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Salary:</div>\n              <div class=\"col-xs-6 pl-1\">\n                <i class=\"fa fa-inr p-1\"></i>\n                {{jobDetails.compensation}} LPA\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Course Specialization:</div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.minimumEducation}}</div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Contact Person:</div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.pointOfContact}}</div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Skills\n                required:</div>\n              <div class=\"row\">\n                <li class=\"offset-sm-2 col-xs-6\" *ngFor=\"let skill of jobDetails.skillsRequired\">\n                  {{skill.name}} with {{skill.experience}} yrs experience\n                </li>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Interview Process:</div>\n              <div class=\"row\">\n                <li class=\"offset-sm-2 col-xs-6\">Interview type: {{jobDetails.process.description}}</li>\n                <li class=\"offset-sm-2 col-xs-6\">Interview location: {{jobDetails.process.location}}</li>\n                <li class=\"offset-sm-2 col-xs-6\">No. of rounds: {{jobDetails.process.rounds.length}}</li>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"row\">\n              <div class=\"col-xs-6\">No. of vacancies:</div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.vacancies}}</div>\n            </div>\n            <div class=\"row\">Interview Rounds Details:</div>\n            <div class=\"row ml-2\" *ngFor=\"let detail of jobDetails.process.rounds; let i = index\">\n              <div> Round {{i+1}}:</div>\n              <div class=\"row\">\n                <ul>\n                  <li>Round Description: {{detail.description}}</li>\n                  <li>Location: {{detail.location}}</li>\n                  <li>Duration: {{detail.duration}}</li>\n                  <li>Contact Person: {{detail.pointOfContact}}</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n\n\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-default\" (click)=\"applyforjob()\">Apply</button>\n          <button type=\"button\" class=\"btn btn-default\" (click)=\"savejob()\">Save</button>\n          <!--<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>-->\n        </div>\n      </div>\n\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JobService } from '../services/job.service';\nimport { Job } from '../models/jobs.model';\n\n@Component({\n  selector: 'app-jobs',\n  templateUrl: './jobs.component.html',\n  styleUrls: ['./jobs.component.css'],\n})\nexport class JobsComponent implements OnInit {\n  constructor(private http: HttpClient, public jobService: JobService) { }\n\n  jobList: Job[];\n\n  ngOnInit(): void {\n    this.jobService.getAllJobs().subscribe((response) => {\n      this.jobList = response;\n      console.log(response);\n    });\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-4\" *ngFor=\"let job of jobList\">\n            <app-jobcard [jobDetails]=\"job\"></app-jobcard>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Alerts } from '../constants/errors.constants';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n    public loginForm: FormGroup;\n    public invalidLogin: boolean;\n    public errorMessage: string;\n    public errorType: string;\n\n    constructor(\n        private formBuild: FormBuilder,\n        public authService: AuthenticationService,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        this.loginForm = this.formBuild.group({\n            username: ['', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]],\n            password: ['', [Validators.required]],\n        });\n    }\n    get username() {\n        return this.loginForm.get('username');\n    }\n    get password() {\n        return this.loginForm.get('password');\n    }\n\n    public getUsername(): string {\n        return this.loginForm.value.username;\n    }\n\n    public getPassword(): string {\n        return this.loginForm.value.password;\n    }\n\n    public toSignup(): void {\n        this.router.navigate(['register']);\n    }\n\n    public onSubmit(): void {\n        this.authService\n            .authenticate(this.getUsername(), this.getPassword())\n            .subscribe(\n                (data) => {\n                    this.authService.setUserDetails(data);\n                    this.errorMessage = 'Logged In successfully';\n                    this.errorType = Alerts.SUCCESS;\n                    this.goToProfile();\n                },\n                (error) => {\n                    this.errorType = Alerts.DANGER;\n                    this.errorMessage = error.error.message;\n                }\n            );\n    }\n\n    goToProfile(): void {\n        this.router.navigate(['profile']);\n    }\n}\n","<div class=\"login-sign-body row justify-content-center\">\n    <div class=\"col-md-9 col-lg-12 col-xl-10\">\n        <div class=\"card shadow-lg o-hidden border-0 my-5\">\n            <div class=\"card-body p-0\">\n                <div class=\"row\">\n                    <div class=\"col-lg-6 d-none d-lg-flex\">\n                        <div class=\"flex-grow-1 lady-lips-gradient\">\n                            <img class=\"card-img-top img-fluid justify-content-center\" src=\"assets\\img\\bg-business.jpg\">\n                        </div>\n                    </div>\n                    <div class=\"col-lg-6\">\n                        <div class=\"p-5\">\n                            <div class=\"text-center\">\n                                <h4 class=\"text-dark mb-4\">Welcome Back!</h4>\n                            </div>\n                            <alert [type]=\"errorType\">\n                                {{errorMessage}}\n                            </alert>\n                            <form class=\"user\" [formGroup]=\"loginForm\" (submit)=\"onSubmit()\">\n                                <div class=\"form-group\">\n                                    <input class=\"form-control form-control-user\" formControlName=\"username\"\n                                        id=\"username\" placeholder=\"Enter Email Address...\" required />\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"text-danger\"\n                                        *ngIf=\"username.invalid && username.touched && username.dirty\">\n                                        Please enter valid email\n                                    </div>\n                                </div>\n                                <div class=\"form-group\"><input class=\"form-control form-control-user\" type=\"password\"\n                                        id=\"exampleInputPassword\" placeholder=\"Password\" formControlName=\"password\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"custom-control custom-checkbox small\">\n                                        <div class=\"form-check\"><input class=\"form-check-input custom-control-input\"\n                                                type=\"checkbox\" id=\"formCheck-1\">\n                                            <label class=\"form-check-label custom-control-label\" for=\"formCheck-1\">\n                                                Remember Me\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <button class=\"btn btn-primary btn-block text-white btn-user\" type=\"submit\">\n                                    Login\n                                </button>\n                                <hr>\n                            </form>\n                            <div class=\"text-center\">\n                                <a class=\"small\" href=\"javascript:void(0)\">\n                                    Forgot Password?\n                                </a>\n                            </div>\n                            <div class=\"text-center\">\n                                <a class=\"small\" (click)=\"toSignup()\">\n                                    Create an Account!\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../services/app.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { CandidateService } from '../services/candidate.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor(\n    private appService: AppService,\n    private authService: AuthenticationService,\n    private candidateService: CandidateService,\n    private router: Router\n  ) { }\n  isCollapsed = true;\n  ngOnInit(): void {\n  }\n\n  toggleSidebarPin(): void {\n    this.appService.toggleSidebarPin();\n  }\n\n  toggleSidebar(): void {\n    this.appService.toggleSidebar();\n  }\n\n  public logout(): void {\n    this.authService.setUserDetails(null);\n    this.candidateService.setCandidateDetails(null);\n    this.router.navigate(['login']);\n  }\n\n  goToSearch(): void {\n    this.router.navigate(['search']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md fixed-top navbar-dark flex-fill\">\n  <!-- <button class=\"sidebar-toggler ml-4\" type=\"button\">\n    <i class=\"fa fa-navicon\"></i>\n  </button> -->\n  <!-- header -->\n  <div class=\"navbar-header pl-2 pr-2 ml-3 text-center\">\n    <div class=\"navbar-brand m-0 w-100\">\n      <img src=\"assets\\img\\suitup-logo-light.png\" class=\"img-fluid w-50\" alt=\"Suit UP logo\" />\n    </div>\n  </div>\n  <!-- sidebar toggler -->\n  <div class=\"sidebar-toggler ml-auto mr-3\">\n    <a class=\"btn nav-link\" (click)=\"toggleSidebar()\"><i class=\"fa fa-bars\"></i></a>\n  </div>\n  <!-- right menu toggler -->\n  <div class=\"nav-toggler-right mr-4 d-md-none\">\n    <button class=\"\" type=\"button\" (click)=\"isCollapsed = !isCollapsed\" [attr.aria-expanded]=\"!isCollapsed\"\n      aria-controls=\"collapseBasic\">\n      <!-- <span class=\"navbar-toggler-icon\"></span> -->\n      <img src=\"./assets/img/user.jpg\" class=\"img-fluid\" alt=\"\" />\n    </button>\n    <span class=\"user-profile nav-alert bg-danger\"></span>\n  </div>\n  <!-- left box -->\n  <ul class=\"navbar-nav flex-fill mt-1 align-items-center left-nav\">\n    <li class=\"nav-item navicon\">\n      <a class=\"btn nav-link\" (click)=\"toggleSidebarPin()\"><i class=\"fa fa-bars\"></i></a>\n    </li>\n    <li class=\"nav-item flex-fill\" (click)=\"goToSearch()\">\n      <input class=\"form-control navbar-search\" type=\"text\" placeholder=\"Search . . .\" />\n    </li>\n  </ul>\n\n  <!-- right menu -->\n  <div class=\"collapse navbar-collapse right-nav\" id=\"collapseBasic\" [collapse]=\"isCollapsed\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"btn nav-link\">\n          <i class=\"far fa-bell\"></i>\n          <span class=\"link-text\">Alerts</span>\n          <!-- <span class=\"badge badge-pill ba dge-danger\">3</span> -->\n          <span class=\"nav-alert notifications\"></span>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"btn nav-link\">\n          <i class=\"far fa-envelope\"></i>\n          <span class=\"link-text\">Messages</span>\n          <!-- <span class=\"badge badge-pill badge-success\">5</span> -->\n          <span class=\"nav-alert messages\"></span>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"btn nav-link\">\n          <i class=\"far fa-user\"></i>\n          <span class=\"link-text\">Profile</span>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"btn nav-link\" (click)=\"logout()\">\n          <i class=\"fas fa-sign-out-alt\"></i>\n          <span class=\"link-text\">Log-Out</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Profile } from '../models/profile.model';\n\n@Component({\n  selector: 'app-profile-card',\n  templateUrl: './profile-card.component.html',\n  styleUrls: ['./profile-card.component.scss']\n})\nexport class ProfileCardComponent implements OnInit {\n\n  @Input() profileDetails: Profile;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.profileDetails.profilePicture = this.profileDetails.profilePicture ?\n      'data:image/jpeg;base64,' + this.profileDetails.profilePicture : undefined;\n  }\n\n}\n","<div class=\"card mb-4\">\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <img [src]=\"profileDetails.profilePicture\" class=\"img-fluid\">\n    </div>\n    <div class=\"col-8 card-body\">\n      <h5 class=\"card-title\">{{profileDetails.firstName}} {{profileDetails.lastName}}</h5>\n      <h6 class=\"card-subtitle mb-2 text-muted\">{{profileDetails.city}}, {{profileDetails.country}}</h6>\n      <!-- Button \n          <a class=\"btn-floating btn-action ml-auto mr-4 mdb-color lighten-3 waves-effect waves-light\">\n            <i class=\"fas fa-chevron-right pl-1\"></i>\n          </a>-->\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from '../services/candidate.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Candidate } from '../models/candidate.model';\nimport { LoggedInUser } from '../models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private candidateService: CandidateService, private authService: AuthenticationService, private router: Router) { }\n\n  userDetails: LoggedInUser;\n  candidateDetails: Candidate;\n\n  ngOnInit(): void {\n    this.candidateService.getCandidateProfile().subscribe(\n      (response) => {\n        this.candidateDetails = response;\n        this.candidateService.setCandidateDetails(this.candidateDetails);\n      },\n      (error) => {\n        if (error.error.code === 'CANDIDATE_DOES_NOT_EXIST') {\n          this.router.navigate(['editprofile']);\n        }\n      });\n    this.userDetails = this.authService.getUserDetails();\n  }\n\n  goToEdit() {\n    this.router.navigate(['editprofile']);\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-12 col-lg-6 mb-4 align-items-stretch\">\n    <div class=\"card border-0 rounded-0 h-100\">\n      <div class=\"card-title mb-1 px-3 pt-3\">\n        <div class=\"row\">\n          <h4 class=\"col-lg-6 pt-2\">Personal Details</h4>\n          <div class=\"col-lg-6\">\n            <a class=\"btn btn-outline-lightning rounded-0 px-2 py-1 waves-effect waves-light float-right\"\n              (click)=\"goToEdit()\">\n              <i class=\"far fa-edit\"></i>\n            </a>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"row mb-1\">\n            <div class=\"col-4 p-0\">Date of Birth:</div>\n            <div class=\"col-8\">{{candidateDetails.dateOfBirth | date}}</div>\n          </div>\n          <div class=\"row mb-1\">\n            <div class=\"col-4 p-0\">Gender:</div>\n            <div class=\"col-8\">{{candidateDetails.gender}}</div>\n          </div>\n          <div class=\"row mb-1\">\n            <div class=\"col-4 p-0\">Lcation:</div>\n            <div class=\"col-8\">{{candidateDetails.city}}, {{candidateDetails.country}}</div>\n          </div>\n          <div class=\"row mb-1\">\n            <div class=\"col-4 p-0\">Email:</div>\n            <div class=\"col-8\">{{userDetails.username}}</div>\n          </div>\n          <div class=\"row mb-1\">\n            <div class=\"col-4 p-0\">Contact Number:</div>\n            <div class=\"col-8\">{{userDetails.contactnumber}}</div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card-title mb-1 px-3\">\n        <div class=\"row\">\n          <h4 class=\"col-lg-6 pt-2\">Education Details</h4>\n          <div class=\"col-lg-6\">\n            <a class=\"btn btn-outline-lightning rounded-0 px-2 py-1 waves-effect waves-light float-right\">\n              <i class=\"far fa-edit\"></i>\n            </a>\n          </div>\n        </div>\n        <div *ngIf=\"candidateDetails.education.length > 0; else addEducation\">\n          <div class=\"card-body pb-0\" *ngFor=\"let data of candidateDetails.education; let i = index\">\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Institution {{i+1}}:</div>\n              <div class=\"col-8\">{{data.institution}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Board/Degree:</div>\n              <div class=\"col-8\">{{data.degree}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Major:</div>\n              <div class=\"col-8\">{{data.description}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Percentage/CGPA:</div>\n              <div class=\"col-8\">{{data.percentage}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Course Duration:</div>\n              <div class=\"col-8\">{{data.startDate | date}} - {{data.endDate | date}}</div>\n            </div>\n          </div>\n        </div>\n        <ng-template #addEducation>\n          <div class=\"card-body\">\n            <alert type=\"info\">Add your academic details.</alert>\n          </div>\n        </ng-template>\n      </div>\n      <div class=\"card-title mb-1 px-3\">\n        <div class=\"row\">\n          <h4 class=\"col-lg-12 pt-2\">Your Skills:</h4>\n          <div class=\"card-body pt-1\">\n            <mat-chip-list>\n              <mat-chip *ngFor=\"let skill of candidateDetails.skills\">\n                {{skill.skillName}}\n              </mat-chip>\n            </mat-chip-list>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-12 col-lg-6 mb-4 align-items-stretch pl-0\">\n    <div class=\"card border-0 rounded-0 h-100\">\n      <div class=\"card-title mb-1 px-3 pt-3 pb-2\">\n        <div class=\"row\">\n          <h4 class=\"col-lg-6 pt-2\">Experience Details:</h4>\n          <div class=\"col-lg-6\">\n            <a class=\"btn btn-outline-lightning rounded-0 px-2 py-1 waves-effect waves-light float-right\">\n              <i class=\"far fa-edit\"></i>\n            </a>\n          </div>\n        </div>\n        <div *ngIf=\"candidateDetails.experience.length > 0;else addExperience\">\n          <div class=\"card-body pb-0\" *ngFor=\"let data of candidateDetails.experience; let i = index\">\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Organization {{i+1}}:</div>\n              <div class=\"col-8\">{{data.organization}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Position/Role:</div>\n              <div class=\"col-8\">{{data.designation}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Employement Type:</div>\n              <div class=\"col-8\">{{data.type}}</div>\n            </div>\n            <div class=\"row mb-1\" *ngIf=\"data.endDate && !data.current\">\n              <div class=\"col-4 p-0\">Period:</div>\n              <div class=\"col-8\">{{data.startDate | date}} - {{data.endDate | date}}</div>\n            </div>\n            <div class=\"row mb-1\" *ngIf=\"data.current\">\n              <div class=\"col-12 p-0\">I am currently working here since {{data.startDate | date}}.</div>\n            </div>\n          </div>\n        </div>\n        <ng-template #addExperience>\n          <div class=\"card-body\">\n            <alert type=\"info\">Tell us where you worked.</alert>\n          </div>\n        </ng-template>\n      </div>\n\n      <div class=\"card-title mb-1 px-3\">\n        <div class=\"row\">\n          <h4 class=\"col-lg-6 pt-2\">Your Projects</h4>\n          <div class=\"col-lg-6\">\n            <a class=\"btn btn-outline-lightning rounded-0 px-2 py-1 waves-effect waves-light float-right\">\n              <i class=\"far fa-edit\"></i>\n            </a>\n          </div>\n        </div>\n        <div *ngIf=\"candidateDetails.project.length > 0; else addProject\">\n          <div class=\"card-body\" *ngFor=\"let data of candidateDetails.project; let i = index\">\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Title {{i+1}}:</div>\n              <div class=\"col-8\">{{data.name}} ({{data.startDate | date}} - {{data.endDate | date}})</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">About:</div>\n              <div class=\"col-8\">{{data.description}}</div>\n            </div>\n          </div>\n        </div>\n        <ng-template #addProject>\n          <div class=\"card-body\">\n            <alert type=\"info\">Add projects to showcase your work.</alert>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Job } from '../models/jobs.model';\nimport { CandidateService } from '../services/candidate.service';\nimport { Status } from '../constants/application.constants';\n\n@Component({\n  selector: 'app-saved-jobs',\n  templateUrl: './saved-jobs.component.html',\n  styleUrls: ['./saved-jobs.component.css']\n})\nexport class SavedJobsComponent implements OnInit {\n  constructor(private http: HttpClient, private candidateService: CandidateService) { }\n  jobList: Job[];\n  ngOnInit(): void {\n    const list = this.candidateService.statusfilter(Status.SAVE);\n    this.jobList = list.map(item => item.job);\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-4\" *ngFor=\"let job of jobList\">\n            <app-jobcard [jobDetails]=\"job\"></app-jobcard>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from '../services/candidate.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Candidate } from '../models/candidate.model';\nimport { Profile } from '../models/profile.model';\n\n@Component({\n  selector: 'app-search-area',\n  templateUrl: './search-area.component.html',\n  styleUrls: ['./search-area.component.scss'],\n})\nexport class SearchAreaComponent implements OnInit {\n  profiles: Profile[];\n  constructor(\n    private candidateService: CandidateService,\n    private authService: AuthenticationService\n  ) { }\n\n  ngOnInit(): void {\n    this.candidateService.getAllCandidates().subscribe(\n      (response) => {\n        this.profiles = response;\n      });\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-4\" *ngFor=\"let profile of profiles\">\n            <app-profile-card [profileDetails]=\"profile\"></app-profile-card>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  isSidebarPinned = false;\n  isSidebarToggeled = false;\n\n  constructor() { }\n\n  toggleSidebar() {\n    this.isSidebarToggeled = !this.isSidebarToggeled;\n  }\n\n  toggleSidebarPin() {\n    this.isSidebarPinned = !this.isSidebarPinned;\n  }\n\n  getSidebarStat() {\n    return {\n      isSidebarPinned: this.isSidebarPinned,\n      isSidebarToggeled: this.isSidebarToggeled\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { CandidateService } from '../services/candidate.service';\nimport { Observable } from 'rxjs';\nimport { Candidate } from '../models/candidate.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicationService {\n\n  constructor(private http: HttpClient, private authService: AuthenticationService, private candidateService: CandidateService) { }\n  applyUrl = environment.baseUrl + 'apply';\n  withdrawUrl = environment.baseUrl + 'withdraw';\n  saveUrl = environment.baseUrl + 'save';\n\n  applyJobs(canId: number, jobId: number): Observable<Candidate> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.applyUrl + '/' + canId + '/' + jobId;\n    return this.http.post<Candidate>(url, { headers });\n  }\n\n  withdrawJobs(appId: number): Observable<Candidate> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.withdrawUrl + '/' + appId;\n    return this.http.post<Candidate>(url, { headers });\n  }\n\n  saveJobs(canId: number, jobId: number): Observable<Candidate> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.saveUrl + '/' + canId + '/' + jobId;\n    return this.http.post<Candidate>(url, { headers });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router) { }\n\n  canActivate(): boolean {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate(['login']);\n      console.log('HI')\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { LoggedInUser } from '../models/user';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthenticationService {\n\n    private authenticationApiUrl: string = environment.baseUrl + 'authenticate';\n    private userDetails: LoggedInUser;\n\n    constructor(private httpClient: HttpClient, public router: Router) { }\n\n    public getUserDetails() {\n        return this.userDetails;\n    }\n\n    public setUserDetails(userDetails: LoggedInUser) {\n        this.userDetails = userDetails;\n    }\n\n    updateUserDetails(userData: LoggedInUser): Observable<boolean> {\n        let headers = new HttpHeaders();\n        headers = headers.set('Authorization', 'Bearer ' + this.getUserDetails().token);\n        const url: string = environment.baseUrl + 'user';\n        return this.httpClient.put<boolean>(url, userData, { headers });\n    }\n\n    authenticate(user: string, password: string): Observable<LoggedInUser> {\n        let headers = new HttpHeaders();\n        headers = headers.set('Authorization', 'Basic ' + btoa(user + ':' + password));\n        return this.httpClient.get<LoggedInUser>(this.authenticationApiUrl, { headers });\n    }\n\n    public isLoggedIn(): boolean {\n        if (this.getUserDetails()) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { Observable } from 'rxjs';\nimport { Candidate, Education, Experience, Project, Skill } from '../models/candidate.model';\nimport { environment } from 'src/environments/environment';\nimport { Profile } from '../models/profile.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CandidateService {\n\n  constructor(private http: HttpClient, private authService: AuthenticationService) { }\n  private candidateDetails: Candidate;\n\n  candidateUrl = environment.baseUrl + 'profile';\n  commonUrl = environment.baseUrl + 'edit';\n  educationUrl = 'education';\n  experienceUrl = 'project';\n  projectUrl = 'experience';\n  skillUrl = 'skills';\n  profilePicture: any;\n\n  getCandidateDetails(): Candidate {\n    return this.candidateDetails;\n  }\n\n  setCandidateDetails(candidateDetails: Candidate): void {\n    this.candidateDetails = candidateDetails;\n  }\n\n  getCandidateProfile(): Observable<Candidate> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.candidateUrl + '/' + this.authService.getUserDetails().id;\n    return this.http.get<Candidate>(url, { headers });\n  }\n\n  addCandidateDetails(candidateDetails: Candidate): Observable<Candidate> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.candidateUrl + '/' + this.authService.getUserDetails().id;\n    return this.http.post<Candidate>(url, candidateDetails, { headers });\n  }\n\n  updateEducationDetails(EducationDetails: Education): Observable<Education> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.commonUrl + '/' + this.getCandidateDetails().id + '/' + this.educationUrl;\n    return this.http.post<Education>(url, EducationDetails, { headers });\n  }\n\n  updateExperienceDetails(ExperienceDetails: Experience): Observable<Experience> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.commonUrl + '/' + this.getCandidateDetails().id + '/' + this.experienceUrl;\n    return this.http.post<Experience>(url, ExperienceDetails, { headers });\n  }\n\n  updateProjectDetails(ProjectDetails: Project): Observable<Project> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.commonUrl + '/' + this.getCandidateDetails().id + '/' + this.projectUrl;\n    return this.http.post<Project>(url, ProjectDetails, { headers });\n  }\n\n  updateSkillDetails(SkillDetails: Skill): Observable<Skill> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.commonUrl + '/' + this.getCandidateDetails().id + '/' + this.skillUrl;\n    return this.http.post<Skill>(url, SkillDetails, { headers });\n  }\n\n  statusfilter(status: string) {\n    const list = this.getCandidateDetails().applications.filter(item => item.status === status);\n    return list;\n  }\n\n  uploadFile(file: FormData): Observable<any> {\n    console.log(file);\n    const url = this.candidateUrl + '/image/' + this.candidateDetails.id;\n    return this.http.post<any>(url, file);\n  }\n\n  getProfilePicture(): string {\n    const url = this.candidateUrl + '/image/' + this.candidateDetails.id;\n    let retrieveResonse;\n    this.http.get(url).subscribe(\n      (response) => { retrieveResonse = 'data:image/jpeg;base64,' + response; });\n    this.profilePicture = retrieveResonse;\n    return retrieveResonse;\n  }\n\n  getAllCandidates(): Observable<Profile[]> {\n    const url = this.candidateUrl + '/all';\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    return this.http.get<Profile[]>(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Job } from '../models/jobs.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService {\n\n  constructor(private http: HttpClient) { }\n\n  readonly endpoint = 'jobs';\n  jobUrl: string = environment.baseUrl + this.endpoint;\n\n  getAllJobs(): Observable<Job[]> {\n    return this.http.get<Job[]>(this.jobUrl);\n  }\n\n  getJobById(id: number): Observable<Job> {\n    return this.http.get<Job>(this.jobUrl + id);\n  }\n\n  addJob(job: Job): Observable<Job> {\n    return this.http.post<Job>(this.jobUrl, job);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n// import { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SignUpService {\n\n    public url: string = environment.baseUrl + \"signUp\";\n    public isRecruiter: boolean;\n    constructor(private _httpClient: HttpClient) { }\n\n    addUser(user: User): Observable<any> {\n        return this._httpClient.post<any>(this.url, user)\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { CandidateService } from '../services/candidate.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { UploadFileComponent } from '../upload-file/upload-file.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.scss']\n})\nexport class SideBarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthenticationService,\n    public candidateService: CandidateService,\n    private dialog: MatDialog,\n    private router: Router\n  ) { }\n\n  firstname: string;\n  lastname: string;\n  headLine: string;\n  ngOnInit(): void {\n    this.detailsInit();\n  }\n\n  changePicture(): void {\n    const dialogConfig = new MatDialogConfig();\n    this.dialog.open(UploadFileComponent, dialogConfig);\n  }\n\n  detailsInit(): void {\n    if (this.authService.getUserDetails()) {\n      this.firstname = this.authService.getUserDetails().firstname;\n      this.lastname = this.authService.getUserDetails().lastname;\n    }\n    this.candidateService.getCandidateProfile().subscribe(\n      (response) => {\n        this.headLine = response.experience[0].designation;\n        this.candidateService.setCandidateDetails(response);\n      },\n      (error) => {\n        if (error.error.code === 'CANDIDATE_DOES_NOT_EXIST') {\n          this.router.navigate(['editprofile']);\n        }\n      });\n    this.headLine = !this.headLine ? this.authService.getUserDetails().role : undefined;\n  }\n\n}\n","<aside class=\"sidebar shadow-sm\">\n\n  <div class=\"sidebar-profile d-flex flex-column justify-content-center pt-5 pb-3\">\n    <div class=\"picture-wrapper mb-4\">\n      <div class=\"user-picture m-auto pointer-link\" (click)=\"changePicture()\">\n        <div *ngIf=\"this.candidateService.profilePicture\">\n          <img [src]=\"this.candidateService.profilePicture\" class=\"img-fluid\">\n        </div>\n        <div *ngIf=\"!this.candidateService.profilePicture\">\n          <img src=\"./assets/img/user.jpg\" class=\"img-fluid\">\n        </div>\n      </div>\n    </div>\n    <div class=\"profile-details text-center pb-4\">\n      <p class=\"mb-0 text-uppercase name\">{{firstname}} {{lastname}}</p>\n      <small class=\"text-uppercase role\">{{headLine}}</small>\n    </div>\n  </div>\n  <nav class=\"sidebar-menu pt-3 pb-3\">\n    <div class=\"menu-header mt-3 mb-2\">\n      Components\n    </div>\n    <ul class=\"menu-items\">\n      <li>\n        <a routerLink=\"/dashboard\" routerLinkActive=\"active\">\n          <i class=\"fa fa-tv\"></i>\n          <span>Dashboard</span>\n        </a>\n      </li>\n      <li>\n        <a routerLink=\"/profile\" routerLinkActive=\"active\">\n          <i class=\"fas fa-user\"></i>\n          <span>Profile</span>\n        </a>\n      </li>\n      <li>\n        <a routerLink=\"/addjobs\" routerLinkActive=\"active\">\n          <i class=\"fas fa-envelope\"></i>\n          <span class=\"dropdown-btn\">Post Jobs</span>\n        </a>\n      </li>\n      <li>\n        <a routerLink=\"/jobs\" routerLinkActive=\"active\">\n          <i class=\"fas fa-envelope\"></i>\n          <span class=\"dropdown-btn\">Jobs</span>\n        </a>\n      </li>\n      <li>\n        <a routerLink=\"/appliedjobs\" routerLinkActive=\"active\">\n          <i class=\"fas fa-check-circle\"></i>\n          <span class=\"dropdown-btn\">Applied Jobs</span>\n        </a>\n      </li>\n      <li>\n        <a routerLink=\"/savedjobs\" routerLinkActive=\"active\">\n          <i class=\"fas fa-bookmark\"></i>\n          <span class=\"dropdown-btn\">Saved Jobs</span>\n        </a>\n      </li>\n    </ul>\n  </nav>\n\n</aside>","import { Component, OnInit, Input } from '@angular/core';\nimport {\n    FormGroup,\n    FormBuilder,\n    Validators,\n    FormControl,\n} from '@angular/forms';\nimport { User } from '../models/user';\nimport { SignUpService } from '../services/sign-up.service';\nimport { Router } from '@angular/router';\nimport { Alerts } from '../constants/errors.constants';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n    selector: 'app-sign-up',\n    templateUrl: './sign-up.component.html',\n    styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit {\n    public signUpForm: FormGroup;\n    public user: User;\n    public userCreated: boolean = null;\n    public errorMessage: string;\n    public errorType: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private signUpService: SignUpService,\n        private router: Router,\n        private authService: AuthenticationService\n    ) { }\n\n    ngOnInit() {\n        this.signUpForm = this.formBuilder.group({\n            username: ['', [Validators.required, this.isUsernameTaken, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]],\n            firstname: ['', [Validators.required]],\n            lastname: ['', [Validators.required]],\n            password: ['', [Validators.required]],\n            confirmPassword: [\n                '',\n                [Validators.required, this.matchConfirmPassword.bind(this)],\n            ],\n            contact: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\n        });\n    }\n    public get username() {\n        return this.signUpForm.get('username');\n    }\n\n    public get firstname() {\n        return this.signUpForm.get('firstname');\n    }\n\n    public get lastname() {\n        return this.signUpForm.get('lastname');\n    }\n\n    public get password() {\n        return this.signUpForm.get('password');\n    }\n\n    public get confirmPassword() {\n        return this.signUpForm.get('confirmPassword');\n    }\n\n    public get contact() {\n        return this.signUpForm.get('contact');\n    }\n\n    public matchConfirmPassword(\n        formControl: FormControl\n    ): { [s: string]: boolean } {\n        if (this.signUpForm) {\n            if (\n                formControl.value &&\n                formControl.value.length > 0 &&\n                formControl.value !== this.signUpForm.get('password').value\n            ) {\n                return { nomatch: true };\n            }\n        }\n        return null;\n    }\n\n    isUsernameTaken(formControl: FormControl): { [s: string]: boolean } {\n        if (formControl.value === 'admin') {\n            return { userNameTaken: true };\n        } else {\n            return null;\n        }\n    }\n\n    public goToLogin(): void {\n        this.router.navigate(['login']);\n    }\n\n    public addUser(): void {\n        this.user = {\n            id: null,\n            firstName: this.signUpForm.get('firstname').value,\n            lastName: this.signUpForm.get('lastname').value,\n            password: this.signUpForm.get('password').value,\n            userName: this.signUpForm.get('username').value,\n            contactNumber: this.signUpForm.get('contact').value,\n            role: undefined\n        };\n        this.signUpService.addUser(this.user).subscribe(\n            (data) => {\n                this.authService.setUserDetails(data);\n                this.userCreated = true;\n                this.errorType = Alerts.SUCCESS;\n                this.errorMessage = 'Signed Up Successfull.' + 'Logging you in.';\n                setTimeout(() => {\n                    this.navigateToEditProfile();\n                }, 1000);\n            },\n            (error) => {\n                if (error.status === 500) {\n                    this.errorType = Alerts.DANGER;\n                    this.errorMessage = error.error.message;\n                    this.userCreated = false;\n                }\n            }\n        );\n    }\n\n    public navigateToLogin(): void {\n        this.router.navigate(['login']);\n    }\n\n    public navigateToEditProfile(): void {\n        this.router.navigate(['editprofile']);\n    }\n}\n","<div class=\"login-sign-body row justify-content-center\">\n    <div class=\"col-md-9 col-lg-12 col-xl-10\">\n        <div class=\"card shadow-lg o-hidden border-0 my-5\">\n            <div class=\"card-body p-0\">\n                <div class=\"row\">\n                    <div class=\"col-lg-5 d-none d-lg-flex\">\n                        <div class=\"flex-grow-1 near-moon-gradient\">\n                            <img class=\"card-img-top img-fluid justify-content-center\" src=\"assets\\img\\bg-business.jpg\">\n                        </div>\n                    </div>\n                    <div class=\"col-lg-7\">\n                        <div class=\"p-5\">\n                            <div class=\"text-center\">\n                                <h4 class=\"text-dark mb-4\">Create an Account!</h4>\n                            </div>\n                            <alert [type]=\"errorType\">\n                                {{errorMessage}}\n                            </alert>\n                            <form class=\"user\" [formGroup]=\"signUpForm\" (submit)=\"addUser()\">\n                                <div class=\"form-group row\">\n                                    <div class=\"col-sm-6 mb-3 mb-sm-0\"><input class=\"form-control form-control-user\"\n                                            type=\"text\" id=\"exampleFirstName\" placeholder=\"First Name\"\n                                            onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                            formControlName=\"firstname\" minlength=\"3\" maxlength=\"30\" required>\n                                    </div>\n                                    <div class=\"col-sm-6\"><input class=\"form-control form-control-user\" type=\"text\"\n                                            id=\"exampleFirstName\" placeholder=\"Last Name\" formControlName=\"lastname\"\n                                            onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                            minlength=\"3\" maxlength=\"30\" required>\n                                    </div>\n                                    <div *ngIf=\"firstname.invalid && (firstname.dirty || firstname.touched)\"\n                                        class=\"offset-sm-1 text-danger\">\n\n                                        <div *ngIf=\"firstname.errors.required\">\n                                            First name is required.\n                                        </div>\n                                        <div *ngIf=\"firstname.errors.minlength\">\n                                            First name must be at least 3 characters long.\n                                        </div>\n                                    </div>\n\n                                    <div *ngIf=\"lastname.invalid && (lastname.dirty || lastname.touched)\"\n                                        class=\"offset-sm-1 text-danger\">\n                                        <div *ngIf=\"lastname.errors.required\">\n                                            Last name is required.\n                                        </div>\n                                        <div *ngIf=\"lastname.errors.minlength\">\n                                            Last name must be at least 3 characters long.\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-sm-6\"><input class=\"form-control form-control-user\" type=\"email\"\n                                            id=\"exampleInputEmail\" aria-describedby=\"emailHelp\"\n                                            placeholder=\"Email Address\" formControlName=\"username\" required>\n                                    </div>\n                                    <div class=\"col-sm-6\"><input class=\"form-control form-control-user\" type=\"text\"\n                                            id=\"exampleContact\" placeholder=\"Contact Number\" maxlength=\"10\"\n                                            oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                            formControlName=\"contact\" required>\n                                    </div>\n                                    <div class=\"offset-sm-1 text-danger\"\n                                        *ngIf=\"username.invalid && username.touched && username.dirty\">\n                                        Please enter valid email\n                                    </div>\n                                    <div class=\"offset-sm-1 text-danger\"\n                                        *ngIf=\"contact.invalid && contact.touched && contact.dirty\">\n                                        Please enter valid mobile number\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-sm-6 mb-3 mb-sm-0\">\n                                        <input class=\"form-control form-control-user\" type=\"password\"\n                                            id=\"examplePasswordInput\" minlength=\"5\" maxlength=\"30\"\n                                            placeholder=\"Password\" formControlName=\"password\" required>\n                                    </div>\n                                    <div class=\"col-sm-6\"><input class=\"form-control form-control-user\" type=\"password\"\n                                            id=\"exampleRepeatPasswordInput\" placeholder=\"Repeat Password\"\n                                            formControlName=\"confirmPassword\" required>\n                                    </div>\n                                    <div class=\"offset-sm-1 text-danger\"\n                                        *ngIf=\"confirmPassword.invalid && confirmPassword.errors.required && confirmPassword.touched\">\n                                        Confirm the Password</div>\n                                    <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n                                        class=\"offset-sm-1 text-danger\">\n                                        <div *ngIf=\"password.errors.minlength\">\n                                            Password must be at least 5 characters long.\n                                        </div>\n                                    </div>\n                                    <div class=\"offset-sm-1 text-danger\"\n                                        *ngIf=\"signUpForm.get('confirmPassword').hasError('nomatch')\">\n                                        Password\n                                        and Confirm Password do not match</div>\n                                </div>\n                                <button class=\"btn btn-primary btn-block text-white btn-user\"\n                                    [disabled]=\"signUpForm.invalid\" type=\"submit\">\n                                    Register Account\n                                </button>\n                                <hr>\n                            </form>\n                            <div class=\"row\">\n                                <div class=\"col-4\">\n                                    <a class=\"small\" href=\"javascript:void(0)\">Forgot Password?</a>\n                                </div>\n                                <div class=\"small offset-3 col-5\">Already have an account?\n                                    <a (click)=\"goToLogin()\"> Login!</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from '../services/candidate.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-upload-file',\n  templateUrl: './upload-file.component.html',\n  styleUrls: ['./upload-file.component.scss']\n})\nexport class UploadFileComponent implements OnInit {\n\n\n  constructor (private candidateService: CandidateService, public dialogRef: MatDialogRef<UploadFileComponent>) { }\n  selectedFile: File;\n  picture: any;\n  ngOnInit(): void {\n\n  }\n\n  onFileChanged(event): void {\n    this.selectedFile = event.target.files[0];\n    const uploadData = new FormData();\n    uploadData.append('imageFile', this.selectedFile);\n    this.candidateService.uploadFile(uploadData).subscribe(\n      response => {\n        console.log(response);\n        this.candidateService.profilePicture = 'data:image/jpeg;base64,' + response.profilePicture;\n        this.picture = this.candidateService.profilePicture;\n      }\n    );\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n","<div row>\n    <div class=\"col-12\">\n        Select a file from your computer.\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\" *ngIf=\"selectedFile.name\">\n        {{this.selectedFile.name}}\n    </div>\n    <input style=\"display: none\" type=\"file\" (change)=\"onFileChanged($event)\" #hiddenfileinput>\n    <button (click)=\"hiddenfileinput.click()\" class=\"waves-effect waves-light btn\">\n        <i class=\"material-icons left\">cloud</i>\n        Browse\n    </button>\n</div>\n<div class=\"row mt-3\" *ngIf=\"picture\" class=\"image-container\">\n    <img [src]=\"picture\" class=\"img-fluid\">\n</div>\n<div class=\"row mt-3\" *ngIf=\"picture\">\n    <a class=\"btn btn-outline-lightning rounded-0 px-2 py-1 waves-effect waves-light float-right\" (click)=\"close()\">\n        <i class=\"far fa-edit\"> Done </i>\n    </a>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8083/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}