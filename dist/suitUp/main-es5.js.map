{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-jobs/add-jobs.component.ts","webpack:///src/app/add-jobs/add-jobs.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/applied-jobs/applied-jobs.component.ts","webpack:///src/app/applied-jobs/applied-jobs.component.html","webpack:///src/app/constants/application.constants.ts","webpack:///src/app/constants/errors.constants.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/edit-profile/edit-profile.component.ts","webpack:///src/app/edit-profile/edit-profile.component.html","webpack:///src/app/edit-profile/education-form/education-form.component.ts","webpack:///src/app/edit-profile/education-form/education-form.component.html","webpack:///src/app/edit-profile/experience-form/experience-form.component.ts","webpack:///src/app/edit-profile/experience-form/experience-form.component.html","webpack:///src/app/edit-profile/personal-form/personal-form.component.ts","webpack:///src/app/edit-profile/personal-form/personal-form.component.html","webpack:///src/app/edit-profile/project-form/project-form.component.ts","webpack:///src/app/edit-profile/project-form/project-form.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/jobcard/jobcard.component.ts","webpack:///src/app/jobcard/jobcard.component.html","webpack:///src/app/jobs/jobs.component.ts","webpack:///src/app/jobs/jobs.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/profile-card/profile-card.component.ts","webpack:///src/app/profile-card/profile-card.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/saved-jobs/saved-jobs.component.ts","webpack:///src/app/saved-jobs/saved-jobs.component.html","webpack:///src/app/search-area/search-area.component.ts","webpack:///src/app/search-area/search-area.component.html","webpack:///src/app/services/app.service.ts","webpack:///src/app/services/application.service.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/candidate.service.ts","webpack:///src/app/services/job.service.ts","webpack:///src/app/services/sign-up.service.ts","webpack:///src/app/side-bar/side-bar.component.ts","webpack:///src/app/side-bar/side-bar.component.html","webpack:///src/app/sign-up/sign-up.component.ts","webpack:///src/app/sign-up/sign-up.component.html","webpack:///src/app/upload-file/upload-file.component.ts","webpack:///src/app/upload-file/upload-file.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddJobsComponent","fb","candidateService","jobService","authService","datePipe","indeterminate","jobDetailsForm","group","companyName","required","location","pointOfContact","compensation","vacancies","position","description","minimumEducation","minimumExperience","finaldescription","finallocation","duration","travelRequired","travelPercent","rounds","array","createRoundFormGroup","skillsRequired","createSkillFormGroup","get","push","i","length","removeAt","reset","name","experience","datepipe","formattedDate","transform","Date","dirty","processData","processId","value","jobData","jobId","postedOn","process","console","log","addJob","subscribe","response","postJob","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","router","appService","title","displayHeader","displayFooter","displayBar","baseURLH","baseURLF","events","pipe","event","modifyDisplay","url","indexOf","classes","getSidebarStat","isSidebarPinned","isSidebarToggeled","toggleSidebar","AppModule","declarations","providers","bootstrap","AppliedJobsComponent","http","list","statusfilter","APPLY","jobList","map","item","job","Status","Errors","Alerts","DashboardComponent","EditProfileComponent","isOptional","isChecked","addCandidateDetails","getCandidateDetails","data","navigate","updateUserDetails","getUserDetails","EducationFormComponent","educationDetailsForm","educations","createEducationFormGroup","institution","degree","startDate","endDate","percentage","education","setCandidateDetails","addEducationDetails","ExperienceFormComponent","experienceDetailsForm","experiences","createExperienceFormGroup","designation","type","organization","current","addExperienceDetails","PersonalFormComponent","profileData1","profileData2","email","username","contact","contactnumber","dob","dateOfBirth","personalDetailsForm","country","city","address","gender","summary","role","patchValue","bio","candidateData","profilePicture","resume","project","skills","applications","userData","ProjectFormComponent","projectDetailsForm","createProjectFormGroup","skillName","rating","ongoing","addProjectDetails","FooterComponent","HeaderComponent","HomeComponent","JobcardComponent","applicationService","candidateDetails","applyJobs","jobDetails","saveJobs","applyforjob","savejob","JobsComponent","getAllJobs","LoginComponent","formBuild","loginForm","pattern","password","authenticate","getUsername","getPassword","setUserDetails","errorMessage","errorType","SUCCESS","goToProfile","error","DANGER","message","onSubmit","toSignup","NavBarComponent","isCollapsed","toggleSidebarPin","goToSearch","logout","ProfileCardComponent","profileDetails","undefined","ProfileComponent","getCandidateProfile","userDetails","goToEdit","SavedJobsComponent","SAVE","SearchAreaComponent","getAllCandidates","profiles","AppService","providedIn","ApplicationService","applyUrl","baseUrl","withdrawUrl","saveUrl","canId","headers","set","token","post","appId","AuthGuardService","isLoggedIn","AuthenticationService","httpClient","authenticationApiUrl","put","user","btoa","CandidateService","candidateUrl","commonUrl","educationUrl","experienceUrl","projectUrl","skillUrl","EducationDetails","ExperienceDetails","ProjectDetails","SkillDetails","status","filter","file","retrieveResonse","JobService","endpoint","jobUrl","SignUpService","_httpClient","SideBarComponent","dialog","detailsInit","dialogConfig","open","firstname","lastname","headLine","changePicture","SignUpComponent","formBuilder","signUpService","userCreated","signUpForm","isUsernameTaken","confirmPassword","matchConfirmPassword","bind","formControl","nomatch","userNameTaken","firstName","lastName","userName","contactNumber","addUser","setTimeout","navigateToEditProfile","goToLogin","UploadFileComponent","dialogRef","selectedFile","target","files","uploadData","FormData","append","uploadFile","picture","close","onFileChanged","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACkH4B;;AAEI;;AACI;;AAA8D;;AAClD;;AACZ;;AACI;;AAEJ;;AACA;;AAC4D;;AAAW;;AACvE;;AACI;;AAIJ;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAkB;;AAChC;;AACA;;AAC8B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE1B;;AAAU;;AAAa;;AAC3B;;AACJ;;AACJ;;AACA;;AAA2B;;AAC/B;;;;;;AA7BI;;AAEkE;;AAAA;;AAGR;;AAAA;;;;;;;;AA2D9D;;AAEI;;AAAI;;AAAc;;AAClB;;AACI;;AACI;;AAAmB;;AACvB;;AACI;;AAIJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAGJ;;AAEA;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAkB;;AAChC;;AACA;;AAC8B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE1B;;AAAU;;AAAa;;AAC3B;;AACJ;;AAEJ;;AACA;;AACI;;AACgD;;AAAY;;AAC5D;;AACI;;AAEJ;;AACA;;AAC4D;;AAChD;;AACZ;;AACI;;AAEJ;;AACJ;;AAEA;;AAA2B;;AAC/B;;;;;;AAlDI;;AACI;;AAAA;;;;QDvKvBC,gB;AAIX,gCAAoBC,EAApB,EAA6CC,gBAA7C,EACSC,UADT,EACyCC,WADzC,EACqFC,QADrF,EACyG;AAAA;;AADrF,aAAAJ,EAAA,GAAAA,EAAA;AAAyB,aAAAC,gBAAA,GAAAA,gBAAA;AACpC,aAAAC,UAAA,GAAAA,UAAA;AAAgC,aAAAC,WAAA,GAAAA,WAAA;AAA4C,aAAAC,QAAA,GAAAA,QAAA;AAHrF,aAAAC,aAAA,GAAgB,KAAhB;AAG4G;;;;mCAEpG;AAEN,eAAKC,cAAL,GAAsB,KAAKN,EAAL,CAAQO,KAAR,CAAc;AAClCC,uBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADqB;AAElCC,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAFwB;AAGlCE,0BAAc,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAHkB;AAIlCG,wBAAY,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CAJoB;AAKlCI,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CALuB;AAMlCK,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB,CANwB;AAOlCM,uBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWN,QAAhB,CAPqB;AAQlCO,4BAAgB,EAAE,CAAC,EAAD,EAAK,0DAAWP,QAAhB,CARgB;AASlCQ,6BAAiB,EAAE,CAAC,EAAD,EAAK,0DAAWR,QAAhB,CATe;AAWlCS,4BAAgB,EAAE,CAAC,EAAD,EAAK,0DAAWT,QAAhB,CAXgB;AAYlCU,yBAAa,EAAE,CAAC,EAAD,EAAK,0DAAWV,QAAhB,CAZmB;AAalCW,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWX,QAAhB,CAbwB;AAelCY,0BAAc,EAAE,CAAC,EAAD,EAAK,0DAAWZ,QAAhB,CAfkB;AAgBlCa,yBAAa,EAAE,CAAC,EAAD,EAAK,0DAAWb,QAAhB,CAhBmB;AAiBlCc,kBAAM,EAAE,KAAKvB,EAAL,CAAQwB,KAAR,CAAc,CAAC,KAAKC,oBAAL,EAAD,CAAd,CAjB0B;AAkBlCC,0BAAc,EAAE,KAAK1B,EAAL,CAAQwB,KAAR,CAAc,CAAC,KAAKG,oBAAL,EAAD,CAAd;AAlBkB,WAAd,CAAtB;AAqBD;;;4CAE0B;AACzB,cAAMJ,MAAM,GAAG,KAAKjB,cAAL,CAAoBsB,GAApB,CAAwB,QAAxB,CAAf;AACAL,gBAAM,CAACM,IAAP,CAAY,KAAKJ,oBAAL,EAAZ;AACD;;;2CAEyBK,C,EAAW;AACnC,cAAMP,MAAM,GAAG,KAAKjB,cAAL,CAAoBsB,GAApB,CAAwB,QAAxB,CAAf;;AACA,cAAIL,MAAM,CAACQ,MAAP,GAAgB,CAApB,EAAuB;AACrBR,kBAAM,CAACS,QAAP,CAAgBF,CAAhB;AACD,WAFD,MAEO;AACLP,kBAAM,CAACU,KAAP;AACD;AACF;;;+CAE2B;AAC1B,iBAAO,IAAI,wDAAJ,CAAc;AACnBvB,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADS;AAEnBU,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFS;AAGnBT,0BAAc,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAHG;AAInBI,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAJM,WAAd,CAAP;AAMD;;;4CAE0B;AACzB,cAAMW,cAAc,GAAG,KAAKpB,cAAL,CAAoBsB,GAApB,CAAwB,gBAAxB,CAAvB;AACAF,wBAAc,CAACG,IAAf,CAAoB,KAAKF,oBAAL,EAApB;AACD;;;2CAEyBG,C,EAAW;AACnC,cAAMJ,cAAc,GAAG,KAAKpB,cAAL,CAAoBsB,GAApB,CAAwB,gBAAxB,CAAvB;;AACA,cAAIF,cAAc,CAACK,MAAf,GAAwB,CAA5B,EAA+B;AAC7BL,0BAAc,CAACM,QAAf,CAAwBF,CAAxB;AACD,WAFD,MAEO;AACLJ,0BAAc,CAACO,KAAf;AACD;AACF;;;+CAE2B;AAC1B,iBAAO,IAAI,wDAAJ,CAAc;AACnBC,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADa;AAEnBC,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAFO,WAAd,CAAP;AAID;;;kCAES;AACR,cAAMC,QAAQ,GAAa,IAAI,wDAAJ,CAAa,OAAb,CAA3B;AACA,cAAIC,aAAa,GAAGD,QAAQ,CAACE,SAAT,CAAmB,IAAIC,IAAJ,EAAnB,EAA+B,sBAA/B,CAApB;;AACA,cAAI,KAAKjC,cAAL,CAAoBkC,KAAxB,EAA+B;AAE7B,iBAAKC,WAAL,GAAmB;AACjBC,uBAAS,EAAE,IADM;AAEjB3B,yBAAW,EAAE,KAAKT,cAAL,CAAoBsB,GAApB,CAAwB,kBAAxB,EAA4Ce,KAFxC;AAGjBjC,sBAAQ,EAAE,KAAKJ,cAAL,CAAoBsB,GAApB,CAAwB,eAAxB,EAAyCe,KAHlC;AAIjBvB,sBAAQ,EAAE,KAAKd,cAAL,CAAoBsB,GAApB,CAAwB,UAAxB,EAAoCe,KAJ7B;AAKjBpB,oBAAM,EAAE,KAAKjB,cAAL,CAAoBqC,KAApB,CAA0BpB;AALjB,aAAnB;AAOA,gBAAMqB,OAAO,GAAQ;AACnBC,mBAAK,EAAE,IADY;AAEnBC,sBAAQ,EAAE,KAAK1C,QAAL,CAAckC,SAAd,CAAwB,IAAIC,IAAJ,EAAxB,EAAoC,wBAApC,CAFS;AAGnB/B,yBAAW,EAAE,KAAKF,cAAL,CAAoBsB,GAApB,CAAwB,aAAxB,EAAuCe,KAHjC;AAInB5B,yBAAW,EAAE,KAAKT,cAAL,CAAoBsB,GAApB,CAAwB,aAAxB,EAAuCe,KAJjC;AAKnBjC,sBAAQ,EAAE,KAAKJ,cAAL,CAAoBsB,GAApB,CAAwB,UAAxB,EAAoCe,KAL3B;AAMnBhC,4BAAc,EAAE,KAAKL,cAAL,CAAoBsB,GAApB,CAAwB,gBAAxB,EAA0Ce,KANvC;AAOnB/B,0BAAY,EAAE,KAAKN,cAAL,CAAoBsB,GAApB,CAAwB,cAAxB,EAAwCe,KAPnC;AAQnBtB,4BAAc,EAAE,KAAKf,cAAL,CAAoBsB,GAApB,CAAwB,gBAAxB,EAA0Ce,KARvC;AASnBrB,2BAAa,EAAE,KAAKhB,cAAL,CAAoBsB,GAApB,CAAwB,eAAxB,EAAyCe,KATrC;AAUnB9B,uBAAS,EAAE,KAAKP,cAAL,CAAoBsB,GAApB,CAAwB,WAAxB,EAAqCe,KAV7B;AAWnB7B,sBAAQ,EAAE,KAAKR,cAAL,CAAoBsB,GAApB,CAAwB,UAAxB,EAAoCe,KAX3B;AAYnB1B,+BAAiB,EAAE,KAAKX,cAAL,CAAoBsB,GAApB,CAAwB,mBAAxB,EAA6Ce,KAZ7C;AAanB3B,8BAAgB,EAAE,KAAKV,cAAL,CAAoBsB,GAApB,CAAwB,kBAAxB,EAA4Ce,KAb3C;AAcnBjB,4BAAc,EAAE,KAAKpB,cAAL,CAAoBqC,KAApB,CAA0BjB,cAdvB;AAenBqB,qBAAO,EAAE,KAAKN;AAfK,aAArB;AAkBAO,mBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,OAA3B;AACA,iBAAK1C,UAAL,CAAgBgD,MAAhB,CAAuBN,OAAvB,EAAgCO,SAAhC,CAA0C,UAACC,QAAD,EAAc;AACtDJ,qBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,QAA/B;AACD,aAFD,EA5B6B,CA+B7B;AACA;AACA;AACD;AACF;;;;;;;uBAlHUrD,gB,EAAgB,2H,EAAA,oJ,EAAA,iI,EAAA,8J,EAAA,yH;AAAA,K;;;YAAhBA,gB;AAAgB,mC;AAAA,e;AAAA,a;AAAA,kqN;AAAA;AAAA;ACd7B;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAW;;AACnB;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAIJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAIJ;;AACJ;;AAEA;;AACI;;AAAkE;;AAAS;;AAC3E;;AACI;;AAGJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAGJ;;AACJ;;AAEA;;AACI;;AAAwE;;AAC5D;;AACZ;;AACI;;AAGJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAGJ;;AACJ;;AAEA;;AACI;;AAAqE;;AAAY;;AACjF;;AACI;;AAIJ;;AACA;;AACI;;AAAc;;AAClB;;AACI;;AAIJ;;AACJ;;AAEA;;AACI;;AACI;;AAAW;;AACf;;AACI;;AAIJ;;AACA;;AACI;;AAA6B;AAAA;AAAA;;AACwB;;AAErD;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AAAiB;;AACrB;;AACI;;AAGJ;;AAEJ;;AACA;;AACA;;AACA;;AAAI;;AAAS;;AACb;;AACI;;AA+BJ;;AACA;;AACA;;AAAI;;AAAkB;;AACtB;;AACA;;AACI;;AAA0E;;AACjE;;AACT;;AACI;;AAIJ;;AACA;;AACI;;AAAmB;;AACvB;;AACI;;AAGJ;;AACJ;;AAEA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAGJ;;AACJ;;AAEA;;AACI;;AAoDJ;;AACA;;AACA;;AACI;;AAAwC;AAAA,mBAAS,IAAAsD,OAAA,EAAT;AAAkB,WAAlB;;AACA;;AAAa;;AACzD;;AAEJ;;AACJ;;AACJ;;AACJ;;AAGJ;;AACJ;;;;AArPM;;AA6FuD;;AAAA;;AAqB5B;;AAAA;;AAiEA;;AAAA;;AAwDD;;AAAA;;;;;;;;;sED7NnBtD,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTuD,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEd7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,MAAxB;AAAgCC,eAAS,EAAE;AAA3C,KADqB,EAErB;AAAEF,UAAI,EAAE,MAAR;AAAgBG,eAAS,EAAE;AAA3B,KAFqB,EAGrB;AAAEH,UAAI,EAAE,OAAR;AAAiBG,eAAS,EAAE;AAA5B,KAHqB,EAIrB;AAAEH,UAAI,EAAE,UAAR;AAAoBG,eAAS,EAAE;AAA/B,KAJqB,EAKrB;AAAEH,UAAI,EAAE,WAAR;AAAqBG,eAAS,EAAE,iFAAhC;AAAoDC,iBAAW,EAAE,CAAC,8EAAD;AAAjE,KALqB,EAMrB;AAAEJ,UAAI,EAAE,SAAR;AAAmBG,eAAS,EAAE;AAA9B,KANqB,EAOrB;AAAEH,UAAI,EAAE,aAAR;AAAuBG,eAAS,EAAE;AAAlC,KAPqB,EAQrB;AAAEH,UAAI,EAAE,MAAR;AAAgBG,eAAS,EAAE;AAA3B,KARqB,EASrB;AAAEH,UAAI,EAAE,aAAR;AAAuBG,eAAS,EAAE;AAAlC,KATqB,EAUrB;AAAEH,UAAI,EAAE,WAAR;AAAqBG,eAAS,EAAE;AAAhC,KAVqB,EAWrB;AAAEH,UAAI,EAAE,SAAR;AAAmBG,eAAS,EAAE;AAA9B,KAXqB,EAYrB;AAAEH,UAAI,EAAE,QAAR;AAAkBG,eAAS,EAAE;AAA7B,KAZqB,CAAvB;;QAmBaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBP,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBM,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBP,MAArB,CAAD,CADD;AAER5D,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AClC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;;;;;AAEI;;;;;;AAEI;;;;;;AAII;;;;QDECqE,Y;AASX,4BAAoBC,MAApB,EAA4CC,UAA5C,EAAoE;AAAA;;AAAA;;AAAhD,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAC,UAAA,GAAAA,UAAA;AAP5C,aAAAC,KAAA,GAAQ,QAAR;AACA,aAAAC,aAAA,GAAgB,KAAhB;AACA,aAAAC,aAAA,GAAgB,KAAhB;AACA,aAAAC,UAAA,GAAa,KAAb;AACO,aAAAC,QAAA,GAAgB,CAAC,GAAD,EAAM,OAAN,CAAhB;AACA,aAAAC,QAAA,GAAgB,CAAC,GAAD,EAAM,OAAN,EAAe,WAAf,EAA4B,QAA5B,CAAhB;AAGLP,cAAM,CAACQ,MAAP,CAAcC,IAAd,CAAmB,8DAAO,UAAAC,KAAK;AAAA,iBAAIA,KAAK,YAAY,6DAArB;AAAA,SAAZ,CAAnB,EAAoE1B,SAApE,CAA8E,UAAC0B,KAAD,EAA0B;AACtG,eAAI,CAACC,aAAL,CAAmBD,KAAK,CAACE,GAAzB;AACD,SAFD;AAGD;;;;sCAEaA,G,EAAG;AACf,eAAKT,aAAL,GAAsB,KAAKG,QAAL,CAAcO,OAAd,CAAsBD,GAAtB,IAA6B,CAAC,CAA/B,GAAoC,IAApC,GAA2C,KAAhE;AACA,eAAKR,aAAL,GAAsB,KAAKG,QAAL,CAAcM,OAAd,CAAsBD,GAAtB,IAA6B,CAAC,CAA/B,GAAoC,IAApC,GAA2C,KAAhE;AACA,eAAKP,UAAL,GAAmB,KAAKE,QAAL,CAAcM,OAAd,CAAsBD,GAAtB,IAA6B,CAAC,CAA/B,GAAoC,KAApC,GAA4C,IAA9D;AACD;;;qCAEY;AACX,cAAME,OAAO,GAAG;AACd,8BAAkB,KAAKb,UAAL,CAAgBc,cAAhB,GAAiCC,eADrC;AAEd,gCAAoB,KAAKf,UAAL,CAAgBc,cAAhB,GAAiCE;AAFvC,WAAhB;AAIA,iBAAOH,OAAP;AACD;;;wCAEY;AACX,eAAKb,UAAL,CAAgBiB,aAAhB;AACD;;;;;;;uBA/BUnB,Y,EAAY,uH,EAAA,iI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,8I;AAAA;AAAA;ACVzB;;AACA;;AACI;;AACA;;AACI;;AACA;;AAEI;;AACA;;AACJ;;AACA;;AAAqB;AAAA,mBAAS,IAAAmB,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AACnD;;AACJ;;;;AAZY;;AACuB;;AAAA;;AAClB;;AAAA;;AAEK;;AAAA;;AAIE;;AAAA;;;;;;;;;sEDEXnB,Y,EAAY;cALxB,uDAKwB;eALd;AACTZ,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVza8B,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,yDAAD,C;AAAU,gBAnBZ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,qEALO,EAMP,gEAAYtB,OAAZ,EANO,EAOP,sEAAeA,OAAf,EAPO,EAQP,6FARO,EASP,2EATO,EAUP,yEAVO,EAWP,oFAXO,EAYP,uEAZO,EAaP,qEAbO,EAcP,6EAdO,EAeP,yEAfO,EAgBP,uEAhBO,EAiBP,2EAjBO,CAmBY;;;;0HAGVsB,S,EAAS;AAAA,uBA9ClB,2DA8CkB,EA7ClB,wEA6CkB,EA5ClB,wEA4CkB,EA3ClB,mEA2CkB,EA1ClB,sEA0CkB,EAzClB,2EAyCkB,EAxClB,2EAwCkB,EAvClB,8EAuCkB,EAtClB,kFAsCkB,EArClB,4EAqCkB,EApClB,4EAoCkB,EAnClB,6GAmCkB,EAlClB,gHAkCkB,EAjClB,0GAiCkB,EAhClB,0FAgCkB,EA/BlB,uGA+BkB,EA9BlB,mEA8BkB,EA7BlB,0FA6BkB,EA5BlB,oFA4BkB,EA3BlB,uFA2BkB,EA1BlB,8EA0BkB,EAzBlB,0FAyBkB,EAxBlB,uFAwBkB;AAxBC,kBAGnB,uEAHmB,EAInB,oEAJmB,EAKnB,0DALmB,EAMnB,kEANmB,EAOnB,qEAPmB,EAOH,+DAPG,EAOH,qEAPG,EAUnB,6FAVmB,EAWnB,2EAXmB,EAYnB,yEAZmB,EAanB,oFAbmB,EAcnB,uEAdmB,EAenB,qEAfmB,EAgBnB,6EAhBmB,EAiBnB,yEAjBmB,EAkBnB,uEAlBmB,EAmBnB,2EAnBmB;AAwBD,O;AALF,K;;;;;sEAKPA,S,EAAS;cAhDrB,sDAgDqB;eAhDZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,wEAHY,EAIZ,mEAJY,EAKZ,sEALY,EAMZ,2EANY,EAOZ,2EAPY,EAQZ,8EARY,EASZ,kFATY,EAUZ,4EAVY,EAWZ,4EAXY,EAYZ,6GAZY,EAaZ,gHAbY,EAcZ,0GAdY,EAeZ,0FAfY,EAgBZ,uGAhBY,EAiBZ,mEAjBY,EAkBZ,0FAlBY,EAmBZ,oFAnBY,EAoBZ,uFApBY,EAqBZ,8EArBY,EAsBZ,0FAtBY,EAuBZ,uFAvBY,CADN;AA0BRtB,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,qEALO,EAMP,gEAAYD,OAAZ,EANO,EAOP,sEAAeA,OAAf,EAPO,EAQP,6FARO,EASP,2EATO,EAUP,yEAVO,EAWP,oFAXO,EAYP,uEAZO,EAaP,qEAbO,EAcP,6EAdO,EAeP,yEAfO,EAgBP,uEAhBO,EAiBP,2EAjBO,CA1BD;AA6CRwB,mBAAS,EAAE,CAAC,yDAAD,CA7CH;AA8CRC,mBAAS,EAAE,CAAC,2DAAD;AA9CH,S;AAgDY,Q;;;;;;;;;;;;;;;;;;AC9FtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEQ;;AACI;;AACJ;;;;;;AADiB;;AAAA;;;;QDQZC,oB;AACX,oCAAoBC,IAApB,EAA8C1F,gBAA9C,EAAkF;AAAA;;AAA9D,aAAA0F,IAAA,GAAAA,IAAA;AAA0B,aAAA1F,gBAAA,GAAAA,gBAAA;AAAuC;;;;mCAE7E;AACN,cAAM2F,IAAI,GAAG,KAAK3F,gBAAL,CAAsB4F,YAAtB,CAAmC,wEAAOC,KAA1C,CAAb;AACA,eAAKC,OAAL,GAAeH,IAAI,CAACI,GAAL,CAAS,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,GAAT;AAAA,WAAb,CAAf;AACD;;;;;;;uBANUR,oB,EAAoB,gI,EAAA,6I;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,8H;AAAA;AAAA;ACXjC;;AACI;;AACI;;AAGJ;;AACJ;;;;AAJ2B;;AAAA;;;;;;;;;sEDSdA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTpC,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXjC;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAY2C,MAAZ;;AAAA,eAAYA,MAAZ,EAAkB;AACd;AACA;AACA;AACH,KAJD,EAAYA,MAAM,KAANA,MAAM,MAAlB;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAYC,MAAZ;;AAAA,eAAYA,MAAZ,EAAkB;AACd;AACA;AACA;AACA;AACA;AACA;AACH,KAPD,EAAYA,MAAM,KAANA,MAAM,MAAlB;;AAQA,QAAYC,MAAZ;;AAAA,eAAYA,MAAZ,EAAkB;AACd;AACA;AACA;AACA;AACH,KALD,EAAYA,MAAM,KAANA,MAAM,MAAlB;;;;;;;;;;;;;;;;;ACRA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,kB;AAEX,oCAAc;AAAA;AAAG;;;;mCAET,CAEP;;;;;;;uBANUA,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA;AAAA;ACP/B;;AAAG;;AAAW;;;;;;;;sEDODA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACThD,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;AEP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACG8B;;;;;;AAMA;;;;;;AAMA;;;;;;AAMA;;;;;;AAKA;;;;QDdjB+C,oB;AASX,oCACUtG,gBADV,EAEUkE,MAFV,EAGUhE,WAHV,EAG4C;AAAA;;AAFlC,aAAAF,gBAAA,GAAAA,gBAAA;AACA,aAAAkE,MAAA,GAAAA,MAAA;AACA,aAAAhE,WAAA,GAAAA,WAAA;AANV,aAAAqG,UAAA,GAAa,IAAb;AACA,aAAAC,SAAA,GAAY,KAAZ;AAMK;;;;mCAEG,CACP;;;8CAEkB;AAAA;;AACjB,eAAKxG,gBAAL,CAAsByG,mBAAtB,CAA0C,KAAKzG,gBAAL,CAAsB0G,mBAAtB,EAA1C,EAAuFxD,SAAvF,CACE,UAACyD,IAAD,EAAU;AACR5D,mBAAO,CAACC,GAAR,CAAY2D,IAAZ;;AACA,kBAAI,CAACzC,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,MAAD,CAArB;AACD,WAJH;AAKA,eAAK1G,WAAL,CAAiB2G,iBAAjB,CAAmC,KAAK3G,WAAL,CAAiB4G,cAAjB,EAAnC,EAAsE5D,SAAtE;AACD;;;;;;;uBAzBUoD,oB,EAAoB,6I,EAAA,uH,EAAA,uJ;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,c;AAAA,qS;AAAA;AAAA;ACZjC;;AAEE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAAG;;AAAiB;;AACpB;;AACE;;AAAsC;;AAAI;;AAC1C;;AAAmB;AAAA,mBAAS,IAAAG,mBAAA,EAAT;AAA8B,WAA9B;;AAAgC;;AAAgB;;AAErE;;AACF;;AACF;;;;AAhCY;;AAAA,2GAAmC,UAAnC,EAAmC,KAAnC;;AAEW;;AAAA;;AAIX;;AAAA,4GAAoC,UAApC,EAAoC,cAApC;;AAEY;;AAAA;;AAIZ;;AAAA,6GAAqC,UAArC,EAAqC,cAArC;;AAEa;;AAAA;;AAIb;;AAAA,6GAAqC,UAArC,EAAqC,cAArC;;AAEU;;AAAA;;;;;;;;;sEDVTH,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTjD,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACUwB;;AAGI;;AACI;;AAAqE;;AAC5D;;AACT;;AACI;;AAIJ;;AAAM;;AACN;;AAAgE;;AAAc;;AAC9E;;AACI;;AAIJ;;AAEA;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAkB;;AAChC;;AACA;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAa;;AAC3B;;AACJ;;AAEJ;;AAEA;;AACI;;AAAqE;;AAAO;;AAC5E;;AACI;;AAIJ;;AAAM;;AACN;;AAAmE;;AAC1D;;AACT;;AACI;;AAEJ;;AACJ;;AAEA;;AACI;;AAAiE;;AAAc;;AAC/E;;AACI;;AAIJ;;AAAM;;AACN;;AAAiE;;AAAY;;AAC7E;;AACI;;AAEJ;;AACJ;;AACA;;AACJ;;;;;;AA/DI;;;;QDDfwD,sB;AAGX,sCAAoBhH,EAApB,EAA6CC,gBAA7C,EAAiF;AAAA;;AAA7D,aAAAD,EAAA,GAAAA,EAAA;AAAyB,aAAAC,gBAAA,GAAAA,gBAAA;AAAuC;;;;mCAE5E;AACN,eAAKgH,oBAAL,GAA4B,KAAKjH,EAAL,CAAQO,KAAR,CAAc;AACxC2G,sBAAU,EAAE,KAAKlH,EAAL,CAAQwB,KAAR,CAAc,CAAC,KAAK2F,wBAAL,EAAD,CAAd;AAD4B,WAAd,CAA5B;AAGD;;;gDAE8B;AAC7B,cAAMD,UAAU,GAAG,KAAKD,oBAAL,CAA0BrF,GAA1B,CAA8B,YAA9B,CAAnB;AACAsF,oBAAU,CAACrF,IAAX,CAAgB,KAAKsF,wBAAL,EAAhB;AACD;;;+CAE6BrF,C,EAAW;AACvC,cAAMoF,UAAU,GAAG,KAAKD,oBAAL,CAA0BrF,GAA1B,CAA8B,YAA9B,CAAnB;;AACA,cAAIsF,UAAU,CAACnF,MAAX,GAAoB,CAAxB,EAA2B;AACzBmF,sBAAU,CAAClF,QAAX,CAAoBF,CAApB;AACD,WAFD,MAEO;AACLoF,sBAAU,CAACjF,KAAX;AACD;AACF;;;mDAE+B;AAC9B,iBAAO,IAAI,wDAAJ,CAAc;AACnBmF,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADM;AAEnBC,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFW;AAGnBC,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAHQ;AAInBC,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAJU;AAKnBxG,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CALM;AAMnByG,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AANO,WAAd,CAAP;AAQD;;;8CAEqB;AACpB,cAAI,KAAKP,oBAAL,CAA0BzE,KAA9B,EAAqC;AACnC,iBAAKoE,IAAL,GAAY,KAAK3G,gBAAL,CAAsB0G,mBAAtB,EAAZ;AACA,iBAAKC,IAAL,CAAUa,SAAV,GAAsB,KAAKR,oBAAL,CAA0BtE,KAA1B,CAAgCuE,UAAtD;AACA,iBAAKjH,gBAAL,CAAsByH,mBAAtB,CAA0C,KAAKd,IAA/C;AACD;AACF;;;;;;;uBA1CUI,sB,EAAsB,2H,EAAA,oJ;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,0hF;AAAA;AAAA;ACVnC;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAkB;;AAC1B;;AACA;;AAEI;;AACI;;AAiEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAsC;;AAAI;;AAC1C;;AAAkC;AAAA,mBAAS,IAAAW,mBAAA,EAAT;AAA8B,WAA9B;;AAAgC;;AAAI;;AAC1E;;AACJ;;;;AApFM;;AAUuB;;AAAA;;;;;;;;;sEDAhBX,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT1D,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;gBAEhC;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACQ4B;;AAGI;;AACI;;AAAqE;;AACzD;;AACZ;;AACI;;AAIJ;;AAAM;;AACN;;AAA8D;;AACrD;;AACT;;AACI;;AACI;;AAA0C;;AAAoB;;AAC9D;;AAAyB;;AAAS;;AAClC;;AAAyB;;AAAS;;AAClC;;AAA2B;;AAAU;;AACzC;;AACJ;;AAEA;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAkB;;AAChC;;AACA;;AAC8B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE1B;;AAAU;;AAAa;;AAC3B;;AACJ;;AAEJ;;AACA;;AACI;;AACgD;;AAAQ;;AACxD;;AACI;;AAEJ;;AAAM;;AACN;;AAAmE;;AAC1D;;AACT;;AACI;;AAEJ;;AAEJ;;AACA;;AACI;;AAAkE;;AAAS;;AAC3E;;AACI;;AAEJ;;AAAM;;AACN;;AAAiE;;AACxD;;AACT;;AACI;;AAEJ;;AACJ;;AAEA;;AACI;;AACI;;AAAuE;;AACvD;;AACpB;;AACJ;;AACA;;AACJ;;;;;;AAvEI;;AAGyE;;AAAA;;;;QDF5FoE,uB;AAIX,uCAAoB5H,EAApB,EAA6CC,gBAA7C,EAAiF;AAAA;;AAA7D,aAAAD,EAAA,GAAAA,EAAA;AAAyB,aAAAC,gBAAA,GAAAA,gBAAA;AAAuC;;;;mCAE5E;AACN,eAAK4H,qBAAL,GAA6B,KAAK7H,EAAL,CAAQO,KAAR,CAAc;AACzCuH,uBAAW,EAAE,KAAK9H,EAAL,CAAQwB,KAAR,CAAc,CAAC,KAAKuG,yBAAL,EAAD,CAAd;AAD4B,WAAd,CAA7B;AAGD;;;iDAE+B;AAC9B,cAAMD,WAAW,GAAG,KAAKD,qBAAL,CAA2BjG,GAA3B,CAA+B,aAA/B,CAApB;AACAkG,qBAAW,CAACjG,IAAZ,CAAiB,KAAKkG,yBAAL,EAAjB;AACD;;;gDAE8BjG,C,EAAW;AACxC,cAAMgG,WAAW,GAAG,KAAKD,qBAAL,CAA2BjG,GAA3B,CAA+B,aAA/B,CAApB;;AACA,cAAIkG,WAAW,CAAC/F,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B+F,uBAAW,CAAC9F,QAAZ,CAAqBF,CAArB;AACD,WAFD,MAEO;AACLgG,uBAAW,CAAC7F,KAAZ;AACD;AACF;;;oDAEgC;AAC/B,iBAAO,IAAI,wDAAJ,CAAc;AACnB+F,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADM;AAEnBC,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFa;AAGnBvH,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAHS;AAInBwH,wBAAY,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAJK;AAKnBZ,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CALQ;AAMnBC,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CANU;AAOnBY,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAPU,WAAd,CAAP;AASD;;;+CAEsB;AACrB,cAAI,KAAKN,qBAAL,CAA2BrF,KAA/B,EAAsC;AACpC,iBAAKoE,IAAL,GAAY,KAAK3G,gBAAL,CAAsB0G,mBAAtB,EAAZ;AACA,iBAAKC,IAAL,CAAUzE,UAAV,GAAuB,KAAK0F,qBAAL,CAA2BlF,KAA3B,CAAiCmF,WAAxD;AACA,iBAAK7H,gBAAL,CAAsByH,mBAAtB,CAA0C,KAAKd,IAA/C;AACD;AACF;;;;;;;uBA5CUgB,uB,EAAuB,2H,EAAA,oJ;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,iuE;AAAA;AAAA;ACVpC;;AACI;;AACI;;AACI;;AACI;;AACI;;AAEI;;AACI;;AAyEJ;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAsC;;AAAI;;AAC1C;;AAAkC;AAAA,mBAAS,IAAAQ,oBAAA,EAAT;AAA+B,WAA/B;;AAAiC;;AAAI;;AAC3E;;AACJ;;;;AA5FM;;AAQ2B;;AAAA;;;;;;;;;sEDEpBR,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTtE,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKyB,Q;;;;;;;;gBAEjC;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYa6E,qB;AAUX,qCAAoBrI,EAApB,EAA6CC,gBAA7C,EAAyFE,WAAzF,EAA6H;AAAA;;AAAzG,aAAAH,EAAA,GAAAA,EAAA;AAAyB,aAAAC,gBAAA,GAAAA,gBAAA;AAA4C,aAAAE,WAAA,GAAAA,WAAA;AAPzF,aAAAqG,UAAA,GAAa,IAAb;AACA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAA6B,YAAA,GAAe,KAAKnI,WAAL,CAAiB4G,cAAjB,EAAf;AACA,aAAAwB,YAAA,GAAe,KAAKtI,gBAAL,CAAsB0G,mBAAtB,EAAf;AACA,aAAA6B,KAAA,GAAQ,KAAKF,YAAL,GAAoB,KAAKA,YAAL,CAAkBG,QAAtC,GAAiD,IAAzD;AACA,aAAAC,OAAA,GAAU,KAAKJ,YAAL,GAAoB,KAAKA,YAAL,CAAkBK,aAAtC,GAAsD,IAAhE;AACA,aAAAC,GAAA,GAAM,KAAKL,YAAL,GAAoB,KAAKA,YAAL,CAAkBM,WAAtC,GAAoD,IAA1D;AACgI;;;;mCAExH;AAEN,eAAKC,mBAAL,GAA2B,KAAK9I,EAAL,CAAQO,KAAR,CAAc;AACvCiI,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAW/H,QAAhB,CADgC;AAEvCmI,eAAG,EAAE,CAAC,EAAD,EAAK,0DAAWnI,QAAhB,CAFkC;AAGvCsI,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWtI,QAAhB,CAH8B;AAIvCiI,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWjI,QAAhB,CAJ8B;AAKvCuI,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWvI,QAAhB,CALiC;AAMvCwI,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWxI,QAAhB,CAN8B;AAOvCyI,kBAAM,EAAE,CAAC,EAAD,EAAK,0DAAWzI,QAAhB,CAP+B;AAQvC0I,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAW1I,QAAhB,CAR8B;AASvC2I,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW3I,QAAhB;AATiC,WAAd,CAA3B;AAYA,eAAKqI,mBAAL,CAAyBO,UAAzB,CAAoC;AAClCb,iBAAK,EAAE,KAAKA,KADsB;AAElCE,mBAAO,EAAE,KAAKA,OAFoB;AAGlCE,eAAG,EAAE,KAAKA,GAHwB;AAIlCG,mBAAO,EAAE,KAAKR,YAAL,GAAoB,KAAKA,YAAL,CAAkBQ,OAAtC,GAAgD,IAJvB;AAKlCC,gBAAI,EAAE,KAAKT,YAAL,GAAoB,KAAKA,YAAL,CAAkBS,IAAtC,GAA6C,IALjB;AAMlCE,kBAAM,EAAE,KAAKX,YAAL,GAAoB,KAAKA,YAAL,CAAkBW,MAAtC,GAA+C,IANrB;AAOlCC,mBAAO,EAAE,KAAKZ,YAAL,GAAoB,KAAKA,YAAL,CAAkBe,GAAtC,GAA4C,IAPnB;AAQlCF,gBAAI,EAAE,KAAKd,YAAL,GAAoB,KAAKA,YAAL,CAAkBc,IAAtC,GAA6C;AARjB,WAApC;AAUD;;;8CAEkB;AAEjB,cAAMG,aAAa,GAAc;AAC/BzJ,cAAE,EAAE,IAD2B;AAE/BwJ,eAAG,EAAE,KAAKR,mBAAL,CAAyBlH,GAAzB,CAA6B,SAA7B,EAAwCe,KAFd;AAG/BqG,gBAAI,EAAE,KAAKF,mBAAL,CAAyBlH,GAAzB,CAA6B,MAA7B,EAAqCe,KAHZ;AAI/BoG,mBAAO,EAAE,KAAKD,mBAAL,CAAyBlH,GAAzB,CAA6B,SAA7B,EAAwCe,KAJlB;AAK/BkG,uBAAW,EAAE,KAAKC,mBAAL,CAAyBlH,GAAzB,CAA6B,KAA7B,EAAoCe,KALlB;AAM/BuG,kBAAM,EAAE,KAAKJ,mBAAL,CAAyBlH,GAAzB,CAA6B,QAA7B,EAAuCe,KANhB;AAO/B6G,0BAAc,EAAE,IAPe;AAQ/BC,kBAAM,EAAE,IARuB;AAS/BhC,qBAAS,EAAE,EAToB;AAU/BiC,mBAAO,EAAE,EAVsB;AAW/BvH,sBAAU,EAAE,EAXmB;AAY/BwH,kBAAM,EAAE,EAZuB;AAa/BC,wBAAY,EAAE;AAbiB,WAAjC;AAgBA,cAAMC,QAAQ,GAAiB,KAAK1J,WAAL,CAAiB4G,cAAjB,EAA/B;AACA8C,kBAAQ,CAACT,IAAT,GAAgB,KAAKN,mBAAL,CAAyBlH,GAAzB,CAA6B,MAA7B,EAAqCe,KAArC,GAA6C,WAA7C,GAA2D,WAA3E;AACAkH,kBAAQ,CAAClB,aAAT,GAAyB,KAAKG,mBAAL,CAAyBlH,GAAzB,CAA6B,SAA7B,EAAwCe,KAAjE;AACAkH,kBAAQ,CAACpB,QAAT,GAAoB,KAAKK,mBAAL,CAAyBlH,GAAzB,CAA6B,OAA7B,EAAsCe,KAA1D;AAEA,eAAK1C,gBAAL,CAAsByH,mBAAtB,CAA0C6B,aAA1C;AACA,eAAKpJ,WAAL,CAAiB2G,iBAAjB,CAAmC+C,QAAnC;AACD;;;;;;;uBA/DUxB,qB,EAAqB,2H,EAAA,oJ,EAAA,8J;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,8vE;AAAA;AAAA;ACZlC;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAEJ;;AAEA;;AACI;;AACJ;;AACA;;AACI;;AAGJ;;AACJ;;AAEA;;AACI;;AAA8D;;AAAK;;AACnE;;AACI;;AAGJ;;AACA;;AAA0E;;AAChE;;AACV;;AACI;;AAEJ;;AACJ;;AAEA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAIJ;;AACA;;AAAqE;;AAAO;;AAC5E;;AACI;;AAA4B;;AAAI;;AAAoB;;AACpD;;AAA4B;;AAAM;;AACtC;;AACJ;;AAEA;;AACI;;AAAiE;;AAAQ;;AACzE;;AAEI;;AAAA;;AACR;;AAEA;;AACI;;AAAiC;AAAA;AAAA;;AAE7B;;AACI;;AAA2B;;AAC3B;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAkC;AAAA,mBAAS,IAAA3B,mBAAA,EAAT;AAA8B,WAA9B;;AAAgC;;AAAI;;AAC1E;;AACJ;;;;AAnFM;;AAiEuD;;AAAA;;AAKrB;;AAAA;;;;;;;;;sED1D3B2B,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT/E,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;gBAE/B;;;;;;;;;;;;;;;;;;;;AEdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWc;;AAEE;;AACE;;AAA8D;;AAAsB;;AACpF;;AACE;;AAEF;;AAAM;;AACN;;AAAmE;;AAAc;;AACjF;;AACE;;AAEF;;AAEA;;AACE;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAkB;;AAC9B;;AACA;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAa;;AACzB;;AACF;;AAEF;;AACA;;AACE;;AAAqE;;AAAY;;AACjF;;AACE;;AAEF;;AAAM;;AACN;;AAAiE;;AAAY;;AAC7E;;AACE;;AAEF;;AACF;;AAEA;;AACE;;AACE;;AAAuE;;AAAO;;AAChF;;AACF;;AAEA;;AACF;;;;;;AA7CE;;AAEgE;;AAAA;;;;;;;;AAgEhE;;AAEE;;AACE;;AAEF;;AAAM;;AACN;;AACE;;AACE;;AAA4B;;AAAM;;AAAoB;;AACtD;;AAA4B;;AAAY;;AAAoB;;AAC5D;;AAA4B;;AAAQ;;AAAoB;;AAC1D;;AACF;;AAEA;;AACE;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAkB;;AAC9B;;AACA;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAU;;AAAa;;AACzB;;AACF;;AACF;;;;;;AAvBE;;AAE0D;;AAAA;;;;QDvE/DsG,oB;AAIX,oCAAoB9J,EAApB,EAA6CC,gBAA7C,EAAiF;AAAA;;AAA7D,aAAAD,EAAA,GAAAA,EAAA;AAAyB,aAAAC,gBAAA,GAAAA,gBAAA;AAAuC;;;;mCAE5E;AACN,eAAK8J,kBAAL,GAA0B,KAAK/J,EAAL,CAAQO,KAAR,CAAc;AACtCmJ,mBAAO,EAAE,KAAK1J,EAAL,CAAQwB,KAAR,CAAc,CAAC,KAAKwI,sBAAL,EAAD,CAAd,CAD6B;AAEtCL,kBAAM,EAAE,KAAK3J,EAAL,CAAQwB,KAAR,CAAc,CAAC,KAAKG,oBAAL,EAAD,CAAd;AAF8B,WAAd,CAA1B;AAID;;;4CAE0B;AACzB,cAAMgI,MAAM,GAAG,KAAKI,kBAAL,CAAwBnI,GAAxB,CAA4B,QAA5B,CAAf;AACA+H,gBAAM,CAAC9H,IAAP,CAAY,KAAKF,oBAAL,EAAZ;AACD;;;2CAEyBG,C,EAAW;AACnC,cAAM6H,MAAM,GAAG,KAAKI,kBAAL,CAAwBnI,GAAxB,CAA4B,QAA5B,CAAf;;AACA,cAAI+H,MAAM,CAAC5H,MAAP,GAAgB,CAApB,EAAuB;AACrB4H,kBAAM,CAAC3H,QAAP,CAAgBF,CAAhB;AACD,WAFD,MAEO;AACL6H,kBAAM,CAAC1H,KAAP;AACD;AACF;;;+CAE2B;AAC1B,iBAAO,IAAI,wDAAJ,CAAc;AACnBgI,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADQ;AAEnBC,kBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAFW,WAAd,CAAP;AAID;;;8CAE4B;AAC3B,cAAMR,OAAO,GAAG,KAAKK,kBAAL,CAAwBnI,GAAxB,CAA4B,SAA5B,CAAhB;AACA8H,iBAAO,CAAC7H,IAAR,CAAa,KAAKmI,sBAAL,EAAb;AACD;;;6CAE2BlI,C,EAAW;AACrC,cAAM4H,OAAO,GAAG,KAAKK,kBAAL,CAAwBnI,GAAxB,CAA4B,SAA5B,CAAhB;;AACA,cAAI8H,OAAO,CAAC3H,MAAR,GAAiB,CAArB,EAAwB;AACtB2H,mBAAO,CAAC1H,QAAR,CAAiBF,CAAjB;AACD,WAFD,MAEO;AACL4H,mBAAO,CAACzH,KAAR;AACD;AACF;;;iDAE6B;AAC5B,iBAAO,IAAI,wDAAJ,CAAc;AACnBC,gBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADa;AAEnBoF,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFQ;AAGnBC,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAHU;AAInBxG,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAJM;AAKnBoJ,mBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AALU,WAAd,CAAP;AAOD;;;4CAEmB;AAClB,cAAI,KAAKJ,kBAAL,CAAwBvH,KAA5B,EAAmC;AACjC,iBAAKoE,IAAL,GAAY,KAAK3G,gBAAL,CAAsB0G,mBAAtB,EAAZ;AACA,iBAAKC,IAAL,CAAU8C,OAAV,GAAoB,KAAKK,kBAAL,CAAwBpH,KAAxB,CAA8B+G,OAAlD;AACA,iBAAK9C,IAAL,CAAU+C,MAAV,GAAmB,KAAKI,kBAAL,CAAwBpH,KAAxB,CAA8BgH,MAAjD;AACA,iBAAK1J,gBAAL,CAAsByH,mBAAtB,CAA0C,KAAKd,IAA/C;AACD;AACF;;;;;;;uBAjEUkD,oB,EAAoB,2H,EAAA,oJ;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,47D;AAAA;AAAA;ACVjC;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAQ;;AACd;;AACA;;AAEE;;AACE;;AA+CF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAM;;AACZ;;AACA;;AAEE;;AACE;;AAA8D;;AAAgB;;AAE9E;;AACE;;AAyBF;;AAEF;;AAEF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AAAsC;;AAAI;;AAC1C;;AAAkC;AAAA,mBAAS,IAAAM,iBAAA,EAAT;AAA4B,WAA5B;;AAA8B;;AAAI;;AACtE;;AAEA;;;;AArHM;;AAWa;;AAAA;;AAmEc;;AAAA;;;;;;;;;sEDpEpBN,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTxG,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;gBAE9B;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa6G,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,mL;AAAA;AAAA;ACP5B;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAA6B;;AAAQ;;AAAI;;AAC7C;;AAAI;;AAA6B;;AAAS;;AAAI;;AAC9C;;AAAI;;AAA6B;;AAAG;;AAAI;;AACxC;;AACJ;;AACA;;AAA4B;;AAAuC;;AACvE;;AACJ;;AACJ;;AACJ;;;;;;;;sEDPaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT/G,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa8G,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,opB;AAAA;AAAA;ACP5B;;AACI;;AACI;;AACI;;AACJ;;AACA;;AACI;;AAAsB;;AAAiB;;AACvC;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;;sEDjBaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACThH,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa+G,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,6T;AAAA;AAAA;ACP1B;;AACE;;AACE;;AACA;;AAEE;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AAEF;;AACF;;;;;;;;sEDrBaA,a,EAAa;cALzB,uDAKyB;eALf;AACTjH,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC6EgB;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAmBN;;AACE;;AAAM;;AAAc;;AACpB;;AACE;;AACE;;AAAI;;AAAyC;;AAC7C;;AAAI;;AAA6B;;AACjC;;AAAI;;AAA6B;;AACjC;;AAAI;;AAAyC;;AAC/C;;AACF;;AACF;;;;;;;AATQ;;AAAA;;AAGE;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QD5FTgH,gB;AAGX,gCAAoB7E,IAApB,EAA8C1F,gBAA9C,EACSwK,kBADT,EACiD;AAAA;;AAD7B,aAAA9E,IAAA,GAAAA,IAAA;AAA0B,aAAA1F,gBAAA,GAAAA,gBAAA;AACrC,aAAAwK,kBAAA,GAAAA,kBAAA;AAA2C;;;;mCAE5C;AACN,eAAKC,gBAAL,GAAwB,KAAKzK,gBAAL,CAAsB0G,mBAAtB,EAAxB;AACD;;;sCAEa;AAAA;;AACZ,eAAK8D,kBAAL,CAAwBE,SAAxB,CAAkC,KAAKD,gBAAL,CAAsB5K,EAAxD,EAA4D,KAAK8K,UAAL,CAAgB/H,KAA5E,EAAmFM,SAAnF,CACE,UAACC,QAAD,EAAc;AACZ,kBAAI,CAACnD,gBAAL,CAAsByH,mBAAtB,CAA0CtE,QAA1C;AACD,WAHH;AAKD;AAED;;;;;;;;kCAMU;AAAA;;AACR,eAAKqH,kBAAL,CAAwBI,QAAxB,CAAiC,KAAKH,gBAAL,CAAsB5K,EAAvD,EAA2D,KAAK8K,UAAL,CAAgB/H,KAA3E,EAAkFM,SAAlF,CACE,UAACC,QAAD,EAAc;AACZ,kBAAI,CAACnD,gBAAL,CAAsByH,mBAAtB,CAA0CtE,QAA1C;AACD,WAHH;AAKD;;;;;;;uBA9BUoH,gB,EAAgB,gI,EAAA,6I,EAAA,iJ;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,2/B;AAAA;AAAA;ACZ7B;;AACE;;AACE;;AAAgC;;AAA0B;;AAC1D;;AAAqC;;AAAuB;;AAC5D;;AACE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACF;;AACA;;AACE;;AAA+C;AAAA,mBAAS,IAAAM,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAS;;AAChF;;AAA+C;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AAAoB;;AAAI;;AACzE;;AACF;;AACF;;AAIA;;AACE;;AAGE;;AACE;;AACE;;AACE;;AACE;;AAAwB;;AAAuB;;AACjD;;AACA;;AACE;;AAAsB;;AAA2B;;AACjD;;AAAkC;;AAEe;;AACnD;;AACF;;AAGA;;AAAyD;;AAAO;;AAClE;;AACA;;AACE;;AAAI;;AAAgB;;AACpB;;AACE;;AACE;;AACE;;AAAkC;;AAAU;;AAC5C;;AAA2B;;AAA0B;;AACvD;;AACA;;AACE;;AAAkC;;AAAU;;AAC5C;;AAA2B;;AAAuB;;AACpD;;AACA;;AACE;;AAAkC;;AAAmB;;AACrD;;AAA2B;;AAAsC;;AACnE;;AACA;;AACE;;AAAkC;;AAAO;;AACzC;;AACE;;AACA;;AACF;;AACF;;AACA;;AACE;;AAAkC;;AAAsB;;AACxD;;AAA2B;;AAA+B;;AAC5D;;AACA;;AACE;;AAAkC;;AAAe;;AACjD;;AAA2B;;AAA6B;;AAC1D;;AACA;;AACE;;AAAkC;;AACvB;;AACX;;AACE;;AAGF;;AACF;;AACA;;AACE;;AAAkC;;AAAkB;;AACpD;;AACE;;AAAiC;;AAAkD;;AACnF;;AAAiC;;AAAmD;;AACpF;;AAAiC;;AAAmD;;AACtF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAsB;;AAAiB;;AACvC;;AAA2B;;AAAwB;;AACrD;;AACA;;AAAiB;;AAAyB;;AAC1C;;AAWF;;AACF;;AAKA;;AACE;;AAA8C;AAAA,mBAAS,IAAAD,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAK;;AAC3E;;AAA8C;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AAAoB;;AAAI;;AAExE;;AACF;;AAEF;;AACF;;AArGF;;;;AAnBoC;;AAAA;;AACK;;AAAA;;AAGnC;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAmB8B;;AAAA;;AAGF;;AAAA;;AACY;;AAAA;;AAeL;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAMzB;;AAAA;;AAKyB;;AAAA;;AAIA;;AAAA;;AAMQ;;AAAA;;AAQA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAOR;;AAAA;;AAGP;;AAAA;;;;;;;;;sEDrFrBP,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTlH,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;gBAE1B;;;;;;;;;;;;;;;;;;;;AEdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEQ;;AACI;;AACJ;;;;;;AADiB;;AAAA;;;;QDOZwH,a;AACX,6BAAoBrF,IAApB,EAA6CzF,UAA7C,EAAqE;AAAA;;AAAjD,aAAAyF,IAAA,GAAAA,IAAA;AAAyB,aAAAzF,UAAA,GAAAA,UAAA;AAA2B;;;;mCAIhE;AAAA;;AACN,eAAKA,UAAL,CAAgB+K,UAAhB,GAA6B9H,SAA7B,CAAuC,UAACC,QAAD,EAAc;AACnD,kBAAI,CAAC2C,OAAL,GAAe3C,QAAf;AACAJ,mBAAO,CAACC,GAAR,CAAYG,QAAZ;AACD,WAHD;AAID;;;;;;;uBAVU4H,a,EAAa,gI,EAAA,iI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,8H;AAAA;AAAA;ACV1B;;AACI;;AACI;;AAGJ;;AACJ;;;;AAJ2B;;AAAA;;;;;;;;;sEDQdA,a,EAAa;cALzB,uDAKyB;eALf;AACT1H,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBoC;;AAEI;;AACJ;;;;QDhBvB0H,c;AAOT,8BACYC,SADZ,EAEWhL,WAFX,EAGYgE,MAHZ,EAG0B;AAAA;;AAFd,aAAAgH,SAAA,GAAAA,SAAA;AACD,aAAAhL,WAAA,GAAAA,WAAA;AACC,aAAAgE,MAAA,GAAAA,MAAA;AACP;;;;mCAEM;AACP,eAAKiH,SAAL,GAAiB,KAAKD,SAAL,CAAe5K,KAAf,CAAqB;AAClCkI,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWhI,QAAZ,EAAsB,0DAAW4K,OAAX,CAAmB,0CAAnB,CAAtB,CAAL,CADwB;AAElCC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW7K,QAAZ,CAAL;AAFwB,WAArB,CAAjB;AAIH;;;sCAQiB;AACd,iBAAO,KAAK2K,SAAL,CAAezI,KAAf,CAAqB8F,QAA5B;AACH;;;sCAEiB;AACd,iBAAO,KAAK2C,SAAL,CAAezI,KAAf,CAAqB2I,QAA5B;AACH;;;mCAEc;AACX,eAAKnH,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACH;;;mCAEc;AAAA;;AACX,eAAK1G,WAAL,CACKoL,YADL,CACkB,KAAKC,WAAL,EADlB,EACsC,KAAKC,WAAL,EADtC,EAEKtI,SAFL,CAGQ,UAACyD,IAAD,EAAU;AACN,kBAAI,CAACzG,WAAL,CAAiBuL,cAAjB,CAAgC9E,IAAhC;;AACA,kBAAI,CAAC+E,YAAL,GAAoB,wBAApB;AACA,kBAAI,CAACC,SAAL,GAAiB,mEAAOC,OAAxB;;AACA,kBAAI,CAACC,WAAL;AACH,WART,EASQ,UAACC,KAAD,EAAW;AACP,kBAAI,CAACH,SAAL,GAAiB,mEAAOI,MAAxB;AACA,kBAAI,CAACL,YAAL,GAAoBI,KAAK,CAACA,KAAN,CAAYE,OAAhC;AACH,WAZT;AAcH;;;sCAEU;AACP,eAAK9H,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,SAAD,CAArB;AACH;;;4BAtCc;AACX,iBAAO,KAAKuE,SAAL,CAAexJ,GAAf,CAAmB,UAAnB,CAAP;AACH;;;4BACc;AACX,iBAAO,KAAKwJ,SAAL,CAAexJ,GAAf,CAAmB,UAAnB,CAAP;AACH;;;;;;;uBAxBQsJ,c,EAAc,2H,EAAA,uJ,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,4vC;AAAA;AAAA;ACX3B;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA2B;;AAAa;;AAC5C;;AACA;;AACI;;AACJ;;AACA;;AAA2C;AAAA,mBAAU,IAAAgB,QAAA,EAAV;AAAoB,WAApB;;AACvC;;AACI;;AAEJ;;AACA;;AACI;;AAIJ;;AACA;;AAAwB;;AAExB;;AACA;;AACI;;AACI;;AAAwB;;AAEpB;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAiB;AAAA,mBAAS,IAAAC,QAAA,EAAT;AAAmB,WAAnB;;AACb;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAhDmC;;AAAA;;AACH;;AAAA;;AAEe;;AAAA;;AAOP;;AAAA;;;;;;;;;sEDd3BjB,c,EAAc;cAL1B,uDAK0B;eALhB;AACP5H,kBAAQ,EAAE,WADH;AAEPC,qBAAW,EAAE,wBAFN;AAGPC,mBAAS,EAAE,CAAC,wBAAD;AAHJ,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa4I,e;AAEX,+BACUhI,UADV,EAEUjE,WAFV,EAGUF,gBAHV,EAIUkE,MAJV,EAIwB;AAAA;;AAHd,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAjE,WAAA,GAAAA,WAAA;AACA,aAAAF,gBAAA,GAAAA,gBAAA;AACA,aAAAkE,MAAA,GAAAA,MAAA;AAEV,aAAAkI,WAAA,GAAc,IAAd;AADK;;;;mCAEG,CACP;;;2CAEe;AACd,eAAKjI,UAAL,CAAgBkI,gBAAhB;AACD;;;wCAEY;AACX,eAAKlI,UAAL,CAAgBiB,aAAhB;AACD;;;iCAEY;AACX,eAAKlF,WAAL,CAAiBuL,cAAjB,CAAgC,IAAhC;AACA,eAAKzL,gBAAL,CAAsByH,mBAAtB,CAA0C,IAA1C;AACA,eAAKvD,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;qCAES;AACR,eAAK1C,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;;;;;uBA5BUuF,e,EAAe,iI,EAAA,uJ,EAAA,6I,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,a;AAAA,spC;AAAA;AAAA;ACX5B;;AAKE;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAwB;AAAA,mBAAS,IAAA/G,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAA0B;;AAC9E;;AAEA;;AACE;;AAA+B;AAAA;AAAA;;AAG7B;;AACF;;AACA;;AACF;;AAEA;;AACE;;AACE;;AAAwB;AAAA,mBAAS,IAAAiH,gBAAA,EAAT;AAA2B,WAA3B;;AAA6B;;AAA0B;;AACjF;;AACA;;AAA+B;AAAA,mBAAS,IAAAC,UAAA,EAAT;AAAqB,WAArB;;AAC7B;;AACF;;AACF;;AAGA;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAwB;;AAAM;;AAE9B;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAwB;;AAAQ;;AAEhC;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAwB;;AAAO;;AACjC;;AACF;;AACA;;AACE;;AAAwB;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AACtB;;AACA;;AAAwB;;AAAO;;AACjC;;AACF;;AACF;;AACF;;AACF;;;;AAlDwE;;AAAA;;AAkBH;;AAAA;;;;;;;;;sEDvBxDJ,e,EAAe;cAL3B,uDAK2B;eALjB;AACT9I,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaiJ,oB;AAIX,sCAAc;AAAA;AAAG;;;;mCAET;AACN,eAAKC,cAAL,CAAoBlD,cAApB,GAAqC,KAAKkD,cAAL,CAAoBlD,cAApB,GACnC,4BAA4B,KAAKkD,cAAL,CAAoBlD,cADb,GAC8BmD,SADnE;AAED;;;;;;;uBATUF,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,mL;AAAA;AAAA;ACRjC;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAuB;;AAAwD;;AAC/E;;AAA0C;;AAAmD;;AAK/F;;AACF;;AACF;;;;AAXW;;AAAA;;AAGkB;;AAAA;;AACmB;;AAAA;;;;;;;;sEDCnCA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTnJ,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;gBAE9B;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC+CU;;AACE;;AACE;;AAAuB;;AAAoB;;AAC3C;;AAAmB;;AAAoB;;AACzC;;AACA;;AACE;;AAAuB;;AAAa;;AACpC;;AAAmB;;AAAe;;AACpC;;AACA;;AACE;;AAAuB;;AAAM;;AAC7B;;AAAmB;;AAAoB;;AACzC;;AACA;;AACE;;AAAuB;;AAAgB;;AACvC;;AAAmB;;AAAmB;;AACxC;;AACA;;AACE;;AAAuB;;AAAgB;;AACvC;;AAAmB;;;;;;AAAmD;;AACxE;;AACF;;;;;;;AAnB2B;;AAAA;;AACJ;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;;;AApBzB;;AACE;;AAsBF;;;;;;AAtB8B;;AAAA;;;;;;AAwB5B;;AACE;;AAAmB;;AAA0B;;AAC/C;;;;;;AAQI;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAiCJ;;AACE;;AAAuB;;AAAO;;AAC9B;;AAAmB;;;;;;AAAmD;;AACxE;;;;;;AADqB;;AAAA;;;;;;AAErB;;AACE;;AAAwB;;;;AAA4D;;AACtF;;;;;;AAD0B;;AAAA;;;;;;AAlB5B;;AACE;;AACE;;AAAuB;;AAAqB;;AAC5C;;AAAmB;;AAAqB;;AAC1C;;AACA;;AACE;;AAAuB;;AAAc;;AACrC;;AAAmB;;AAAoB;;AACzC;;AACA;;AACE;;AAAuB;;AAAiB;;AACxC;;AAAmB;;AAAa;;AAClC;;AACA;;AAIA;;AAGF;;;;;;;AAlB2B;;AAAA;;AACJ;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAEC;;AAAA;;AAIA;;AAAA;;;;;;AAlB1B;;AACE;;AAqBF;;;;;;AArB8B;;AAAA;;;;;;AAuB5B;;AACE;;AAAmB;;AAAyB;;AAC9C;;;;;;AAcA;;AACE;;AACE;;AAAuB;;AAAc;;AACrC;;AAAmB;;;;;;AAAmE;;AACxF;;AACA;;AACE;;AAAuB;;AAAM;;AAC7B;;AAAmB;;AAAoB;;AACzC;;AACF;;;;;;;AAP2B;;AAAA;;AACJ;;AAAA;;AAIA;;AAAA;;;;;;AARzB;;AACE;;AAUF;;;;;;AAVyB;;AAAA;;;;;;AAYvB;;AACE;;AAAmB;;AAAmC;;AACxD;;;;QD/IGoJ,gB;AAEX,gCAAoB3M,gBAApB,EAAgEE,WAAhE,EAA4GgE,MAA5G,EAA4H;AAAA;;AAAxG,aAAAlE,gBAAA,GAAAA,gBAAA;AAA4C,aAAAE,WAAA,GAAAA,WAAA;AAA4C,aAAAgE,MAAA,GAAAA,MAAA;AAAmB;;;;mCAKvH;AAAA;;AACN,eAAKlE,gBAAL,CAAsB4M,mBAAtB,GAA4C1J,SAA5C,CACE,UAACC,QAAD,EAAc;AACZ,kBAAI,CAACsH,gBAAL,GAAwBtH,QAAxB;;AACA,kBAAI,CAACnD,gBAAL,CAAsByH,mBAAtB,CAA0C,MAAI,CAACgD,gBAA/C;AACD,WAJH,EAKE,UAACqB,KAAD,EAAW;AACT,gBAAIA,KAAK,CAACA,KAAN,CAAYrM,IAAZ,KAAqB,0BAAzB,EAAqD;AACnD,oBAAI,CAACyE,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;AACF,WATH;AAUA,eAAKiG,WAAL,GAAmB,KAAK3M,WAAL,CAAiB4G,cAAjB,EAAnB;AACD;;;mCAEU;AACT,eAAK5C,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;;;;;;;uBAvBU+F,gB,EAAgB,6I,EAAA,uJ,EAAA,uH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,c;AAAA,gjC;AAAA;AAAA;ACZ7B;;AACE;;AACE;;AACE;;AACE;;AACE;;AAA0B;;AAAgB;;AAC1C;;AACE;;AACE;AAAA,mBAAS,IAAAG,QAAA,EAAT;AAAmB,WAAnB;;AACA;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAuB;;AAAc;;AACrC;;AAAmB;;;;AAAuC;;AAC5D;;AACA;;AACE;;AAAuB;;AAAO;;AAC9B;;AAAmB;;AAA2B;;AAChD;;AACA;;AACE;;AAAuB;;AAAQ;;AAC/B;;AAAmB;;AAAuD;;AAC5E;;AACA;;AACE;;AAAuB;;AAAM;;AAC7B;;AAAmB;;AAAwB;;AAC7C;;AACA;;AACE;;AAAuB;;AAAe;;AACtC;;AAAmB;;AAA6B;;AAClD;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAA0B;;AAAiB;;AAC3C;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AAwBA;;AAKF;;AACA;;AACE;;AACE;;AAA2B;;AAAY;;AACvC;;AACE;;AACE;;AAGF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAA0B;;AAAmB;;AAC7C;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AAuBA;;AAKF;;AAEA;;AACE;;AACE;;AAA0B;;AAAa;;AACvC;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AAYA;;AAKF;;AACF;;AACF;;AACF;;;;;;;;;;AAhJ+B;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAclB;;AAAA,sHAAgE,UAAhE,EAAgE,GAAhE;;AAmCW;;AAAA;;AAoBX;;AAAA,uHAAiE,UAAjE,EAAiE,GAAjE;;AAuCA;;AAAA,oHAA4D,UAA5D,EAA4D,GAA5D;;;;;;;;;;sEDhIAH,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTtJ,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEQ;;AACI;;AACJ;;;;;;AADiB;;AAAA;;;;QDQZwJ,kB;AACX,kCAAoBrH,IAApB,EAA8C1F,gBAA9C,EAAkF;AAAA;;AAA9D,aAAA0F,IAAA,GAAAA,IAAA;AAA0B,aAAA1F,gBAAA,GAAAA,gBAAA;AAAuC;;;;mCAE7E;AACN,cAAM2F,IAAI,GAAG,KAAK3F,gBAAL,CAAsB4F,YAAtB,CAAmC,wEAAOoH,IAA1C,CAAb;AACA,eAAKlH,OAAL,GAAeH,IAAI,CAACI,GAAL,CAAS,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,GAAT;AAAA,WAAb,CAAf;AACD;;;;;;;uBANU8G,kB,EAAkB,gI,EAAA,6I;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,c;AAAA,a;AAAA,8H;AAAA;AAAA;ACX/B;;AACI;;AACI;;AAGJ;;AACJ;;;;AAJ2B;;AAAA;;;;;;;;;sEDSdA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT1J,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEQ;;AACI;;AACJ;;;;;;AADsB;;AAAA;;;;QDQjB0J,mB;AAEX,mCACUjN,gBADV,EAEUE,WAFV,EAE4C;AAAA;;AADlC,aAAAF,gBAAA,GAAAA,gBAAA;AACA,aAAAE,WAAA,GAAAA,WAAA;AACL;;;;mCAEG;AAAA;;AACN,eAAKF,gBAAL,CAAsBkN,gBAAtB,GAAyChK,SAAzC,CACE,UAACC,QAAD,EAAc;AACZ,kBAAI,CAACgK,QAAL,GAAgBhK,QAAhB;AACD,WAHH;AAID;;;;;;;uBAZU8J,mB,EAAmB,6I,EAAA,uJ;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,c;AAAA,a;AAAA,kI;AAAA;AAAA;ACXhC;;AACI;;AACI;;AAGJ;;AACJ;;;;AAJ2B;;AAAA;;;;;;;;;sEDSdA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT5J,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKa6J,U;AAKX,4BAAc;AAAA;;AAHd,aAAAlI,eAAA,GAAkB,KAAlB;AACA,aAAAC,iBAAA,GAAoB,KAApB;AAEiB;;;;wCAED;AACd,eAAKA,iBAAL,GAAyB,CAAC,KAAKA,iBAA/B;AACD;;;2CAEkB;AACjB,eAAKD,eAAL,GAAuB,CAAC,KAAKA,eAA7B;AACD;;;yCAEgB;AACf,iBAAO;AACLA,2BAAe,EAAE,KAAKA,eADjB;AAELC,6BAAiB,EAAE,KAAKA;AAFnB,WAAP;AAID;;;;;;;uBApBUiI,U;AAAU,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVC,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;ACLvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,kB;AAEX,kCAAoB5H,IAApB,EAA8CxF,WAA9C,EAA0FF,gBAA1F,EAA8H;AAAA;;AAA1G,aAAA0F,IAAA,GAAAA,IAAA;AAA0B,aAAAxF,WAAA,GAAAA,WAAA;AAA4C,aAAAF,gBAAA,GAAAA,gBAAA;AAC1F,aAAAuN,QAAA,GAAW,yEAAYC,OAAZ,GAAsB,OAAjC;AACA,aAAAC,WAAA,GAAc,yEAAYD,OAAZ,GAAsB,UAApC;AACA,aAAAE,OAAA,GAAU,yEAAYF,OAAZ,GAAsB,MAAhC;AAHiI;;;;kCAKvHG,K,EAAe/K,K,EAAa;AACpC,cAAIgL,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAY,KAAK3N,WAAL,CAAiB4G,cAAjB,GAAkCgH,KAA3E,CAAV;AACA,cAAMhJ,GAAG,GAAW,KAAKyI,QAAL,GAAgB,GAAhB,GAAsBI,KAAtB,GAA8B,GAA9B,GAAoC/K,KAAxD;AACA,iBAAO,KAAK8C,IAAL,CAAUqI,IAAV,CAA0BjJ,GAA1B,EAA+B;AAAE8I,mBAAO,EAAPA;AAAF,WAA/B,CAAP;AACD;;;qCAEYI,K,EAAa;AACxB,cAAIJ,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAY,KAAK3N,WAAL,CAAiB4G,cAAjB,GAAkCgH,KAA3E,CAAV;AACA,cAAMhJ,GAAG,GAAW,KAAK2I,WAAL,GAAmB,GAAnB,GAAyBO,KAA7C;AACA,iBAAO,KAAKtI,IAAL,CAAUqI,IAAV,CAA0BjJ,GAA1B,EAA+B;AAAE8I,mBAAO,EAAPA;AAAF,WAA/B,CAAP;AACD;;;iCAEQD,K,EAAe/K,K,EAAa;AACnC,cAAIgL,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAY,KAAK3N,WAAL,CAAiB4G,cAAjB,GAAkCgH,KAA3E,CAAV;AACA,cAAMhJ,GAAG,GAAW,KAAK4I,OAAL,GAAe,GAAf,GAAqBC,KAArB,GAA6B,GAA7B,GAAmC/K,KAAvD;AACA,iBAAO,KAAK8C,IAAL,CAAUqI,IAAV,CAA0BjJ,GAA1B,EAA+B;AAAE8I,mBAAO,EAAPA;AAAF,WAA/B,CAAP;AACD;;;;;;;uBA1BUN,kB,EAAkB,uH,EAAA,qI,EAAA,oI;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVD,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaY,gB;AAEX,gCAAoB/N,WAApB,EAAgEgE,MAAhE,EAAgF;AAAA;;AAA5D,aAAAhE,WAAA,GAAAA,WAAA;AAA4C,aAAAgE,MAAA,GAAAA,MAAA;AAAmB;;;;sCAExE;AACT,cAAI,CAAC,KAAKhE,WAAL,CAAiBgO,UAAjB,EAAL,EAAoC;AAClC,iBAAKhK,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA7D,mBAAO,CAACC,GAAR,CAAY,IAAZ;AACA,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;;;;;;;uBAXUiL,gB,EAAgB,qI,EAAA,8G;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVZ,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUac,qB;AAKT,qCAAoBC,UAApB,EAAmDlK,MAAnD,EAAmE;AAAA;;AAA/C,aAAAkK,UAAA,GAAAA,UAAA;AAA+B,aAAAlK,MAAA,GAAAA,MAAA;AAH3C,aAAAmK,oBAAA,GAA+B,yEAAYb,OAAZ,GAAsB,cAArD;AAG8D;;;;yCAE9C;AACpB,iBAAO,KAAKX,WAAZ;AACH;;;uCAEqBA,W,EAA2B;AAC7C,eAAKA,WAAL,GAAmBA,WAAnB;AACH;;;0CAEiBjD,Q,EAAsB;AACpC,cAAIgE,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAY,KAAK/G,cAAL,GAAsBgH,KAA/D,CAAV;AACA,cAAMhJ,GAAG,GAAW,yEAAY0I,OAAZ,GAAsB,MAA1C;AACA,iBAAO,KAAKY,UAAL,CAAgBE,GAAhB,CAA6BxJ,GAA7B,EAAkC8E,QAAlC,EAA4C;AAAEgE,mBAAO,EAAPA;AAAF,WAA5C,CAAP;AACH;;;qCAEYW,I,EAAclD,Q,EAAgB;AACvC,cAAIuC,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,WAAWW,IAAI,CAACD,IAAI,GAAG,GAAP,GAAalD,QAAd,CAA5C,CAAV;AACA,iBAAO,KAAK+C,UAAL,CAAgBzM,GAAhB,CAAkC,KAAK0M,oBAAvC,EAA6D;AAAET,mBAAO,EAAPA;AAAF,WAA7D,CAAP;AACH;;;qCAEgB;AACb,cAAI,KAAK9G,cAAL,EAAJ,EAA2B;AACvB,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAP;AACH;;;;;;;uBAjCQqH,qB,EAAqB,uH,EAAA,8G;AAAA,K;;;aAArBA,qB;AAAqB,eAArBA,qBAAqB,K;AAAA,kBAFlB;;;;;sEAEHA,qB,EAAqB;cAHjC,wDAGiC;eAHtB;AACRd,oBAAU,EAAE;AADJ,S;AAGsB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACVlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaoB,gB;AAEX,gCAAoB/I,IAApB,EAA8CxF,WAA9C,EAAkF;AAAA;;AAA9D,aAAAwF,IAAA,GAAAA,IAAA;AAA0B,aAAAxF,WAAA,GAAAA,WAAA;AAG9C,aAAAwO,YAAA,GAAe,yEAAYlB,OAAZ,GAAsB,SAArC;AACA,aAAAmB,SAAA,GAAY,yEAAYnB,OAAZ,GAAsB,MAAlC;AACA,aAAAoB,YAAA,GAAe,WAAf;AACA,aAAAC,aAAA,GAAgB,SAAhB;AACA,aAAAC,UAAA,GAAa,YAAb;AACA,aAAAC,QAAA,GAAW,QAAX;AARqF;;;;8CAWlE;AACjB,iBAAO,KAAKtE,gBAAZ;AACD;;;4CAEmBA,gB,EAA2B;AAC7C,eAAKA,gBAAL,GAAwBA,gBAAxB;AACD;;;8CAEkB;AACjB,cAAImD,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAY,KAAK3N,WAAL,CAAiB4G,cAAjB,GAAkCgH,KAA3E,CAAV;AACA,cAAMhJ,GAAG,GAAW,KAAK4J,YAAL,GAAoB,GAApB,GAA0B,KAAKxO,WAAL,CAAiB4G,cAAjB,GAAkCjH,EAAhF;AACA,iBAAO,KAAK6F,IAAL,CAAU/D,GAAV,CAAyBmD,GAAzB,EAA8B;AAAE8I,mBAAO,EAAPA;AAAF,WAA9B,CAAP;AACD;;;4CAEmBnD,gB,EAA2B;AAC7C,cAAImD,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAY,KAAK3N,WAAL,CAAiB4G,cAAjB,GAAkCgH,KAA3E,CAAV;AACA,cAAMhJ,GAAG,GAAW,KAAK4J,YAAL,GAAoB,GAApB,GAA0B,KAAKxO,WAAL,CAAiB4G,cAAjB,GAAkCjH,EAAhF;AACA,iBAAO,KAAK6F,IAAL,CAAUqI,IAAV,CAA0BjJ,GAA1B,EAA+B2F,gBAA/B,EAAiD;AAAEmD,mBAAO,EAAPA;AAAF,WAAjD,CAAP;AACD;;;+CAEsBoB,gB,EAA2B;AAChD,cAAIpB,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAY,KAAK3N,WAAL,CAAiB4G,cAAjB,GAAkCgH,KAA3E,CAAV;AACA,cAAMhJ,GAAG,GAAW,KAAK6J,SAAL,GAAiB,GAAjB,GAAuB,KAAKjI,mBAAL,GAA2B7G,EAAlD,GAAuD,GAAvD,GAA6D,KAAK+O,YAAtF;AACA,iBAAO,KAAKlJ,IAAL,CAAUqI,IAAV,CAA0BjJ,GAA1B,EAA+BkK,gBAA/B,EAAiD;AAAEpB,mBAAO,EAAPA;AAAF,WAAjD,CAAP;AACD;;;gDAEuBqB,iB,EAA6B;AACnD,cAAIrB,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAY,KAAK3N,WAAL,CAAiB4G,cAAjB,GAAkCgH,KAA3E,CAAV;AACA,cAAMhJ,GAAG,GAAW,KAAK6J,SAAL,GAAiB,GAAjB,GAAuB,KAAKjI,mBAAL,GAA2B7G,EAAlD,GAAuD,GAAvD,GAA6D,KAAKgP,aAAtF;AACA,iBAAO,KAAKnJ,IAAL,CAAUqI,IAAV,CAA2BjJ,GAA3B,EAAgCmK,iBAAhC,EAAmD;AAAErB,mBAAO,EAAPA;AAAF,WAAnD,CAAP;AACD;;;6CAEoBsB,c,EAAuB;AAC1C,cAAItB,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAY,KAAK3N,WAAL,CAAiB4G,cAAjB,GAAkCgH,KAA3E,CAAV;AACA,cAAMhJ,GAAG,GAAW,KAAK6J,SAAL,GAAiB,GAAjB,GAAuB,KAAKjI,mBAAL,GAA2B7G,EAAlD,GAAuD,GAAvD,GAA6D,KAAKiP,UAAtF;AACA,iBAAO,KAAKpJ,IAAL,CAAUqI,IAAV,CAAwBjJ,GAAxB,EAA6BoK,cAA7B,EAA6C;AAAEtB,mBAAO,EAAPA;AAAF,WAA7C,CAAP;AACD;;;2CAEkBuB,Y,EAAmB;AACpC,cAAIvB,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAY,KAAK3N,WAAL,CAAiB4G,cAAjB,GAAkCgH,KAA3E,CAAV;AACA,cAAMhJ,GAAG,GAAW,KAAK6J,SAAL,GAAiB,GAAjB,GAAuB,KAAKjI,mBAAL,GAA2B7G,EAAlD,GAAuD,GAAvD,GAA6D,KAAKkP,QAAtF;AACA,iBAAO,KAAKrJ,IAAL,CAAUqI,IAAV,CAAsBjJ,GAAtB,EAA2BqK,YAA3B,EAAyC;AAAEvB,mBAAO,EAAPA;AAAF,WAAzC,CAAP;AACD;;;qCAEYwB,M,EAAgB;AAC3B,cAAMzJ,IAAI,GAAG,KAAKe,mBAAL,GAA2BiD,YAA3B,CAAwC0F,MAAxC,CAA+C,UAAArJ,IAAI;AAAA,mBAAIA,IAAI,CAACoJ,MAAL,KAAgBA,MAApB;AAAA,WAAnD,CAAb;AACA,iBAAOzJ,IAAP;AACD;;;mCAEU2J,I,EAAc;AACvBvM,iBAAO,CAACC,GAAR,CAAYsM,IAAZ;AACA,cAAMxK,GAAG,GAAG,KAAK4J,YAAL,GAAoB,SAApB,GAAgC,KAAKjE,gBAAL,CAAsB5K,EAAlE;AACA,iBAAO,KAAK6F,IAAL,CAAUqI,IAAV,CAAoBjJ,GAApB,EAAyBwK,IAAzB,CAAP;AACD;;;4CAEgB;AACf,cAAMxK,GAAG,GAAG,KAAK4J,YAAL,GAAoB,SAApB,GAAgC,KAAKjE,gBAAL,CAAsB5K,EAAlE;AACA,cAAI0P,eAAJ;AACA,eAAK7J,IAAL,CAAU/D,GAAV,CAAcmD,GAAd,EAAmB5B,SAAnB,CACE,UAACC,QAAD,EAAc;AAAEoM,2BAAe,GAAG,4BAA4BpM,QAA9C;AAAyD,WAD3E;AAEA,eAAKoG,cAAL,GAAsBgG,eAAtB;AACA,iBAAOA,eAAP;AACD;;;2CAEe;AACd,cAAMzK,GAAG,GAAG,KAAK4J,YAAL,GAAoB,MAAhC;AACA,cAAId,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,YAAY,KAAK3N,WAAL,CAAiB4G,cAAjB,GAAkCgH,KAA3E,CAAV;AACA,iBAAO,KAAKpI,IAAL,CAAU/D,GAAV,CAAyBmD,GAAzB,CAAP;AACD;;;;;;;uBAxFU2J,gB,EAAgB,uH,EAAA,qI;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVpB,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASamC,U;AAEX,0BAAoB9J,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEX,aAAA+J,QAAA,GAAW,MAAX;AACT,aAAAC,MAAA,GAAiB,yEAAYlC,OAAZ,GAAsB,KAAKiC,QAA5C;AAHyC;;;;qCAK/B;AACR,iBAAO,KAAK/J,IAAL,CAAU/D,GAAV,CAAqB,KAAK+N,MAA1B,CAAP;AACD;;;mCAEU7P,E,EAAU;AACnB,iBAAO,KAAK6F,IAAL,CAAU/D,GAAV,CAAmB,KAAK+N,MAAL,GAAc7P,EAAjC,CAAP;AACD;;;+BAEMoG,G,EAAQ;AACb,iBAAO,KAAKP,IAAL,CAAUqI,IAAV,CAAoB,KAAK2B,MAAzB,EAAiCzJ,GAAjC,CAAP;AACD;;;;;;;uBAjBUuJ,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVnC,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;ACTvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUasC,a;AAIT,6BAAoBC,WAApB,EAA6C;AAAA;;AAAzB,aAAAA,WAAA,GAAAA,WAAA;AAFb,aAAA9K,GAAA,GAAc,yEAAY0I,OAAZ,GAAsB,QAApC;AAEyC;;;;gCAExCe,I,EAAU;AACd,iBAAO,KAAKqB,WAAL,CAAiB7B,IAAjB,CAA2B,KAAKjJ,GAAhC,EAAqCyJ,IAArC,CAAP;AACH;;;;;;;uBARQoB,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFV;;;;;sEAEHA,a,EAAa;cAHzB,wDAGyB;eAHd;AACRtC,oBAAU,EAAE;AADJ,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKQ;;AACE;;AACF;;;;;;AADO;;AAAA;;;;;;AAEP;;AACE;;AACF;;;;QDEKwC,gB;AAEX,gCACU3P,WADV,EAESF,gBAFT,EAGU8P,MAHV,EAIU5L,MAJV,EAIwB;AAAA;;AAHd,aAAAhE,WAAA,GAAAA,WAAA;AACD,aAAAF,gBAAA,GAAAA,gBAAA;AACC,aAAA8P,MAAA,GAAAA,MAAA;AACA,aAAA5L,MAAA,GAAAA,MAAA;AACL;;;;mCAKG;AACN,eAAK6L,WAAL;AACD;;;wCAEY;AACX,cAAMC,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACA,eAAKF,MAAL,CAAYG,IAAZ,CAAiB,sFAAjB,EAAsCD,YAAtC;AACD;;;sCAEU;AAAA;;AACT,cAAI,KAAK9P,WAAL,CAAiB4G,cAAjB,EAAJ,EAAuC;AACrC,iBAAKoJ,SAAL,GAAiB,KAAKhQ,WAAL,CAAiB4G,cAAjB,GAAkCoJ,SAAnD;AACA,iBAAKC,QAAL,GAAgB,KAAKjQ,WAAL,CAAiB4G,cAAjB,GAAkCqJ,QAAlD;AACD;;AACD,eAAKnQ,gBAAL,CAAsB4M,mBAAtB,GAA4C1J,SAA5C,CACE,UAACC,QAAD,EAAc;AACZ,kBAAI,CAACiN,QAAL,GAAgBjN,QAAQ,CAACjB,UAAT,CAAoB,CAApB,EAAuB6F,WAAvC;;AACA,kBAAI,CAAC/H,gBAAL,CAAsByH,mBAAtB,CAA0CtE,QAA1C;AACD,WAJH,EAKE,UAAC2I,KAAD,EAAW;AACT,gBAAIA,KAAK,CAACA,KAAN,CAAYrM,IAAZ,KAAqB,0BAAzB,EAAqD;AACnD,oBAAI,CAACyE,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;AACF,WATH;AAUA,eAAKwJ,QAAL,GAAgB,CAAC,KAAKA,QAAN,GAAiB,KAAKlQ,WAAL,CAAiB4G,cAAjB,GAAkCqC,IAAnD,GAA0DuD,SAA1E;AACD;;;;;;;uBArCUmD,gB,EAAgB,uJ,EAAA,6I,EAAA,mI,EAAA,uH;AAAA,K;;;YAAhBA,gB;AAAgB,mC;AAAA,e;AAAA,a;AAAA,mgC;AAAA;AAAA;ACZ7B;;AAEE;;AACE;;AACE;;AAA8C;AAAA,mBAAS,IAAAQ,aAAA,EAAT;AAAwB,WAAxB;;AAC5C;;AAGA;;AAGF;;AACF;;AACA;;AACE;;AAAoC;;AAA0B;;AAC9D;;AAAmC;;AAAY;;AACjD;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAAM;;AAAS;;AACjB;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAM;;AAAO;;AACf;;AACF;;AACA;;AACE;;AACE;;AACA;;AAA2B;;AAAS;;AACtC;;AACF;;AACA;;AACE;;AACE;;AACA;;AAA2B;;AAAI;;AACjC;;AACF;;AACA;;AACE;;AACE;;AACA;;AAA2B;;AAAY;;AACzC;;AACF;;AACA;;AACE;;AACE;;AACA;;AAA2B;;AAAU;;AACvC;;AACF;;AACF;;AACF;;AAEF;;;;AAzDa;;AAAA;;AAGA;;AAAA;;AAM6B;;AAAA;;AACD;;AAAA;;;;;;;;;sEDH5BR,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTxM,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiCwC;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AARJ;;AAGI;;AAGA;;AAGJ;;;;;;AANS;;AAAA;;AAGA;;AAAA;;;;;;AAOL;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AAPJ;;AAEI;;AAGA;;AAGJ;;;;;;AANS;;AAAA;;AAGA;;AAAA;;;;;;AAeT;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AAYA;;AAEI;;AAAoB;;;;;;AAGpB;;AACI;;AACJ;;;;;;AAJJ;;AAEI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAIT;;AAEI;;AACiC;;;;QD1E5D+M,e;AAOT,+BACYC,WADZ,EAEYC,aAFZ,EAGYtM,MAHZ,EAIYhE,WAJZ,EAI8C;AAAA;;AAHlC,aAAAqQ,WAAA,GAAAA,WAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAtM,MAAA,GAAAA,MAAA;AACA,aAAAhE,WAAA,GAAAA,WAAA;AARL,aAAAuQ,WAAA,GAAuB,IAAvB;AASF;;;;mCAEM;AACP,eAAKC,UAAL,GAAkB,KAAKH,WAAL,CAAiBjQ,KAAjB,CAAuB;AACrCkI,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWhI,QAAZ,EAAsB,KAAKmQ,eAA3B,EAA4C,0DAAWvF,OAAX,CAAmB,0CAAnB,CAA5C,CAAL,CAD2B;AAErC8E,qBAAS,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW1P,QAAZ,CAAL,CAF0B;AAGrC2P,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW3P,QAAZ,CAAL,CAH2B;AAIrC6K,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAW7K,QAAZ,CAAL,CAJ2B;AAKrCoQ,2BAAe,EAAE,CACb,EADa,EAEb,CAAC,0DAAWpQ,QAAZ,EAAsB,KAAKqQ,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAAtB,CAFa,CALoB;AASrCrI,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWjI,QAAZ,EAAsB,0DAAW4K,OAAX,CAAmB,2BAAnB,CAAtB,CAAL;AAT4B,WAAvB,CAAlB;AAWH;;;6CA0BG2F,W,EAAwB;AAExB,cAAI,KAAKL,UAAT,EAAqB;AACjB,gBACIK,WAAW,CAACrO,KAAZ,IACAqO,WAAW,CAACrO,KAAZ,CAAkBZ,MAAlB,GAA2B,CAD3B,IAEAiP,WAAW,CAACrO,KAAZ,KAAsB,KAAKgO,UAAL,CAAgB/O,GAAhB,CAAoB,UAApB,EAAgCe,KAH1D,EAIE;AACE,qBAAO;AAAEsO,uBAAO,EAAE;AAAX,eAAP;AACH;AACJ;;AACD,iBAAO,IAAP;AACH;;;wCAEeD,W,EAAwB;AACpC,cAAIA,WAAW,CAACrO,KAAZ,KAAsB,OAA1B,EAAmC;AAC/B,mBAAO;AAAEuO,2BAAa,EAAE;AAAjB,aAAP;AACH,WAFD,MAEO;AACH,mBAAO,IAAP;AACH;AACJ;;;oCAEe;AACZ,eAAK/M,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACH;;;kCAEa;AAAA;;AACV,eAAK2H,IAAL,GAAY;AACR1O,cAAE,EAAE,IADI;AAERqR,qBAAS,EAAE,KAAKR,UAAL,CAAgB/O,GAAhB,CAAoB,WAApB,EAAiCe,KAFpC;AAGRyO,oBAAQ,EAAE,KAAKT,UAAL,CAAgB/O,GAAhB,CAAoB,UAApB,EAAgCe,KAHlC;AAIR2I,oBAAQ,EAAE,KAAKqF,UAAL,CAAgB/O,GAAhB,CAAoB,UAApB,EAAgCe,KAJlC;AAKR0O,oBAAQ,EAAE,KAAKV,UAAL,CAAgB/O,GAAhB,CAAoB,UAApB,EAAgCe,KALlC;AAMR2O,yBAAa,EAAE,KAAKX,UAAL,CAAgB/O,GAAhB,CAAoB,SAApB,EAA+Be,KANtC;AAORyG,gBAAI,EAAEuD;AAPE,WAAZ;AASA,eAAK8D,aAAL,CAAmBc,OAAnB,CAA2B,KAAK/C,IAAhC,EAAsCrL,SAAtC,CACI,UAACyD,IAAD,EAAU;AACN,mBAAI,CAACzG,WAAL,CAAiBuL,cAAjB,CAAgC9E,IAAhC;;AACA,mBAAI,CAAC8J,WAAL,GAAmB,IAAnB;AACA,mBAAI,CAAC9E,SAAL,GAAiB,mEAAOC,OAAxB;AACA,mBAAI,CAACF,YAAL,GAAoB,2BAA2B,iBAA/C;AACA6F,sBAAU,CAAC,YAAM;AACb,qBAAI,CAACC,qBAAL;AACH,aAFS,EAEP,IAFO,CAAV;AAGH,WATL,EAUI,UAAC1F,KAAD,EAAW;AACP,gBAAIA,KAAK,CAACsD,MAAN,KAAiB,GAArB,EAA0B;AACtB,qBAAI,CAACzD,SAAL,GAAiB,mEAAOI,MAAxB;AACA,qBAAI,CAACL,YAAL,GAAoBI,KAAK,CAACA,KAAN,CAAYE,OAAhC;AACA,qBAAI,CAACyE,WAAL,GAAmB,KAAnB;AACH;AACJ,WAhBL;AAkBH;;;0CAEqB;AAClB,eAAKvM,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACH;;;gDAE2B;AACxB,eAAK1C,MAAL,CAAY0C,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACH;;;4BAvFqB;AAClB,iBAAO,KAAK8J,UAAL,CAAgB/O,GAAhB,CAAoB,UAApB,CAAP;AACH;;;4BAEsB;AACnB,iBAAO,KAAK+O,UAAL,CAAgB/O,GAAhB,CAAoB,WAApB,CAAP;AACH;;;4BAEqB;AAClB,iBAAO,KAAK+O,UAAL,CAAgB/O,GAAhB,CAAoB,UAApB,CAAP;AACH;;;4BAEqB;AAClB,iBAAO,KAAK+O,UAAL,CAAgB/O,GAAhB,CAAoB,UAApB,CAAP;AACH;;;4BAE4B;AACzB,iBAAO,KAAK+O,UAAL,CAAgB/O,GAAhB,CAAoB,iBAApB,CAAP;AACH;;;4BAEoB;AACjB,iBAAO,KAAK+O,UAAL,CAAgB/O,GAAhB,CAAoB,SAApB,CAAP;AACH;;;;;;;uBAjDQ2O,e,EAAe,2H,EAAA,wI,EAAA,uH,EAAA,uJ;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,c;AAAA,o5E;AAAA;AAAA;AClB5B;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAA2B;;AAAkB;;AACjD;;AACA;;AACI;;AACJ;;AACA;;AAA4C;AAAA,mBAAU,IAAAgB,OAAA,EAAV;AAAmB,WAAnB;;AACxC;;AACI;;AAAmC;;AAInC;;AACA;;AAAsB;;AAItB;;AACA;;AAWA;;AASJ;;AACA;;AACI;;AAAsB;;AAGtB;;AACA;;AAAsB;;AAItB;;AACA;;AAIA;;AAIJ;;AACA;;AACI;;AACI;;AAGJ;;AACA;;AAAsB;;AAGtB;;AACA;;AAGA;;AAMA;;AAIJ;;AACA;;AAEI;;AACJ;;AACA;;AACJ;;AACA;;AACI;;AACI;;AAA2C;;AAAgB;;AAC/D;;AACA;;AAAkC;;AAC9B;;AAAG;AAAA,mBAAS,IAAAG,SAAA,EAAT;AAAoB,WAApB;;AAAuB;;AAAM;;AACpC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAnGmC;;AAAA;;AACH;;AAAA;;AAEe;;AAAA;;AAYN;;AAAA;;AAWA;;AAAA;;AAqBD;;AAAA;;AAIA;;AAAA;;AAeA;;AAAA;;AAEC;;AAAA;;AAOD;;AAAA;;AAKJ;;AAAA;;;;;;;;;sED7EvBnB,e,EAAe;cAL3B,uDAK2B;eALjB;AACPjN,kBAAQ,EAAE,aADH;AAEPC,qBAAW,EAAE,0BAFN;AAGPC,mBAAS,EAAE,CAAC,0BAAD;AAHJ,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMI;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAQR;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;AAET;;AACI;;AAA8F;AAAA;;AAAA;;AAAA;AAAA;;AAC1F;;AAAwB;;AAAK;;AACjC;;AACJ;;;;QDbamO,mB;AAGX,mCAAqB1R,gBAArB,EAAgE2R,SAAhE,EAA8G;AAAA;;AAAzF,aAAA3R,gBAAA,GAAAA,gBAAA;AAA2C,aAAA2R,SAAA,GAAAA,SAAA;AAAiD;;;;mCAGzG,CAEP;;;sCAEa/M,K,EAAK;AAAA;;AACjB,eAAKgN,YAAL,GAAoBhN,KAAK,CAACiN,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAApB;AACA,cAAMC,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,oBAAU,CAACE,MAAX,CAAkB,WAAlB,EAA+B,KAAKL,YAApC;AACA,eAAK5R,gBAAL,CAAsBkS,UAAtB,CAAiCH,UAAjC,EAA6C7O,SAA7C,CACE,UAAAC,QAAQ,EAAI;AACVJ,mBAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,mBAAI,CAACnD,gBAAL,CAAsBuJ,cAAtB,GAAuC,4BAA4BpG,QAAQ,CAACoG,cAA5E;AACA,mBAAI,CAAC4I,OAAL,GAAe,OAAI,CAACnS,gBAAL,CAAsBuJ,cAArC;AACD,WALH;AAOD;;;gCAEO;AACN,eAAKoI,SAAL,CAAeS,KAAf;AACD;;;;;;;uBAzBUV,mB,EAAmB,6I,EAAA,sI;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,qjB;AAAA;AAAA;;;ACThC;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAGA;;AAAyC;AAAA,mBAAU,IAAAW,aAAA,QAAV;AAA+B,WAA/B;;AAAzC;;AACA;;AAAQ;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAgC,WAAhC;;AACJ;;AAA+B;;AAAK;;AACpC;;AACJ;;AACJ;;AACA;;AAGA;;;;AAZwB;;AAAA;;AASF;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDTTX,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTrO,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEThC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM+O,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzB/E,aAAO,EAAE;AAFgB,KAApB;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAY+E,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI1P,OAAO,CAAC+I,KAAR,CAAc2G,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\nimport { CandidateService } from 'src/app/services/candidate.service';\nimport { Candidate } from 'src/app/models/candidate.model';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Job, Process } from '../models/jobs.model';\nimport { JobService } from '../services/job.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-add-jobs',\n  templateUrl: './add-jobs.component.html',\n  styleUrls: ['./add-jobs.component.css']\n})\nexport class AddJobsComponent implements OnInit {\n  jobDetailsForm: FormGroup;\n  indeterminate = false;\n  processData: Process;\n  constructor(private fb: FormBuilder, private candidateService: CandidateService,\n    public jobService: JobService, private authService: AuthenticationService, private datePipe: DatePipe) { }\n\n  ngOnInit(): void {\n\n    this.jobDetailsForm = this.fb.group({\n      companyName: ['', Validators.required],\n      location: ['', Validators.required],\n      pointOfContact: ['', Validators.required],\n      compensation: ['', Validators.required],\n      vacancies: ['', Validators.required],\n      position: ['', Validators.required],\n      description: ['', Validators.required],\n      minimumEducation: ['', Validators.required],\n      minimumExperience: ['', Validators.required],\n\n      finaldescription: ['', Validators.required],\n      finallocation: ['', Validators.required],\n      duration: ['', Validators.required],\n\n      travelRequired: ['', Validators.required],\n      travelPercent: ['', Validators.required],\n      rounds: this.fb.array([this.createRoundFormGroup()]),\n      skillsRequired: this.fb.array([this.createSkillFormGroup()]),\n    });\n\n  }\n\n  public addRoundFormGroup() {\n    const rounds = this.jobDetailsForm.get('rounds') as FormArray;\n    rounds.push(this.createRoundFormGroup());\n  }\n\n  public removeOrClearRound(i: number) {\n    const rounds = this.jobDetailsForm.get('rounds') as FormArray;\n    if (rounds.length > 1) {\n      rounds.removeAt(i);\n    } else {\n      rounds.reset();\n    }\n  }\n\n  private createRoundFormGroup(): FormGroup {\n    return new FormGroup({\n      location: new FormControl(''),\n      duration: new FormControl(''),\n      pointOfContact: new FormControl(''),\n      description: new FormControl(''),\n    });\n  }\n\n  public addSkillFormGroup() {\n    const skillsRequired = this.jobDetailsForm.get('skillsRequired') as FormArray;\n    skillsRequired.push(this.createSkillFormGroup());\n  }\n\n  public removeOrClearSkill(i: number) {\n    const skillsRequired = this.jobDetailsForm.get('skillsRequired') as FormArray;\n    if (skillsRequired.length > 1) {\n      skillsRequired.removeAt(i);\n    } else {\n      skillsRequired.reset();\n    }\n  }\n\n  private createSkillFormGroup(): FormGroup {\n    return new FormGroup({\n      name: new FormControl(''),\n      experience: new FormControl(''),\n    });\n  }\n\n  postJob() {\n    const datepipe: DatePipe = new DatePipe('en-US');\n    let formattedDate = datepipe.transform(new Date(), 'DD-MMM-YYYY HH:mm:ss');\n    if (this.jobDetailsForm.dirty) {\n\n      this.processData = {\n        processId: null,\n        description: this.jobDetailsForm.get('finaldescription').value,\n        location: this.jobDetailsForm.get('finallocation').value,\n        duration: this.jobDetailsForm.get('duration').value,\n        rounds: this.jobDetailsForm.value.rounds,\n      };\n      const jobData: Job = {\n        jobId: null,\n        postedOn: this.datePipe.transform(new Date(), 'yyy-MM-dd HH:mm:ss.SSS'),\n        companyName: this.jobDetailsForm.get('companyName').value,\n        description: this.jobDetailsForm.get('description').value,\n        location: this.jobDetailsForm.get('location').value,\n        pointOfContact: this.jobDetailsForm.get('pointOfContact').value,\n        compensation: this.jobDetailsForm.get('compensation').value,\n        travelRequired: this.jobDetailsForm.get('travelRequired').value,\n        travelPercent: this.jobDetailsForm.get('travelPercent').value,\n        vacancies: this.jobDetailsForm.get('vacancies').value,\n        position: this.jobDetailsForm.get('position').value,\n        minimumExperience: this.jobDetailsForm.get('minimumExperience').value,\n        minimumEducation: this.jobDetailsForm.get('minimumEducation').value,\n        skillsRequired: this.jobDetailsForm.value.skillsRequired,\n        process: this.processData,\n      };\n\n      console.log('Formdata>>>', jobData);\n      this.jobService.addJob(jobData).subscribe((response) => {\n        console.log('Responsedata>>>', response);\n      });\n      // this.data = this.candidateService.getCandidateDetails();\n      // this.data.education = this.educationDetailsForm.value.educations;\n      // this.candidateService.setCandidateDetails(this.data);\n    }\n  }\n\n}\n","<form [formGroup]=\"jobDetailsForm\">\n    <div>\n        <div class=\"row\">\n            <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n                <div class=\"card border-0 rounded-0 h-100\">\n                    <div class=\"card-title mb-1 p-3\">\n                        <h5>Post a Job!</h5>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"form-group row\">\n                            <label for=\"companyName\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Comapany:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='companyName' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Company Name\" formControlName=\"companyName\"\n                                    required>\n                            </div>\n                            <label for=\"position\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                Position:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='position' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Enter position\" formControlName=\"position\"\n                                    required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"location\" class=\"col-sm-2 col-form-label text-nowrap\">Location:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='location' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Location\" formControlName=\"location\" required>\n                            </div>\n                            <label for=\"compensation\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                Salary(LPA):\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input class=\"form-control\" id=\"compensation\" placeholder=\"Compensation\" type=\"text\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    maxlength=\"10\" formControlName=\"compensation\" required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"pointOfContact\" class=\"col-sm-2 col-form-label text-nowrap\">Point of\n                                Contact:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='pointOfContact' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"P.O.C\" formControlName=\"pointOfContact\" required>\n                            </div>\n                            <label for=\"vacancies\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                No. of vacancies:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input class=\"form-control\" id=\"vacancies\" placeholder=\"Vacancies\" type=\"text\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    maxlength=\"10\" formControlName=\"vacancies\" required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"description\" class=\"col-sm-2 col-form-label text-nowrap\">Description:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='description' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Describe...\" formControlName=\"description\"\n                                    required>\n                            </div>\n                            <label for=\"minimumEducation\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                Qualification:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='minimumEducation' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Course\" formControlName=\"minimumEducation\"\n                                    required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"minimumExperience\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Experience:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='minimumExperience' maxlength=\"2\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    class=\"form-control\" placeholder=\"Min experience\"\n                                    formControlName=\"minimumExperience\" required>\n                            </div>\n                            <div class=\"offset-sm-1  col-xs-4\">\n                                <mat-checkbox class=\"col-12\" [(ngModel)]=\"indeterminate\"\n                                    formControlName=\"travelRequired\" color=\"primary\">Traveling\n                                    Required?\n                                </mat-checkbox>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"travelPercent\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Travelling(in %):</label>\n                            <div class=\"col-xs-4\">\n                                <input class=\"form-control\" id=\"travelPercent\" placeholder=\"Travel %\" type=\"text\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    maxlength=\"3\" formControlName=\"travelPercent\" required>\n                            </div>\n\n                        </div>\n                        <mat-divider></mat-divider>\n                        <br />\n                        <h5>Skillset:</h5>\n                        <div formArrayName=\"skillsRequired\">\n                            <div *ngFor=\"let skill of jobDetailsForm.get('skillsRequired')['controls']; let i = index\"\n                                [formGroupName]=\"i\">\n                                <div class=\"form-group row\">\n                                    <label for=\"name\" class=\"col-sm-2 col-form-label text-nowrap\">Skills\n                                        {{i+1}}:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='name' class=\"form-control\" placeholder=\"Skills {{i+1}}\"\n                                            formControlName=\"name\" required>\n                                    </div>\n                                    <label for=\"experience\"\n                                        class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">Experience:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='experience' class=\"form-control\"\n                                            oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                            maxlength=\"2\" placeholder=\"Experience (in yrs)\" formControlName=\"experience\"\n                                            required>\n                                    </div>\n                                    <div class=\"col-xs-4\">\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                                            (click)=\"addSkillFormGroup()\" matTooltip=\"Add\">\n                                            <mat-icon>add_circle_outline</mat-icon>\n                                        </button>\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\"\n                                            aria-label=\"Remove/clear\" (click)=\"removeOrClearSkill(i)\"\n                                            matTooltip=\"Remove\">\n                                            <mat-icon>highlight_off</mat-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                                <mat-divider></mat-divider><br />\n                            </div>\n                        </div>\n                        <br />\n                        <h5>Interview Process:</h5>\n                        <br />\n                        <div class=\"form-group row\">\n                            <label for=\"finaldescription\" class=\"col-sm-2 col-form-label text-nowrap\">Interview\n                                type:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='finaldescription' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Describe...\" formControlName=\"finaldescription\"\n                                    required>\n                            </div>\n                            <label for=\"finallocation\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                Interview Location:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='finallocation' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Course\" formControlName=\"finallocation\" required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"duration\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Duration(in hrs):\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input class=\"form-control\" id=\"duration\" placeholder=\"Duration\" type=\"text\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    maxlength=\"2\" formControlName=\"duration\" required>\n                            </div>\n                        </div>\n\n                        <div formArrayName=\"rounds\">\n                            <div *ngFor=\"let round of jobDetailsForm.get('rounds')['controls']; let i = index\"\n                                [formGroupName]=\"i\">\n                                <h6>Round {{i+1}}:</h6>\n                                <div class=\"form-group row\">\n                                    <label for=\"location\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                        Interview Location:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='location' maxlength=\"30\"\n                                            onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                            class=\"form-control\" placeholder=\"Course\" formControlName=\"location\"\n                                            required>\n                                    </div>\n                                    <label for=\"duration\" class=\"offset-sm-1  col-sm-2 col-form-label text-nowrap\">\n                                        Duration(in hrs):\n                                    </label>\n                                    <div class=\"col-xs-4\">\n                                        <input class=\"form-control\" id=\"duration\" placeholder=\"Duration\" type=\"text\"\n                                            oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                            maxlength=\"2\" formControlName=\"duration\" required>\n                                    </div>\n\n                                    <div class=\"col-xs-4\">\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                                            (click)=\"addRoundFormGroup()\" matTooltip=\"Add\">\n                                            <mat-icon>add_circle_outline</mat-icon>\n                                        </button>\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\"\n                                            aria-label=\"Remove/clear\" (click)=\"removeOrClearRound(i)\"\n                                            matTooltip=\"Remove\">\n                                            <mat-icon>highlight_off</mat-icon>\n                                        </button>\n                                    </div>\n\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label for=\"description\"\n                                        class=\"col-sm-2 col-form-label text-nowrap\">Description:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='degree' class=\"form-control\"\n                                            placeholder=\"Describe your project\" formControlName=\"description\" required>\n                                    </div>\n                                    <label for=\"pointOfContact\"\n                                        class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">Point of\n                                        Contact:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='degree' class=\"form-control\" placeholder=\"P.O.C\"\n                                            formControlName=\"pointOfContact\" required>\n                                    </div>\n                                </div>\n\n                                <mat-divider></mat-divider><br />\n                            </div>\n                        </div>\n                        <br />\n                        <div>\n                            <button mat-flat-button color=\"primary\" (click)=\"postJob()\"\n                                [disabled]=\"jobDetailsForm.invalid\">Post the Job!</button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n    </div>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { AppliedJobsComponent } from './applied-jobs/applied-jobs.component';\nimport { SavedJobsComponent } from './saved-jobs/saved-jobs.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AddJobsComponent } from './add-jobs/add-jobs.component';\nimport { SearchAreaComponent } from './search-area/search-area.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: SignUpComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuardService] },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'editprofile', component: EditProfileComponent },\n  { path: 'jobs', component: JobsComponent },\n  { path: 'appliedjobs', component: AppliedJobsComponent },\n  { path: 'savedjobs', component: SavedJobsComponent },\n  { path: 'addjobs', component: AddJobsComponent },\n  { path: 'search', component: SearchAreaComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AppService } from './services/app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  title = 'suitUp';\n  displayHeader = false;\n  displayFooter = false;\n  displayBar = false;\n  public baseURLH: any = ['/', '/home'];\n  public baseURLF: any = ['/', '/home', '/register', '/login'];\n\n  constructor(private router: Router, private appService: AppService) {\n    router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\n      this.modifyDisplay(event.url);\n    });\n  }\n\n  modifyDisplay(url): void {\n    this.displayHeader = (this.baseURLH.indexOf(url) > -1) ? true : false;\n    this.displayFooter = (this.baseURLF.indexOf(url) > -1) ? true : false;\n    this.displayBar = (this.baseURLF.indexOf(url) > -1) ? false : true;\n  }\n\n  getClasses() {\n    const classes = {\n      'pinned-sidebar': this.appService.getSidebarStat().isSidebarPinned,\n      'toggeled-sidebar': this.appService.getSidebarStat().isSidebarToggeled\n    }\n    return classes;\n  }\n\n  toggleSidebar(): void {\n    this.appService.toggleSidebar();\n  }\n\n}\n","<app-header *ngIf=\"displayHeader\"></app-header>\n<div class=\"wrapper default-theme\" [ngClass]=\"getClasses()\">\n    <app-nav-bar *ngIf=\"displayBar\"></app-nav-bar>\n    <main>\n        <app-side-bar *ngIf=\"displayBar\"></app-side-bar>\n        <div class=\"pages container-fluid p-4\">\n            <!-- routes will be rendered here -->\n            <router-outlet></router-outlet>\n            <app-footer *ngIf=\"displayFooter\"></app-footer>\n        </div>\n        <div class=\"overlay\" (click)=\"toggleSidebar()\"></div>\n    </main>\n</div>\n<!-- footer -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { SideBarComponent } from './side-bar/side-bar.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { JobcardComponent } from './jobcard/jobcard.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { EducationFormComponent } from './edit-profile/education-form/education-form.component';\nimport { ExperienceFormComponent } from './edit-profile/experience-form/experience-form.component';\nimport { PersonalFormComponent } from './edit-profile/personal-form/personal-form.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { ProjectFormComponent } from './edit-profile/project-form/project-form.component';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { AppliedJobsComponent } from './applied-jobs/applied-jobs.component';\nimport { SavedJobsComponent } from './saved-jobs/saved-jobs.component';\nimport { UploadFileComponent } from './upload-file/upload-file.component';\nimport { JwtInterceptor } from './interceptor/jwt.interceptor';\nimport { ErrorInterceptor } from './interceptor/error.interceptor';\nimport { AddJobsComponent } from './add-jobs/add-jobs.component';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { DatePipe } from '@angular/common';\nimport { ProfileCardComponent } from './profile-card/profile-card.component';\nimport { SearchAreaComponent } from './search-area/search-area.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LoginComponent,\n    SignUpComponent,\n    NavBarComponent,\n    SideBarComponent,\n    DashboardComponent,\n    JobcardComponent,\n    ProfileComponent,\n    EducationFormComponent,\n    ExperienceFormComponent,\n    PersonalFormComponent,\n    EditProfileComponent,\n    ProjectFormComponent,\n    JobsComponent,\n    AppliedJobsComponent,\n    SavedJobsComponent,\n    UploadFileComponent,\n    AddJobsComponent,\n    ProfileCardComponent,\n    SearchAreaComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AlertModule.forRoot(),\n    CollapseModule.forRoot(),\n    BrowserAnimationsModule,\n    MatStepperModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatRadioModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatDividerModule\n  ],\n  providers: [DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Job } from '../models/jobs.model';\nimport { CandidateService } from '../services/candidate.service';\nimport { Status } from '../constants/application.constants';\n\n@Component({\n  selector: 'app-applied-jobs',\n  templateUrl: './applied-jobs.component.html',\n  styleUrls: ['./applied-jobs.component.css']\n})\nexport class AppliedJobsComponent implements OnInit {\n  constructor(private http: HttpClient, private candidateService: CandidateService) { }\n  jobList: Job[];\n  ngOnInit(): void {\n    const list = this.candidateService.statusfilter(Status.APPLY);\n    this.jobList = list.map(item => item.job);\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-4\" *ngFor=\"let job of jobList\">\n            <app-jobcard [jobDetails]=\"job\"></app-jobcard>\n        </div>\n    </div>\n</div>","export enum Status {\n    APPLY = 'Applied',\n    WITHDRAW = 'withdraw',\n    SAVE = 'Saved'\n}\n","export enum Errors {\n    CANDIDATE_DOES_NOT_EXIST = 'CANDIDATE_DOES_NOT_EXIST',\n    USER_DOES_NOT_EXIST = 'USER_DOES_NOT_EXIST',\n    JOB_DOES_NOT_EXIST = 'JOB_DOES_NOT_EXIST',\n    USER_ALREADY_EXISTS = 'USER_ALREADY_EXISTS',\n    CANDIDATE_ALREADY_EXISTS = 'USER_ALREADY_EXISTS',\n    JOB_ALREADY_APPLIED = 'JOB_ALREADY_APPLIED'\n}\nexport enum Alerts {\n    SUCCESS = 'success',\n    WARNING = 'warning',\n    INFO = 'info',\n    DANGER = 'danger'\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<p>jobs works!</p>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Candidate } from '../models/candidate.model';\nimport { CandidateService } from '../services/candidate.service';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent implements OnInit {\n\n  personalDetailsForm: FormGroup;\n  educationDetailsForm: FormGroup;\n  experienceDetailsForm: FormGroup;\n  additionalDetailsForm: FormGroup;\n  isOptional = true;\n  isChecked = false;\n\n  constructor(\n    private candidateService: CandidateService,\n    private router: Router,\n    private authService: AuthenticationService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  addCandidateDetails(): void {\n    this.candidateService.addCandidateDetails(this.candidateService.getCandidateDetails()).subscribe(\n      (data) => {\n        console.log(data);\n        this.router.navigate(['jobs']);\n      });\n    this.authService.updateUserDetails(this.authService.getUserDetails()).subscribe();\n  }\n\n}\n","<mat-horizontal-stepper linear #stepper>\n  <!--First Form Stepper Mandatory Details-->\n  <mat-step [stepControl]=\"personalDetailsForm\" [optional]=\"false\">\n    <ng-template matStepLabel>Personal Details</ng-template>\n    <app-personal-form [personalDetailsForm]=\"personalDetailsForm\"></app-personal-form>\n  </mat-step>\n\n  <!--Second Form Stepper Education Details-->\n  <mat-step [stepControl]=\"educationDetailsForm\" [optional]=\"isOptional\">\n    <ng-template matStepLabel>Education Details</ng-template>\n    <app-education-form [educationDetailsForm]=\"educationDetailsForm\"></app-education-form>\n  </mat-step>\n\n  <!--THrid Form Stepper Experience Details-->\n  <mat-step [stepControl]=\"experienceDetailsForm\" [optional]=\"isOptional\">\n    <ng-template matStepLabel>Experience</ng-template>\n    <app-experience-form [experienceDetailsForm]=\"experienceDetailsForm\"></app-experience-form>\n  </mat-step>\n\n  <!--Fourth Form Stepper Additional(Project,Certificate etc.) Details-->\n  <mat-step [stepControl]=\"additionalDetailsForm\" [optional]=\"isOptional\">\n    <ng-template matStepLabel>Additional Details</ng-template>\n    <app-project-form [projectDetailsForm]=\"additionalDetailsForm\"></app-project-form>\n  </mat-step>\n\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    <p>You are now done.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)=\"addCandidateDetails()\">Save and Proceed</button>\n      <!--<button mat-button (click)=\"stepper.reset()\">Reset</button>-->\n    </div>\n  </mat-step>\n</mat-horizontal-stepper>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { CandidateService } from 'src/app/services/candidate.service';\nimport { Education, Candidate } from 'src/app/models/candidate.model';\n\n@Component({\n  selector: 'app-education-form',\n  templateUrl: './education-form.component.html',\n  styleUrls: ['./education-form.component.scss']\n})\nexport class EducationFormComponent implements OnInit {\n  data: Candidate;\n  @Input() educationDetailsForm: FormGroup;\n  constructor(private fb: FormBuilder, private candidateService: CandidateService) { }\n\n  ngOnInit(): void {\n    this.educationDetailsForm = this.fb.group({\n      educations: this.fb.array([this.createEducationFormGroup()]),\n    });\n  }\n\n  public addEducationFormGroup() {\n    const educations = this.educationDetailsForm.get('educations') as FormArray;\n    educations.push(this.createEducationFormGroup());\n  }\n\n  public removeOrClearEducation(i: number) {\n    const educations = this.educationDetailsForm.get('educations') as FormArray;\n    if (educations.length > 1) {\n      educations.removeAt(i);\n    } else {\n      educations.reset();\n    }\n  }\n\n  private createEducationFormGroup(): FormGroup {\n    return new FormGroup({\n      institution: new FormControl(''),\n      degree: new FormControl(''),\n      startDate: new FormControl(''),\n      endDate: new FormControl(''),\n      description: new FormControl(''),\n      percentage: new FormControl(''),\n    });\n  }\n\n  addEducationDetails() {\n    if (this.educationDetailsForm.dirty) {\n      this.data = this.candidateService.getCandidateDetails();\n      this.data.education = this.educationDetailsForm.value.educations;\n      this.candidateService.setCandidateDetails(this.data);\n    }\n  }\n}\n","<form [formGroup]=\"educationDetailsForm\">\n    <div class=\"row\">\n        <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n            <div class=\"card border-0 rounded-0 h-100\">\n                <div class=\"card-title mb-1 p-3\">\n                    <h5>Education Details:</h5>\n                </div>\n                <div class=\"card-body\">\n\n                    <div formArrayName=\"educations\">\n                        <div *ngFor=\"let education of educationDetailsForm.get('educations')['controls']; let i = index\"\n                            [formGroupName]=\"i\">\n\n                            <div class=\"form-group row\">\n                                <label for=\"institution\" class=\"col-sm-2 col-form-label text-nowrap\">Institute\n                                    Name:</label>\n                                <div class=\"col-xs-4\">\n                                    <input type=\"text\" id='institution' maxlength=\"20\"\n                                        onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                        class=\"form-control\" placeholder=\"Enter your institution name\"\n                                        formControlName=\"institution\" required>\n                                </div>&nbsp;&nbsp;&nbsp;\n                                <label for=\"degree\" class=\"col-sm-2 col-form-label text-nowrap\">Board/ Degree:</label>\n                                <div class=\"col-xs-4\">\n                                    <input class=\"form-control\" id=\"degree\" placeholder=\"Enter your degree/degree\"\n                                        type=\"text\"\n                                        onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                        formControlName=\"degree\" required>\n                                </div>\n\n                                <div class=\"col-xs-4\">\n                                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                                        (click)=\"addEducationFormGroup()\" matTooltip=\"Add\">\n                                        <mat-icon>add_circle_outline</mat-icon>\n                                    </button>\n                                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Remove/clear\"\n                                        (click)=\"removeOrClearEducation(i)\" matTooltip=\"Remove\">\n                                        <mat-icon>highlight_off</mat-icon>\n                                    </button>\n                                </div>\n\n                            </div>\n\n                            <div class=\"form-group row\">\n                                <label for=\"description\" class=\"col-sm-2 col-form-label text-nowrap\">Stream:</label>\n                                <div class=\"col-xs-4\">\n                                    <input type=\"text\" id='description' maxlength=\"15\"\n                                        onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                        class=\"form-control\" placeholder=\"Enter your stream/major\"\n                                        formControlName=\"description\" required>\n                                </div>&nbsp;&nbsp;&nbsp;\n                                <label for=\"startDate\" class=\"col-sm-2 col-form-label text-nowrap\">Starting\n                                    date:</label>\n                                <div class=\"col-xs-4\">\n                                    <input type=\"date\" id=\"startDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\"\n                                        value=\"\" formControlName=\"startDate\" required>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group row\">\n                                <label for=\"zipcode\" class=\"col-sm-2 col-form-label text-nowrap\">Percentage(%):</label>\n                                <div class=\"col-xs-4\">\n                                    <input type=\"text\" class=\"form-control\" id=\"percentage\"\n                                        placeholder=\"Enter your percentage\"\n                                        oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                        maxlength=\"3\" formControlName=\"percentage\" required>\n                                </div>&nbsp;&nbsp;&nbsp;\n                                <label for=\"endDate\" class=\"col-sm-2 col-form-label text-nowrap\">Ending date:</label>\n                                <div class=\"col-xs-4\">\n                                    <input type=\"date\" id=\"endDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\"\n                                        value=\"\" formControlName=\"endDate\" required>\n                                </div>\n                            </div>\n                            <hr />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext (click)=\"addEducationDetails()\">Next</button>\n    </div>\n</form>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { Candidate, Experience } from 'src/app/models/candidate.model';\nimport { CandidateService } from 'src/app/services/candidate.service';\n\n@Component({\n  selector: 'app-experience-form',\n  templateUrl: './experience-form.component.html',\n  styleUrls: ['./experience-form.component.scss']\n})\nexport class ExperienceFormComponent implements OnInit {\n\n  @Input() experienceDetailsForm: FormGroup;\n  data: Candidate;\n  constructor(private fb: FormBuilder, private candidateService: CandidateService) { }\n\n  ngOnInit(): void {\n    this.experienceDetailsForm = this.fb.group({\n      experiences: this.fb.array([this.createExperienceFormGroup()]),\n    });\n  }\n\n  public addExperienceFormGroup() {\n    const experiences = this.experienceDetailsForm.get('experiences') as FormArray;\n    experiences.push(this.createExperienceFormGroup());\n  }\n\n  public removeOrClearExperience(i: number) {\n    const experiences = this.experienceDetailsForm.get('experiences') as FormArray;\n    if (experiences.length > 1) {\n      experiences.removeAt(i);\n    } else {\n      experiences.reset();\n    }\n  }\n\n  private createExperienceFormGroup(): FormGroup {\n    return new FormGroup({\n      designation: new FormControl(''),\n      type: new FormControl(''),\n      location: new FormControl(''),\n      organization: new FormControl(''),\n      startDate: new FormControl(''),\n      endDate: new FormControl(''),\n      current: new FormControl(''),\n    });\n  }\n\n  addExperienceDetails() {\n    if (this.experienceDetailsForm.dirty) {\n      this.data = this.candidateService.getCandidateDetails();\n      this.data.experience = this.experienceDetailsForm.value.experiences;\n      this.candidateService.setCandidateDetails(this.data);\n    }\n  }\n}\n","<form [formGroup]=\"experienceDetailsForm\">\n    <div>\n        <div class=\"row\">\n            <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n                <div class=\"card border-0 rounded-0 h-100\">\n                    <div class=\"card-body\">\n\n                        <div formArrayName=\"experiences\">\n                            <div *ngFor=\"let experience of experienceDetailsForm.get('experiences')['controls']; let i = index\"\n                                [formGroupName]=\"i\">\n\n                                <div class=\"form-group row\">\n                                    <label for=\"designation\" class=\"col-sm-2 col-form-label text-nowrap\">Position\n                                        {{i+1}}:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='designation' maxlength=\"20\"\n                                            onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                            class=\"form-control\" placeholder=\"Enter your designation\"\n                                            formControlName=\"designation\" required>\n                                    </div>&nbsp;&nbsp;&nbsp;\n                                    <label for=\"type\" class=\"col-sm-2 col-form-label text-nowrap\">Employment\n                                        type:</label>\n                                    <div class=\"col-xs-4\">\n                                        <select id=\"type\" name=\"type\" class=\"form-control\" formControlName=\"type\">\n                                            <option value=\"\" disabled selected hidden>Your employment type</option>\n                                            <option value=\"parttime\">Part-time</option>\n                                            <option value=\"fulltime\">Full-time</option>\n                                            <option value=\"internship\">Internship</option>\n                                        </select>\n                                    </div>\n\n                                    <div class=\"col-xs-4\">\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                                            (click)=\"addExperienceFormGroup()\" matTooltip=\"Add\">\n                                            <mat-icon>add_circle_outline</mat-icon>\n                                        </button>\n                                        <button class=\"float-left\" mat-icon-button color=\"primary\"\n                                            aria-label=\"Remove/clear\" (click)=\"removeOrClearExperience(i)\"\n                                            matTooltip=\"Remove\">\n                                            <mat-icon>highlight_off</mat-icon>\n                                        </button>\n                                    </div>\n\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label for=\"organization\"\n                                        class=\"col-sm-2 col-form-label text-nowrap\">Company:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"text\" id='organization' maxlength=\"20\" class=\"form-control\"\n                                            placeholder=\"Company name\" formControlName=\"organization\" required>\n                                    </div>&nbsp;&nbsp;&nbsp;\n                                    <label for=\"startDate\" class=\"col-sm-2 col-form-label text-nowrap\">Starting\n                                        date:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"date\" id=\"startDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\"\n                                            value=\"\" formControlName=\"startDate\" required>\n                                    </div>\n\n                                </div>\n                                <div class=\"form-group row\">\n                                    <label for=\"location\" class=\"col-sm-2 col-form-label text-nowrap\">Location:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input class=\"form-control\" id=\"location\" placeholder=\"Company location\"\n                                            type=\"text\" maxlength=\"15\" formControlName=\"location\" required>\n                                    </div>&nbsp;&nbsp;&nbsp;\n                                    <label for=\"endDate\" class=\"col-sm-2 col-form-label text-nowrap\">Ending\n                                        date:</label>\n                                    <div class=\"col-xs-4\">\n                                        <input type=\"date\" id=\"endDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\"\n                                            value=\"\" formControlName=\"endDate\" required>\n                                    </div>\n                                </div>\n\n                                <div class=\"form-group row\">\n                                    <div class=\"col-xs-4\">\n                                        <mat-checkbox class=\"col-12\" formControlName=\"current\" color=\"primary\">Currently\n                                            working here</mat-checkbox>\n                                    </div>\n                                </div>\n                                <hr>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext (click)=\"addExperienceDetails()\">Next</button>\n    </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CandidateService } from 'src/app/services/candidate.service';\nimport { Candidate } from 'src/app/models/candidate.model';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { LoggedInUser } from 'src/app/models/user';\n\n@Component({\n  selector: 'app-personal-form',\n  templateUrl: './personal-form.component.html',\n  styleUrls: ['./personal-form.component.scss']\n})\nexport class PersonalFormComponent implements OnInit {\n\n  @Input() personalDetailsForm: FormGroup;\n  isOptional = true;\n  isChecked = false;\n  profileData1 = this.authService.getUserDetails();\n  profileData2 = this.candidateService.getCandidateDetails();\n  email = this.profileData1 ? this.profileData1.username : null;\n  contact = this.profileData1 ? this.profileData1.contactnumber : null;\n  dob = this.profileData2 ? this.profileData2.dateOfBirth : null;\n  constructor(private fb: FormBuilder, private candidateService: CandidateService, private authService: AuthenticationService) { }\n\n  ngOnInit(): void {\n\n    this.personalDetailsForm = this.fb.group({\n      email: ['', Validators.required],\n      dob: ['', Validators.required],\n      country: ['', Validators.required],\n      contact: ['', Validators.required],\n      city: ['', Validators.required],\n      address: ['', Validators.required],\n      gender: ['', Validators.required],\n      summary: ['', Validators.required],\n      role: ['', Validators.required]\n    });\n\n    this.personalDetailsForm.patchValue({\n      email: this.email,\n      contact: this.contact,\n      dob: this.dob,\n      country: this.profileData2 ? this.profileData2.country : null,\n      city: this.profileData2 ? this.profileData2.city : null,\n      gender: this.profileData2 ? this.profileData2.gender : null,\n      summary: this.profileData2 ? this.profileData2.bio : null,\n      role: this.profileData1 ? this.profileData1.role : null,\n    });\n  }\n\n  addCandidateDetails(): void {\n\n    const candidateData: Candidate = {\n      id: null,\n      bio: this.personalDetailsForm.get('summary').value,\n      city: this.personalDetailsForm.get('city').value,\n      country: this.personalDetailsForm.get('country').value,\n      dateOfBirth: this.personalDetailsForm.get('dob').value,\n      gender: this.personalDetailsForm.get('gender').value,\n      profilePicture: null,\n      resume: null,\n      education: [],\n      project: [],\n      experience: [],\n      skills: [],\n      applications: [],\n    };\n\n    const userData: LoggedInUser = this.authService.getUserDetails();\n    userData.role = this.personalDetailsForm.get('role').value ? 'RECRUITER' : 'CANDIDATE';\n    userData.contactnumber = this.personalDetailsForm.get('contact').value;\n    userData.username = this.personalDetailsForm.get('email').value;\n\n    this.candidateService.setCandidateDetails(candidateData);\n    this.authService.updateUserDetails(userData);\n  }\n}\n","<form [formGroup]=\"personalDetailsForm\">\n    <div>\n        <div class=\"row\">\n            <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n                <div class=\"card border-0 rounded-0 h-100\">\n                    <div class=\"card-body\">\n                        <div class=\"form-group row\">\n                            <label for=\"email\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Email Address:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"\n                                    placeholder=\"Enter your email\" formControlName=\"email\" required>\n                            </div>\n\n                            <label for=\"contact\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">\n                                Contact Number:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input class=\"form-control\" id=\"contact\" placeholder=\"Contact number\" type=\"text\"\n                                    oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                    maxlength=\"10\" formControlName=\"contact\" required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"city\" class=\"col-sm-2 col-form-label text-nowrap\">City:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='city' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Enter your city\" formControlName=\"city\" required>\n                            </div>\n                            <label for=\"date\" class=\"offset-sm-1 col-sm-2 col-form-label text-nowrap\">Date of\n                                Birth:</label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"date\" id=\"date\" class=\"form-control\" placeholder=\"dd-mm-yyyy\" value=\"\"\n                                    formControlName=\"dob\" required>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"country\" class=\"col-sm-2 col-form-label text-nowrap\">\n                                Country:\n                            </label>\n                            <div class=\"col-xs-4\">\n                                <input type=\"text\" id='country' maxlength=\"30\"\n                                    onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                    class=\"form-control\" placeholder=\"Enter your nationality\" formControlName=\"country\"\n                                    required>\n                            </div>\n                            <label for=\"gender\" class=\"offset-sm-1 col-sm-2 radio control-label\">Gender:</label>\n                            <mat-radio-group formControlName=\"gender\" aria-label=\"Gender\" color=\"primary\">\n                                <mat-radio-button value=\"M\">Male</mat-radio-button> &nbsp;&nbsp;&nbsp;\n                                <mat-radio-button value=\"F\">Female</mat-radio-button>\n                            </mat-radio-group>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <label for=\"summary\" class=\"col-sm-2 col-form-label text-nowrap\">Summary:</label>\n                            <textarea id=\"summary\" class=\"col-sm-10 form-control\" name=\"summary\" maxlength=\"200\"\n                                formControlName=\"summary\" rows=\"3\" cols=\"30\">\n                                </textarea>\n                        </div>\n\n                        <div class=\"form-group row\">\n                            <mat-slide-toggle class=\"col-12\" [(ngModel)]=\"isChecked\" formControlName=\"role\"\n                                color=\"primary\">\n                                <div class=\"mt-4\">\n                                    Want to post jobs as well? <br>\n                                    <label class=\"text-info\">\n                                        {{isChecked ? 'Sure' : 'Will decide later'}}\n                                    </label>\n                                </div>\n                            </mat-slide-toggle>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div>\n        <button mat-button matStepperNext (click)=\"addCandidateDetails()\">Next</button>\n    </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormArray, FormControl, FormBuilder } from '@angular/forms';\nimport { Candidate } from 'src/app/models/candidate.model';\nimport { CandidateService } from 'src/app/services/candidate.service';\n\n@Component({\n  selector: 'app-project-form',\n  templateUrl: './project-form.component.html',\n  styleUrls: ['./project-form.component.scss']\n})\nexport class ProjectFormComponent implements OnInit {\n\n  @Input() projectDetailsForm: FormGroup;\n  data: Candidate;\n  constructor(private fb: FormBuilder, private candidateService: CandidateService) { }\n\n  ngOnInit(): void {\n    this.projectDetailsForm = this.fb.group({\n      project: this.fb.array([this.createProjectFormGroup()]),\n      skills: this.fb.array([this.createSkillFormGroup()])\n    });\n  }\n\n  public addSkillFormGroup() {\n    const skills = this.projectDetailsForm.get('skills') as FormArray;\n    skills.push(this.createSkillFormGroup());\n  }\n\n  public removeOrClearSkill(i: number) {\n    const skills = this.projectDetailsForm.get('skills') as FormArray;\n    if (skills.length > 1) {\n      skills.removeAt(i);\n    } else {\n      skills.reset();\n    }\n  }\n\n  private createSkillFormGroup(): FormGroup {\n    return new FormGroup({\n      skillName: new FormControl(''),\n      rating: new FormControl(''),\n    });\n  }\n\n  public addProjectFormGroup() {\n    const project = this.projectDetailsForm.get('project') as FormArray;\n    project.push(this.createProjectFormGroup());\n  }\n\n  public removeOrClearProject(i: number) {\n    const project = this.projectDetailsForm.get('project') as FormArray;\n    if (project.length > 1) {\n      project.removeAt(i);\n    } else {\n      project.reset();\n    }\n  }\n\n  private createProjectFormGroup(): FormGroup {\n    return new FormGroup({\n      name: new FormControl(''),\n      startDate: new FormControl(''),\n      endDate: new FormControl(''),\n      description: new FormControl(''),\n      ongoing: new FormControl(''),\n    });\n  }\n\n  addProjectDetails() {\n    if (this.projectDetailsForm.dirty) {\n      this.data = this.candidateService.getCandidateDetails();\n      this.data.project = this.projectDetailsForm.value.project;\n      this.data.skills = this.projectDetailsForm.value.skills;\n      this.candidateService.setCandidateDetails(this.data);\n    }\n  }\n\n}\n","<form [formGroup]=\"projectDetailsForm\">\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n        <div class=\"card border-0 rounded-0 h-100\">\n          <div class=\"card-title mb-1 p-3\">\n            <h5>Projects</h5>\n          </div>\n          <div class=\"card-body\">\n\n            <div formArrayName=\"project\">\n              <div *ngFor=\"let project of projectDetailsForm.get('project')['controls']; let i = index\"\n                [formGroupName]=\"i\">\n                <div class=\"form-group row\">\n                  <label for=\"name\" class=\"col-sm-2 col-form-label text-nowrap\">Project title {{i+1}}:</label>\n                  <div class=\"col-xs-6\">\n                    <input type=\"text\" id='name' class=\"form-control\" placeholder=\"Enter your project title\"\n                      formControlName=\"name\" required>\n                  </div>&nbsp;&nbsp;&nbsp;\n                  <label for=\"startDate\" class=\"col-sm-2 col-form-label text-nowrap\">Starting date:</label>\n                  <div class=\"col-xs-4\">\n                    <input type=\"date\" id=\"startDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\" value=\"\"\n                      formControlName=\"startDate\" required>\n                  </div>\n\n                  <div class=\"col-xs-4\">\n                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                      (click)=\"addProjectFormGroup()\" matTooltip=\"Add\">\n                      <mat-icon>add_circle_outline</mat-icon>\n                    </button>\n                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Remove/clear\"\n                      (click)=\"removeOrClearProject(i)\" matTooltip=\"Remove\">\n                      <mat-icon>highlight_off</mat-icon>\n                    </button>\n                  </div>\n\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"description\" class=\"col-sm-2 col-form-label text-nowrap\">Description:</label>\n                  <div class=\"col-xs-4\">\n                    <input type=\"text\" id='degree' class=\"form-control\" placeholder=\"Describe your project\"\n                      formControlName=\"description\" required>\n                  </div>&nbsp;&nbsp;&nbsp;\n                  <label for=\"endDate\" class=\"col-sm-2 col-form-label text-nowrap\">Ending date:</label>\n                  <div class=\"col-xs-4\">\n                    <input type=\"date\" id=\"endDate\" class=\"form-control\" placeholder=\"dd-mm-yyyy\" value=\"\"\n                      formControlName=\"endDate\" required>\n                  </div>\n                </div>\n\n                <div class=\"form-group row\">\n                  <div class=\"col-xs-4\">\n                    <mat-checkbox class=\"col-12\" formControlName=\"ongoing\" color=\"primary\">Ongoing</mat-checkbox>\n                  </div>\n                </div>\n\n                <hr>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-12 col-lg-12 mb-4 align-items-stretch\">\n        <div class=\"card border-0 rounded-0 h-100\">\n          <div class=\"card-title mb-1 p-3\">\n            <h5>Skills</h5>\n          </div>\n          <div class=\"card-body\">\n\n            <div class=\"form-group row\">\n              <label for=\"name\" class=\"col-sm-2 col-form-label text-nowrap\">Add your skills:</label>\n\n              <div formArrayName=\"skills\">\n                <div class=\"row\" *ngFor=\"let skill of projectDetailsForm.get('skills')['controls']; let i = index\"\n                  [formGroupName]=\"i\">\n                  <div class=\"col-xs-4\">\n                    <input class=\"form-control\" formControlName=\"skillName\" placeholder=\"Skills {{i+1}}\"\n                      autocomplete=\"skill\">\n                  </div>&nbsp;&nbsp;&nbsp;\n                  <div class=\"col-xs-4 pt-2\">\n                    <mat-radio-group formControlName=\"rating\" aria-label=\"rating\" color=\"primary\">\n                      <mat-radio-button value=\"1\">Novice</mat-radio-button> &nbsp;&nbsp;&nbsp;\n                      <mat-radio-button value=\"2\">Intermediate</mat-radio-button> &nbsp;&nbsp;&nbsp;\n                      <mat-radio-button value=\"3\">Advanced</mat-radio-button> &nbsp;&nbsp;&nbsp;\n                    </mat-radio-group>\n                  </div>\n\n                  <div class=\"col-xs-4\">\n                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Add\"\n                      (click)=\"addSkillFormGroup()\" matTooltip=\"Add\">\n                      <mat-icon>add_circle_outline</mat-icon>\n                    </button>\n                    <button class=\"float-left\" mat-icon-button color=\"primary\" aria-label=\"Remove/clear\"\n                      (click)=\"removeOrClearSkill(i)\" matTooltip=\"Remove\">\n                      <mat-icon>highlight_off</mat-icon>\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <button mat-button matStepperPrevious>Back</button>\n  <button mat-button matStepperNext (click)=\"addProjectDetails()\">Next</button>\n</form>\n\n<br>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"myFooter\">\n    <div class=\"container-fluid\">\n        <div class=\"row text-center\">\n            <div class=\"col-12\">\n                <ul class=\"list-unstyled\">\n                    <li><a href=\"javascript:void(0)\">About Us</a></li>\n                    <li><a href=\"javascript:void(0)\">Help Desk</a></li>\n                    <li><a href=\"javascript:void(0)\">FAQ</a></li>\n                    <li></li>\n                </ul>\n                <p class=\"footer-copyright\">© 2020 Copyright ~ Designed By &nbsp;VK</p>\n            </div>\n        </div>\n    </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-light navbar-expand-lg fixed-top bg-white clean-navbar\">\n    <div class=\"container\">\n        <div class=\"navbar-brand logo\">\n            <img src=\"assets\\img\\suitup-logo.png\" class=\"img-fluid w-25\" alt=\"Suit UP logo\">\n        </div>\n        <button data-toggle=\"collapse\" class=\"navbar-toggler\" data-target=\"#navcol-1\">\n            <span class=\"sr-only\">Toggle navigation</span>\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navcol-1\">\n            <ul class=\"nav navbar-nav ml-auto\">\n                <li class=\"nav-item\" role=\"presentation\">\n                    <a class=\"nav-link active\" routerLink='/register' routerLinkActive=\"active\">\n                        Register\n                    </a>\n                </li>\n                <li class=\"nav-item\" role=\"presentation\">\n                    <a class=\"nav-link active\" routerLink='/login' routerLinkActive=\"active\">\n                        Sign In\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <img src=\"assets/img/image-1.png\" class=\"col-6 img-fluid w-25\" />\n    <div class=\"offset-1 col-5 m-5\">\n\n      <div class=\"card card-light mb-4 mt-5\">\n        <div class=\"card-body\">\n          This is some text within a card body.\n        </div>\n      </div>\n\n      <div class=\"card card-light mb-4\">\n        <div class=\"card-body\">\n          This is some text within a card body.\n        </div>\n      </div>\n\n      <div class=\"card card-light mb-4\">\n        <div class=\"card-body\">\n          This is some text within a card body.\n        </div>\n      </div>\n      <div class=\"row\">\n        <img src=\"assets/img/logo-2.png\" class=\"offset-8 img-fluid w-50\" />\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Job } from '../models/jobs.model';\nimport { ApplicationService } from '../services/application.service';\nimport { CandidateService } from '../services/candidate.service';\nimport { Candidate } from '../models/candidate.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-jobcard',\n  templateUrl: './jobcard.component.html',\n  styleUrls: ['./jobcard.component.scss']\n})\nexport class JobcardComponent implements OnInit {\n  private candidateDetails: Candidate;\n  @Input() jobDetails: Job;\n  constructor(private http: HttpClient, private candidateService: CandidateService,\n    public applicationService: ApplicationService) { }\n\n  ngOnInit(): void {\n    this.candidateDetails = this.candidateService.getCandidateDetails();\n  }\n\n  applyforjob() {\n    this.applicationService.applyJobs(this.candidateDetails.id, this.jobDetails.jobId).subscribe(\n      (response) => {\n        this.candidateService.setCandidateDetails(response);\n      });\n\n  }\n\n  /*  withdrawfromjob(){\n      this.applicationService.withdrawJobs(this.candidateDetails.id  ).subscribe(\n        (response) => {\n        });\n    } */\n\n  savejob() {\n    this.applicationService.saveJobs(this.candidateDetails.id, this.jobDetails.jobId).subscribe(\n      (response) => {\n        this.candidateService.setCandidateDetails(response);\n      });\n\n  }\n\n}\n","<div class=\"card mb-4 pointer-link\" data-toggle=\"modal\" data-target=\"#myModal\">\n  <div class=\"card-body\">\n    <h5 class=\"row pl-2 text-muted\">{{jobDetails.companyName}}</h5>\n    <h6 class=\"row pl-2 mb-2 text-muted\">{{jobDetails.position}}</h6>\n    <div class=\"row text-muted pl-2\">\n      <i class=\"fa fa-briefcase p-1\"></i>\n      {{jobDetails.minimumExperience}} years |\n      <i class=\"fa fa-inr p-1\"></i>\n      INR {{jobDetails.compensation}} LPA |\n      <i class=\"fa fa-map-marker p-1\"></i>\n      {{jobDetails.location}}\n    </div>\n    <div class=\"row pl-2 mt-3\">\n      <a href=\"javascript:void(0)\" class=\"card-link\" (click)=\"applyforjob()\">Apply now</a>\n      <a href=\"javascript:void(0)\" class=\"card-link\" (click)=\"savejob()\">Save</a>\n    </div>\n  </div>\n</div>\n\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"myModal\" role=\"dialog\">\n  <div class=\"modal-dialog modal-lg\">\n\n    <!-- Modal content-->\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <h4 class=\"modal-title\">{{jobDetails.position}}</h4>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xs-3\">{{jobDetails.companyName}} </div>\n            <div class=\"offset-sm-1 col-xs-6\">Posted\n              on:\n              {{jobDetails.postedOn.toString().slice(0, 15)}}</div>\n          </div>\n        </div>\n\n\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n      </div>\n      <div class=\"modal-body\">\n        <h5>Job Description:</h5>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Position: </div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.description}}</div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Location: </div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.location}}</div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Desired Experience:</div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.minimumExperience}} years</div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Salary:</div>\n              <div class=\"col-xs-6 pl-1\">\n                <i class=\"fa fa-inr p-1\"></i>\n                {{jobDetails.compensation}} LPA\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Course Specialization:</div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.minimumEducation}}</div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Contact Person:</div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.pointOfContact}}</div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Skills\n                required:</div>\n              <div class=\"row\">\n                <li class=\"offset-sm-2 col-xs-6\" *ngFor=\"let skill of jobDetails.skillsRequired\">\n                  {{skill.name}} with {{skill.experience}} yrs experience\n                </li>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"offset-sm-1 col-xs-6\">Interview Process:</div>\n              <div class=\"row\">\n                <li class=\"offset-sm-2 col-xs-6\">Interview type: {{jobDetails.process.description}}</li>\n                <li class=\"offset-sm-2 col-xs-6\">Interview location: {{jobDetails.process.location}}</li>\n                <li class=\"offset-sm-2 col-xs-6\">No. of rounds: {{jobDetails.process.rounds.length}}</li>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"row\">\n              <div class=\"col-xs-6\">No. of vacancies:</div>\n              <div class=\"col-xs-6 pl-1\">{{jobDetails.vacancies}}</div>\n            </div>\n            <div class=\"row\">Interview Rounds Details:</div>\n            <div class=\"row ml-2\" *ngFor=\"let detail of jobDetails.process.rounds; let i = index\">\n              <div> Round {{i+1}}:</div>\n              <div class=\"row\">\n                <ul>\n                  <li>Round Description: {{detail.description}}</li>\n                  <li>Location: {{detail.location}}</li>\n                  <li>Duration: {{detail.duration}}</li>\n                  <li>Contact Person: {{detail.pointOfContact}}</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n\n\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-default\" (click)=\"applyforjob()\">Apply</button>\n          <button type=\"button\" class=\"btn btn-default\" (click)=\"savejob()\">Save</button>\n          <!--<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>-->\n        </div>\n      </div>\n\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JobService } from '../services/job.service';\nimport { Job } from '../models/jobs.model';\n\n@Component({\n  selector: 'app-jobs',\n  templateUrl: './jobs.component.html',\n  styleUrls: ['./jobs.component.css'],\n})\nexport class JobsComponent implements OnInit {\n  constructor(private http: HttpClient, public jobService: JobService) { }\n\n  jobList: Job[];\n\n  ngOnInit(): void {\n    this.jobService.getAllJobs().subscribe((response) => {\n      this.jobList = response;\n      console.log(response);\n    });\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-4\" *ngFor=\"let job of jobList\">\n            <app-jobcard [jobDetails]=\"job\"></app-jobcard>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Alerts } from '../constants/errors.constants';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n    public loginForm: FormGroup;\n    public invalidLogin: boolean;\n    public errorMessage: string;\n    public errorType: string;\n\n    constructor(\n        private formBuild: FormBuilder,\n        public authService: AuthenticationService,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        this.loginForm = this.formBuild.group({\n            username: ['', [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]],\n            password: ['', [Validators.required]],\n        });\n    }\n    get username() {\n        return this.loginForm.get('username');\n    }\n    get password() {\n        return this.loginForm.get('password');\n    }\n\n    public getUsername(): string {\n        return this.loginForm.value.username;\n    }\n\n    public getPassword(): string {\n        return this.loginForm.value.password;\n    }\n\n    public toSignup(): void {\n        this.router.navigate(['register']);\n    }\n\n    public onSubmit(): void {\n        this.authService\n            .authenticate(this.getUsername(), this.getPassword())\n            .subscribe(\n                (data) => {\n                    this.authService.setUserDetails(data);\n                    this.errorMessage = 'Logged In successfully';\n                    this.errorType = Alerts.SUCCESS;\n                    this.goToProfile();\n                },\n                (error) => {\n                    this.errorType = Alerts.DANGER;\n                    this.errorMessage = error.error.message;\n                }\n            );\n    }\n\n    goToProfile(): void {\n        this.router.navigate(['profile']);\n    }\n}\n","<div class=\"login-sign-body row justify-content-center\">\n    <div class=\"col-md-9 col-lg-12 col-xl-10\">\n        <div class=\"card shadow-lg o-hidden border-0 my-5\">\n            <div class=\"card-body p-0\">\n                <div class=\"row\">\n                    <div class=\"col-lg-6 d-none d-lg-flex\">\n                        <div class=\"flex-grow-1 lady-lips-gradient\">\n                            <img class=\"card-img-top img-fluid justify-content-center\" src=\"assets\\img\\bg-business.jpg\">\n                        </div>\n                    </div>\n                    <div class=\"col-lg-6\">\n                        <div class=\"p-5\">\n                            <div class=\"text-center\">\n                                <h4 class=\"text-dark mb-4\">Welcome Back!</h4>\n                            </div>\n                            <alert [type]=\"errorType\">\n                                {{errorMessage}}\n                            </alert>\n                            <form class=\"user\" [formGroup]=\"loginForm\" (submit)=\"onSubmit()\">\n                                <div class=\"form-group\">\n                                    <input class=\"form-control form-control-user\" formControlName=\"username\"\n                                        id=\"username\" placeholder=\"Enter Email Address...\" required />\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"text-danger\"\n                                        *ngIf=\"username.invalid && username.touched && username.dirty\">\n                                        Please enter valid email\n                                    </div>\n                                </div>\n                                <div class=\"form-group\"><input class=\"form-control form-control-user\" type=\"password\"\n                                        id=\"exampleInputPassword\" placeholder=\"Password\" formControlName=\"password\">\n                                </div>\n                                <div class=\"form-group\">\n                                    <div class=\"custom-control custom-checkbox small\">\n                                        <div class=\"form-check\"><input class=\"form-check-input custom-control-input\"\n                                                type=\"checkbox\" id=\"formCheck-1\">\n                                            <label class=\"form-check-label custom-control-label\" for=\"formCheck-1\">\n                                                Remember Me\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <button class=\"btn btn-primary btn-block text-white btn-user\" type=\"submit\">\n                                    Login\n                                </button>\n                                <hr>\n                            </form>\n                            <div class=\"text-center\">\n                                <a class=\"small\" href=\"javascript:void(0)\">\n                                    Forgot Password?\n                                </a>\n                            </div>\n                            <div class=\"text-center\">\n                                <a class=\"small\" (click)=\"toSignup()\">\n                                    Create an Account!\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../services/app.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { CandidateService } from '../services/candidate.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor(\n    private appService: AppService,\n    private authService: AuthenticationService,\n    private candidateService: CandidateService,\n    private router: Router\n  ) { }\n  isCollapsed = true;\n  ngOnInit(): void {\n  }\n\n  toggleSidebarPin(): void {\n    this.appService.toggleSidebarPin();\n  }\n\n  toggleSidebar(): void {\n    this.appService.toggleSidebar();\n  }\n\n  public logout(): void {\n    this.authService.setUserDetails(null);\n    this.candidateService.setCandidateDetails(null);\n    this.router.navigate(['login']);\n  }\n\n  goToSearch(): void {\n    this.router.navigate(['search']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md fixed-top navbar-dark flex-fill\">\n  <!-- <button class=\"sidebar-toggler ml-4\" type=\"button\">\n    <i class=\"fa fa-navicon\"></i>\n  </button> -->\n  <!-- header -->\n  <div class=\"navbar-header pl-2 pr-2 ml-3 text-center\">\n    <div class=\"navbar-brand m-0 w-100\">\n      <img src=\"assets\\img\\suitup-logo-light.png\" class=\"img-fluid w-50\" alt=\"Suit UP logo\" />\n    </div>\n  </div>\n  <!-- sidebar toggler -->\n  <div class=\"sidebar-toggler ml-auto mr-3\">\n    <a class=\"btn nav-link\" (click)=\"toggleSidebar()\"><i class=\"fa fa-bars\"></i></a>\n  </div>\n  <!-- right menu toggler -->\n  <div class=\"nav-toggler-right mr-4 d-md-none\">\n    <button class=\"\" type=\"button\" (click)=\"isCollapsed = !isCollapsed\" [attr.aria-expanded]=\"!isCollapsed\"\n      aria-controls=\"collapseBasic\">\n      <!-- <span class=\"navbar-toggler-icon\"></span> -->\n      <img src=\"./assets/img/user.jpg\" class=\"img-fluid\" alt=\"\" />\n    </button>\n    <span class=\"user-profile nav-alert bg-danger\"></span>\n  </div>\n  <!-- left box -->\n  <ul class=\"navbar-nav flex-fill mt-1 align-items-center left-nav\">\n    <li class=\"nav-item navicon\">\n      <a class=\"btn nav-link\" (click)=\"toggleSidebarPin()\"><i class=\"fa fa-bars\"></i></a>\n    </li>\n    <li class=\"nav-item flex-fill\" (click)=\"goToSearch()\">\n      <input class=\"form-control navbar-search\" type=\"text\" placeholder=\"Search . . .\" />\n    </li>\n  </ul>\n\n  <!-- right menu -->\n  <div class=\"collapse navbar-collapse right-nav\" id=\"collapseBasic\" [collapse]=\"isCollapsed\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"btn nav-link\">\n          <i class=\"far fa-bell\"></i>\n          <span class=\"link-text\">Alerts</span>\n          <!-- <span class=\"badge badge-pill ba dge-danger\">3</span> -->\n          <span class=\"nav-alert notifications\"></span>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"btn nav-link\">\n          <i class=\"far fa-envelope\"></i>\n          <span class=\"link-text\">Messages</span>\n          <!-- <span class=\"badge badge-pill badge-success\">5</span> -->\n          <span class=\"nav-alert messages\"></span>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"btn nav-link\">\n          <i class=\"far fa-user\"></i>\n          <span class=\"link-text\">Profile</span>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"btn nav-link\" (click)=\"logout()\">\n          <i class=\"fas fa-sign-out-alt\"></i>\n          <span class=\"link-text\">Log-Out</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Profile } from '../models/profile.model';\n\n@Component({\n  selector: 'app-profile-card',\n  templateUrl: './profile-card.component.html',\n  styleUrls: ['./profile-card.component.scss']\n})\nexport class ProfileCardComponent implements OnInit {\n\n  @Input() profileDetails: Profile;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.profileDetails.profilePicture = this.profileDetails.profilePicture ?\n      'data:image/jpeg;base64,' + this.profileDetails.profilePicture : undefined;\n  }\n\n}\n","<div class=\"card mb-4\">\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <img [src]=\"profileDetails.profilePicture\" class=\"img-fluid\">\n    </div>\n    <div class=\"col-8 card-body\">\n      <h5 class=\"card-title\">{{profileDetails.firstName}} {{profileDetails.lastName}}</h5>\n      <h6 class=\"card-subtitle mb-2 text-muted\">{{profileDetails.city}}, {{profileDetails.country}}</h6>\n      <!-- Button \n          <a class=\"btn-floating btn-action ml-auto mr-4 mdb-color lighten-3 waves-effect waves-light\">\n            <i class=\"fas fa-chevron-right pl-1\"></i>\n          </a>-->\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from '../services/candidate.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Candidate } from '../models/candidate.model';\nimport { LoggedInUser } from '../models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private candidateService: CandidateService, private authService: AuthenticationService, private router: Router) { }\n\n  userDetails: LoggedInUser;\n  candidateDetails: Candidate;\n\n  ngOnInit(): void {\n    this.candidateService.getCandidateProfile().subscribe(\n      (response) => {\n        this.candidateDetails = response;\n        this.candidateService.setCandidateDetails(this.candidateDetails);\n      },\n      (error) => {\n        if (error.error.code === 'CANDIDATE_DOES_NOT_EXIST') {\n          this.router.navigate(['editprofile']);\n        }\n      });\n    this.userDetails = this.authService.getUserDetails();\n  }\n\n  goToEdit() {\n    this.router.navigate(['editprofile']);\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-12 col-lg-6 mb-4 align-items-stretch\">\n    <div class=\"card border-0 rounded-0 h-100\">\n      <div class=\"card-title mb-1 px-3 pt-3\">\n        <div class=\"row\">\n          <h4 class=\"col-lg-6 pt-2\">Personal Details</h4>\n          <div class=\"col-lg-6\">\n            <a class=\"btn btn-outline-lightning rounded-0 px-2 py-1 waves-effect waves-light float-right\"\n              (click)=\"goToEdit()\">\n              <i class=\"far fa-edit\"></i>\n            </a>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"row mb-1\">\n            <div class=\"col-4 p-0\">Date of Birth:</div>\n            <div class=\"col-8\">{{candidateDetails.dateOfBirth | date}}</div>\n          </div>\n          <div class=\"row mb-1\">\n            <div class=\"col-4 p-0\">Gender:</div>\n            <div class=\"col-8\">{{candidateDetails.gender}}</div>\n          </div>\n          <div class=\"row mb-1\">\n            <div class=\"col-4 p-0\">Lcation:</div>\n            <div class=\"col-8\">{{candidateDetails.city}}, {{candidateDetails.country}}</div>\n          </div>\n          <div class=\"row mb-1\">\n            <div class=\"col-4 p-0\">Email:</div>\n            <div class=\"col-8\">{{userDetails.username}}</div>\n          </div>\n          <div class=\"row mb-1\">\n            <div class=\"col-4 p-0\">Contact Number:</div>\n            <div class=\"col-8\">{{userDetails.contactnumber}}</div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card-title mb-1 px-3\">\n        <div class=\"row\">\n          <h4 class=\"col-lg-6 pt-2\">Education Details</h4>\n          <div class=\"col-lg-6\">\n            <a class=\"btn btn-outline-lightning rounded-0 px-2 py-1 waves-effect waves-light float-right\">\n              <i class=\"far fa-edit\"></i>\n            </a>\n          </div>\n        </div>\n        <div *ngIf=\"candidateDetails.education.length > 0; else addEducation\">\n          <div class=\"card-body pb-0\" *ngFor=\"let data of candidateDetails.education; let i = index\">\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Institution {{i+1}}:</div>\n              <div class=\"col-8\">{{data.institution}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Board/Degree:</div>\n              <div class=\"col-8\">{{data.degree}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Major:</div>\n              <div class=\"col-8\">{{data.description}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Percentage/CGPA:</div>\n              <div class=\"col-8\">{{data.percentage}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Course Duration:</div>\n              <div class=\"col-8\">{{data.startDate | date}} - {{data.endDate | date}}</div>\n            </div>\n          </div>\n        </div>\n        <ng-template #addEducation>\n          <div class=\"card-body\">\n            <alert type=\"info\">Add your academic details.</alert>\n          </div>\n        </ng-template>\n      </div>\n      <div class=\"card-title mb-1 px-3\">\n        <div class=\"row\">\n          <h4 class=\"col-lg-12 pt-2\">Your Skills:</h4>\n          <div class=\"card-body pt-1\">\n            <mat-chip-list>\n              <mat-chip *ngFor=\"let skill of candidateDetails.skills\">\n                {{skill.skillName}}\n              </mat-chip>\n            </mat-chip-list>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-12 col-lg-6 mb-4 align-items-stretch pl-0\">\n    <div class=\"card border-0 rounded-0 h-100\">\n      <div class=\"card-title mb-1 px-3 pt-3 pb-2\">\n        <div class=\"row\">\n          <h4 class=\"col-lg-6 pt-2\">Experience Details:</h4>\n          <div class=\"col-lg-6\">\n            <a class=\"btn btn-outline-lightning rounded-0 px-2 py-1 waves-effect waves-light float-right\">\n              <i class=\"far fa-edit\"></i>\n            </a>\n          </div>\n        </div>\n        <div *ngIf=\"candidateDetails.experience.length > 0;else addExperience\">\n          <div class=\"card-body pb-0\" *ngFor=\"let data of candidateDetails.experience; let i = index\">\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Organization {{i+1}}:</div>\n              <div class=\"col-8\">{{data.organization}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Position/Role:</div>\n              <div class=\"col-8\">{{data.designation}}</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Employement Type:</div>\n              <div class=\"col-8\">{{data.type}}</div>\n            </div>\n            <div class=\"row mb-1\" *ngIf=\"data.endDate && !data.current\">\n              <div class=\"col-4 p-0\">Period:</div>\n              <div class=\"col-8\">{{data.startDate | date}} - {{data.endDate | date}}</div>\n            </div>\n            <div class=\"row mb-1\" *ngIf=\"data.current\">\n              <div class=\"col-12 p-0\">I am currently working here since {{data.startDate | date}}.</div>\n            </div>\n          </div>\n        </div>\n        <ng-template #addExperience>\n          <div class=\"card-body\">\n            <alert type=\"info\">Tell us where you worked.</alert>\n          </div>\n        </ng-template>\n      </div>\n\n      <div class=\"card-title mb-1 px-3\">\n        <div class=\"row\">\n          <h4 class=\"col-lg-6 pt-2\">Your Projects</h4>\n          <div class=\"col-lg-6\">\n            <a class=\"btn btn-outline-lightning rounded-0 px-2 py-1 waves-effect waves-light float-right\">\n              <i class=\"far fa-edit\"></i>\n            </a>\n          </div>\n        </div>\n        <div *ngIf=\"candidateDetails.project.length > 0; else addProject\">\n          <div class=\"card-body\" *ngFor=\"let data of candidateDetails.project; let i = index\">\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">Title {{i+1}}:</div>\n              <div class=\"col-8\">{{data.name}} ({{data.startDate | date}} - {{data.endDate | date}})</div>\n            </div>\n            <div class=\"row mb-1\">\n              <div class=\"col-4 p-0\">About:</div>\n              <div class=\"col-8\">{{data.description}}</div>\n            </div>\n          </div>\n        </div>\n        <ng-template #addProject>\n          <div class=\"card-body\">\n            <alert type=\"info\">Add projects to showcase your work.</alert>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Job } from '../models/jobs.model';\nimport { CandidateService } from '../services/candidate.service';\nimport { Status } from '../constants/application.constants';\n\n@Component({\n  selector: 'app-saved-jobs',\n  templateUrl: './saved-jobs.component.html',\n  styleUrls: ['./saved-jobs.component.css']\n})\nexport class SavedJobsComponent implements OnInit {\n  constructor(private http: HttpClient, private candidateService: CandidateService) { }\n  jobList: Job[];\n  ngOnInit(): void {\n    const list = this.candidateService.statusfilter(Status.SAVE);\n    this.jobList = list.map(item => item.job);\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-4\" *ngFor=\"let job of jobList\">\n            <app-jobcard [jobDetails]=\"job\"></app-jobcard>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from '../services/candidate.service';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Candidate } from '../models/candidate.model';\nimport { Profile } from '../models/profile.model';\n\n@Component({\n  selector: 'app-search-area',\n  templateUrl: './search-area.component.html',\n  styleUrls: ['./search-area.component.scss'],\n})\nexport class SearchAreaComponent implements OnInit {\n  profiles: Profile[];\n  constructor(\n    private candidateService: CandidateService,\n    private authService: AuthenticationService\n  ) { }\n\n  ngOnInit(): void {\n    this.candidateService.getAllCandidates().subscribe(\n      (response) => {\n        this.profiles = response;\n      });\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-4\" *ngFor=\"let profile of profiles\">\n            <app-profile-card [profileDetails]=\"profile\"></app-profile-card>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  isSidebarPinned = false;\n  isSidebarToggeled = false;\n\n  constructor() { }\n\n  toggleSidebar() {\n    this.isSidebarToggeled = !this.isSidebarToggeled;\n  }\n\n  toggleSidebarPin() {\n    this.isSidebarPinned = !this.isSidebarPinned;\n  }\n\n  getSidebarStat() {\n    return {\n      isSidebarPinned: this.isSidebarPinned,\n      isSidebarToggeled: this.isSidebarToggeled\n    };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { CandidateService } from '../services/candidate.service';\nimport { Observable } from 'rxjs';\nimport { Candidate } from '../models/candidate.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicationService {\n\n  constructor(private http: HttpClient, private authService: AuthenticationService, private candidateService: CandidateService) { }\n  applyUrl = environment.baseUrl + 'apply';\n  withdrawUrl = environment.baseUrl + 'withdraw';\n  saveUrl = environment.baseUrl + 'save';\n\n  applyJobs(canId: number, jobId: number): Observable<Candidate> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.applyUrl + '/' + canId + '/' + jobId;\n    return this.http.post<Candidate>(url, { headers });\n  }\n\n  withdrawJobs(appId: number): Observable<Candidate> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.withdrawUrl + '/' + appId;\n    return this.http.post<Candidate>(url, { headers });\n  }\n\n  saveJobs(canId: number, jobId: number): Observable<Candidate> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.saveUrl + '/' + canId + '/' + jobId;\n    return this.http.post<Candidate>(url, { headers });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService: AuthenticationService, private router: Router) { }\n\n  canActivate(): boolean {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate(['login']);\n      console.log('HI')\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { LoggedInUser } from '../models/user';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthenticationService {\n\n    private authenticationApiUrl: string = environment.baseUrl + 'authenticate';\n    private userDetails: LoggedInUser;\n\n    constructor(private httpClient: HttpClient, public router: Router) { }\n\n    public getUserDetails() {\n        return this.userDetails;\n    }\n\n    public setUserDetails(userDetails: LoggedInUser) {\n        this.userDetails = userDetails;\n    }\n\n    updateUserDetails(userData: LoggedInUser): Observable<boolean> {\n        let headers = new HttpHeaders();\n        headers = headers.set('Authorization', 'Bearer ' + this.getUserDetails().token);\n        const url: string = environment.baseUrl + 'user';\n        return this.httpClient.put<boolean>(url, userData, { headers });\n    }\n\n    authenticate(user: string, password: string): Observable<LoggedInUser> {\n        let headers = new HttpHeaders();\n        headers = headers.set('Authorization', 'Basic ' + btoa(user + ':' + password));\n        return this.httpClient.get<LoggedInUser>(this.authenticationApiUrl, { headers });\n    }\n\n    public isLoggedIn(): boolean {\n        if (this.getUserDetails()) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { Observable } from 'rxjs';\nimport { Candidate, Education, Experience, Project, Skill } from '../models/candidate.model';\nimport { environment } from 'src/environments/environment';\nimport { Profile } from '../models/profile.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CandidateService {\n\n  constructor(private http: HttpClient, private authService: AuthenticationService) { }\n  private candidateDetails: Candidate;\n\n  candidateUrl = environment.baseUrl + 'profile';\n  commonUrl = environment.baseUrl + 'edit';\n  educationUrl = 'education';\n  experienceUrl = 'project';\n  projectUrl = 'experience';\n  skillUrl = 'skills';\n  profilePicture: any;\n\n  getCandidateDetails(): Candidate {\n    return this.candidateDetails;\n  }\n\n  setCandidateDetails(candidateDetails: Candidate): void {\n    this.candidateDetails = candidateDetails;\n  }\n\n  getCandidateProfile(): Observable<Candidate> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.candidateUrl + '/' + this.authService.getUserDetails().id;\n    return this.http.get<Candidate>(url, { headers });\n  }\n\n  addCandidateDetails(candidateDetails: Candidate): Observable<Candidate> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.candidateUrl + '/' + this.authService.getUserDetails().id;\n    return this.http.post<Candidate>(url, candidateDetails, { headers });\n  }\n\n  updateEducationDetails(EducationDetails: Education): Observable<Education> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.commonUrl + '/' + this.getCandidateDetails().id + '/' + this.educationUrl;\n    return this.http.post<Education>(url, EducationDetails, { headers });\n  }\n\n  updateExperienceDetails(ExperienceDetails: Experience): Observable<Experience> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.commonUrl + '/' + this.getCandidateDetails().id + '/' + this.experienceUrl;\n    return this.http.post<Experience>(url, ExperienceDetails, { headers });\n  }\n\n  updateProjectDetails(ProjectDetails: Project): Observable<Project> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.commonUrl + '/' + this.getCandidateDetails().id + '/' + this.projectUrl;\n    return this.http.post<Project>(url, ProjectDetails, { headers });\n  }\n\n  updateSkillDetails(SkillDetails: Skill): Observable<Skill> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    const url: string = this.commonUrl + '/' + this.getCandidateDetails().id + '/' + this.skillUrl;\n    return this.http.post<Skill>(url, SkillDetails, { headers });\n  }\n\n  statusfilter(status: string) {\n    const list = this.getCandidateDetails().applications.filter(item => item.status === status);\n    return list;\n  }\n\n  uploadFile(file: FormData): Observable<any> {\n    console.log(file);\n    const url = this.candidateUrl + '/image/' + this.candidateDetails.id;\n    return this.http.post<any>(url, file);\n  }\n\n  getProfilePicture(): string {\n    const url = this.candidateUrl + '/image/' + this.candidateDetails.id;\n    let retrieveResonse;\n    this.http.get(url).subscribe(\n      (response) => { retrieveResonse = 'data:image/jpeg;base64,' + response; });\n    this.profilePicture = retrieveResonse;\n    return retrieveResonse;\n  }\n\n  getAllCandidates(): Observable<Profile[]> {\n    const url = this.candidateUrl + '/all';\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this.authService.getUserDetails().token);\n    return this.http.get<Profile[]>(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Job } from '../models/jobs.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService {\n\n  constructor(private http: HttpClient) { }\n\n  readonly endpoint = 'jobs';\n  jobUrl: string = environment.baseUrl + this.endpoint;\n\n  getAllJobs(): Observable<Job[]> {\n    return this.http.get<Job[]>(this.jobUrl);\n  }\n\n  getJobById(id: number): Observable<Job> {\n    return this.http.get<Job>(this.jobUrl + id);\n  }\n\n  addJob(job: Job): Observable<Job> {\n    return this.http.post<Job>(this.jobUrl, job);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n// import { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../models/user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SignUpService {\n\n    public url: string = environment.baseUrl + \"signUp\";\n    public isRecruiter: boolean;\n    constructor(private _httpClient: HttpClient) { }\n\n    addUser(user: User): Observable<any> {\n        return this._httpClient.post<any>(this.url, user)\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { CandidateService } from '../services/candidate.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { UploadFileComponent } from '../upload-file/upload-file.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.scss']\n})\nexport class SideBarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthenticationService,\n    public candidateService: CandidateService,\n    private dialog: MatDialog,\n    private router: Router\n  ) { }\n\n  firstname: string;\n  lastname: string;\n  headLine: string;\n  ngOnInit(): void {\n    this.detailsInit();\n  }\n\n  changePicture(): void {\n    const dialogConfig = new MatDialogConfig();\n    this.dialog.open(UploadFileComponent, dialogConfig);\n  }\n\n  detailsInit(): void {\n    if (this.authService.getUserDetails()) {\n      this.firstname = this.authService.getUserDetails().firstname;\n      this.lastname = this.authService.getUserDetails().lastname;\n    }\n    this.candidateService.getCandidateProfile().subscribe(\n      (response) => {\n        this.headLine = response.experience[0].designation;\n        this.candidateService.setCandidateDetails(response);\n      },\n      (error) => {\n        if (error.error.code === 'CANDIDATE_DOES_NOT_EXIST') {\n          this.router.navigate(['editprofile']);\n        }\n      });\n    this.headLine = !this.headLine ? this.authService.getUserDetails().role : undefined;\n  }\n\n}\n","<aside class=\"sidebar shadow-sm\">\n\n  <div class=\"sidebar-profile d-flex flex-column justify-content-center pt-5 pb-3\">\n    <div class=\"picture-wrapper mb-4\">\n      <div class=\"user-picture m-auto pointer-link\" (click)=\"changePicture()\">\n        <div *ngIf=\"this.candidateService.profilePicture\">\n          <img [src]=\"this.candidateService.profilePicture\" class=\"img-fluid\">\n        </div>\n        <div *ngIf=\"!this.candidateService.profilePicture\">\n          <img src=\"./assets/img/user.jpg\" class=\"img-fluid\">\n        </div>\n      </div>\n    </div>\n    <div class=\"profile-details text-center pb-4\">\n      <p class=\"mb-0 text-uppercase name\">{{firstname}} {{lastname}}</p>\n      <small class=\"text-uppercase role\">{{headLine}}</small>\n    </div>\n  </div>\n  <nav class=\"sidebar-menu pt-3 pb-3\">\n    <div class=\"menu-header mt-3 mb-2\">\n      Components\n    </div>\n    <ul class=\"menu-items\">\n      <li>\n        <a routerLink=\"/dashboard\" routerLinkActive=\"active\">\n          <i class=\"fa fa-tv\"></i>\n          <span>Dashboard</span>\n        </a>\n      </li>\n      <li>\n        <a routerLink=\"/profile\" routerLinkActive=\"active\">\n          <i class=\"fas fa-user\"></i>\n          <span>Profile</span>\n        </a>\n      </li>\n      <li>\n        <a routerLink=\"/addjobs\" routerLinkActive=\"active\">\n          <i class=\"fas fa-envelope\"></i>\n          <span class=\"dropdown-btn\">Post Jobs</span>\n        </a>\n      </li>\n      <li>\n        <a routerLink=\"/jobs\" routerLinkActive=\"active\">\n          <i class=\"fas fa-envelope\"></i>\n          <span class=\"dropdown-btn\">Jobs</span>\n        </a>\n      </li>\n      <li>\n        <a routerLink=\"/appliedjobs\" routerLinkActive=\"active\">\n          <i class=\"fas fa-check-circle\"></i>\n          <span class=\"dropdown-btn\">Applied Jobs</span>\n        </a>\n      </li>\n      <li>\n        <a routerLink=\"/savedjobs\" routerLinkActive=\"active\">\n          <i class=\"fas fa-bookmark\"></i>\n          <span class=\"dropdown-btn\">Saved Jobs</span>\n        </a>\n      </li>\n    </ul>\n  </nav>\n\n</aside>","import { Component, OnInit, Input } from '@angular/core';\nimport {\n    FormGroup,\n    FormBuilder,\n    Validators,\n    FormControl,\n} from '@angular/forms';\nimport { User } from '../models/user';\nimport { SignUpService } from '../services/sign-up.service';\nimport { Router } from '@angular/router';\nimport { Alerts } from '../constants/errors.constants';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n    selector: 'app-sign-up',\n    templateUrl: './sign-up.component.html',\n    styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit {\n    public signUpForm: FormGroup;\n    public user: User;\n    public userCreated: boolean = null;\n    public errorMessage: string;\n    public errorType: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private signUpService: SignUpService,\n        private router: Router,\n        private authService: AuthenticationService\n    ) { }\n\n    ngOnInit() {\n        this.signUpForm = this.formBuilder.group({\n            username: ['', [Validators.required, this.isUsernameTaken, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]],\n            firstname: ['', [Validators.required]],\n            lastname: ['', [Validators.required]],\n            password: ['', [Validators.required]],\n            confirmPassword: [\n                '',\n                [Validators.required, this.matchConfirmPassword.bind(this)],\n            ],\n            contact: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\n        });\n    }\n    public get username() {\n        return this.signUpForm.get('username');\n    }\n\n    public get firstname() {\n        return this.signUpForm.get('firstname');\n    }\n\n    public get lastname() {\n        return this.signUpForm.get('lastname');\n    }\n\n    public get password() {\n        return this.signUpForm.get('password');\n    }\n\n    public get confirmPassword() {\n        return this.signUpForm.get('confirmPassword');\n    }\n\n    public get contact() {\n        return this.signUpForm.get('contact');\n    }\n\n    public matchConfirmPassword(\n        formControl: FormControl\n    ): { [s: string]: boolean } {\n        if (this.signUpForm) {\n            if (\n                formControl.value &&\n                formControl.value.length > 0 &&\n                formControl.value !== this.signUpForm.get('password').value\n            ) {\n                return { nomatch: true };\n            }\n        }\n        return null;\n    }\n\n    isUsernameTaken(formControl: FormControl): { [s: string]: boolean } {\n        if (formControl.value === 'admin') {\n            return { userNameTaken: true };\n        } else {\n            return null;\n        }\n    }\n\n    public goToLogin(): void {\n        this.router.navigate(['login']);\n    }\n\n    public addUser(): void {\n        this.user = {\n            id: null,\n            firstName: this.signUpForm.get('firstname').value,\n            lastName: this.signUpForm.get('lastname').value,\n            password: this.signUpForm.get('password').value,\n            userName: this.signUpForm.get('username').value,\n            contactNumber: this.signUpForm.get('contact').value,\n            role: undefined\n        };\n        this.signUpService.addUser(this.user).subscribe(\n            (data) => {\n                this.authService.setUserDetails(data);\n                this.userCreated = true;\n                this.errorType = Alerts.SUCCESS;\n                this.errorMessage = 'Signed Up Successfull.' + 'Logging you in.';\n                setTimeout(() => {\n                    this.navigateToEditProfile();\n                }, 1000);\n            },\n            (error) => {\n                if (error.status === 500) {\n                    this.errorType = Alerts.DANGER;\n                    this.errorMessage = error.error.message;\n                    this.userCreated = false;\n                }\n            }\n        );\n    }\n\n    public navigateToLogin(): void {\n        this.router.navigate(['login']);\n    }\n\n    public navigateToEditProfile(): void {\n        this.router.navigate(['editprofile']);\n    }\n}\n","<div class=\"login-sign-body row justify-content-center\">\n    <div class=\"col-md-9 col-lg-12 col-xl-10\">\n        <div class=\"card shadow-lg o-hidden border-0 my-5\">\n            <div class=\"card-body p-0\">\n                <div class=\"row\">\n                    <div class=\"col-lg-5 d-none d-lg-flex\">\n                        <div class=\"flex-grow-1 near-moon-gradient\">\n                            <img class=\"card-img-top img-fluid justify-content-center\" src=\"assets\\img\\bg-business.jpg\">\n                        </div>\n                    </div>\n                    <div class=\"col-lg-7\">\n                        <div class=\"p-5\">\n                            <div class=\"text-center\">\n                                <h4 class=\"text-dark mb-4\">Create an Account!</h4>\n                            </div>\n                            <alert [type]=\"errorType\">\n                                {{errorMessage}}\n                            </alert>\n                            <form class=\"user\" [formGroup]=\"signUpForm\" (submit)=\"addUser()\">\n                                <div class=\"form-group row\">\n                                    <div class=\"col-sm-6 mb-3 mb-sm-0\"><input class=\"form-control form-control-user\"\n                                            type=\"text\" id=\"exampleFirstName\" placeholder=\"First Name\"\n                                            onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                            formControlName=\"firstname\" minlength=\"3\" maxlength=\"30\" required>\n                                    </div>\n                                    <div class=\"col-sm-6\"><input class=\"form-control form-control-user\" type=\"text\"\n                                            id=\"exampleFirstName\" placeholder=\"Last Name\" formControlName=\"lastname\"\n                                            onkeypress='return ((event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode == 32))'\n                                            minlength=\"3\" maxlength=\"30\" required>\n                                    </div>\n                                    <div *ngIf=\"firstname.invalid && (firstname.dirty || firstname.touched)\"\n                                        class=\"offset-sm-1 text-danger\">\n\n                                        <div *ngIf=\"firstname.errors.required\">\n                                            First name is required.\n                                        </div>\n                                        <div *ngIf=\"firstname.errors.minlength\">\n                                            First name must be at least 3 characters long.\n                                        </div>\n                                    </div>\n\n                                    <div *ngIf=\"lastname.invalid && (lastname.dirty || lastname.touched)\"\n                                        class=\"offset-sm-1 text-danger\">\n                                        <div *ngIf=\"lastname.errors.required\">\n                                            Last name is required.\n                                        </div>\n                                        <div *ngIf=\"lastname.errors.minlength\">\n                                            Last name must be at least 3 characters long.\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-sm-6\"><input class=\"form-control form-control-user\" type=\"email\"\n                                            id=\"exampleInputEmail\" aria-describedby=\"emailHelp\"\n                                            placeholder=\"Email Address\" formControlName=\"username\" required>\n                                    </div>\n                                    <div class=\"col-sm-6\"><input class=\"form-control form-control-user\" type=\"text\"\n                                            id=\"exampleContact\" placeholder=\"Contact Number\" maxlength=\"10\"\n                                            oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\"\n                                            formControlName=\"contact\" required>\n                                    </div>\n                                    <div class=\"offset-sm-1 text-danger\"\n                                        *ngIf=\"username.invalid && username.touched && username.dirty\">\n                                        Please enter valid email\n                                    </div>\n                                    <div class=\"offset-sm-1 text-danger\"\n                                        *ngIf=\"contact.invalid && contact.touched && contact.dirty\">\n                                        Please enter valid mobile number\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-sm-6 mb-3 mb-sm-0\">\n                                        <input class=\"form-control form-control-user\" type=\"password\"\n                                            id=\"examplePasswordInput\" minlength=\"5\" maxlength=\"30\"\n                                            placeholder=\"Password\" formControlName=\"password\" required>\n                                    </div>\n                                    <div class=\"col-sm-6\"><input class=\"form-control form-control-user\" type=\"password\"\n                                            id=\"exampleRepeatPasswordInput\" placeholder=\"Repeat Password\"\n                                            formControlName=\"confirmPassword\" required>\n                                    </div>\n                                    <div class=\"offset-sm-1 text-danger\"\n                                        *ngIf=\"confirmPassword.invalid && confirmPassword.errors.required && confirmPassword.touched\">\n                                        Confirm the Password</div>\n                                    <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n                                        class=\"offset-sm-1 text-danger\">\n                                        <div *ngIf=\"password.errors.minlength\">\n                                            Password must be at least 5 characters long.\n                                        </div>\n                                    </div>\n                                    <div class=\"offset-sm-1 text-danger\"\n                                        *ngIf=\"signUpForm.get('confirmPassword').hasError('nomatch')\">\n                                        Password\n                                        and Confirm Password do not match</div>\n                                </div>\n                                <button class=\"btn btn-primary btn-block text-white btn-user\"\n                                    [disabled]=\"signUpForm.invalid\" type=\"submit\">\n                                    Register Account\n                                </button>\n                                <hr>\n                            </form>\n                            <div class=\"row\">\n                                <div class=\"col-4\">\n                                    <a class=\"small\" href=\"javascript:void(0)\">Forgot Password?</a>\n                                </div>\n                                <div class=\"small offset-3 col-5\">Already have an account?\n                                    <a (click)=\"goToLogin()\"> Login!</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CandidateService } from '../services/candidate.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-upload-file',\n  templateUrl: './upload-file.component.html',\n  styleUrls: ['./upload-file.component.scss']\n})\nexport class UploadFileComponent implements OnInit {\n\n\n  constructor (private candidateService: CandidateService, public dialogRef: MatDialogRef<UploadFileComponent>) { }\n  selectedFile: File;\n  picture: any;\n  ngOnInit(): void {\n\n  }\n\n  onFileChanged(event): void {\n    this.selectedFile = event.target.files[0];\n    const uploadData = new FormData();\n    uploadData.append('imageFile', this.selectedFile);\n    this.candidateService.uploadFile(uploadData).subscribe(\n      response => {\n        console.log(response);\n        this.candidateService.profilePicture = 'data:image/jpeg;base64,' + response.profilePicture;\n        this.picture = this.candidateService.profilePicture;\n      }\n    );\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n}\n","<div row>\n    <div class=\"col-12\">\n        Select a file from your computer.\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-12\" *ngIf=\"selectedFile.name\">\n        {{this.selectedFile.name}}\n    </div>\n    <input style=\"display: none\" type=\"file\" (change)=\"onFileChanged($event)\" #hiddenfileinput>\n    <button (click)=\"hiddenfileinput.click()\" class=\"waves-effect waves-light btn\">\n        <i class=\"material-icons left\">cloud</i>\n        Browse\n    </button>\n</div>\n<div class=\"row mt-3\" *ngIf=\"picture\" class=\"image-container\">\n    <img [src]=\"picture\" class=\"img-fluid\">\n</div>\n<div class=\"row mt-3\" *ngIf=\"picture\">\n    <a class=\"btn btn-outline-lightning rounded-0 px-2 py-1 waves-effect waves-light float-right\" (click)=\"close()\">\n        <i class=\"far fa-edit\"> Done </i>\n    </a>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8083/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}